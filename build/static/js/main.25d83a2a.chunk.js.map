{"version":3,"sources":["styles.js","views/Home/index.js","components/Draw/index.js","components/StyledInput/index.js","views/Draw/index.js","utils/qs/index.js","utils/math/getColor.js","utils/math/ignoreList.js","utils/math/mathml.js","utils/math/index.js","utils/localStorage.js","components/MathML/index.js","components/ObjectProperty/index.js","components/StyledTextarea/index.js","components/ObjectCreator/index.js","components/TableGenerator/index.js","components/RightFloater/index.js","components/buttons/Search/index.js","components/buttons/Save/index.js","components/buttons/Material/index.js","components/buttons/Forge/index.js","components/buttons/Command/index.js","components/buttons/Review/index.js","components/DataGrid/index.js","components/Graph/index.js","components/Accordion/index.js","components/FunctionSearch/index.js","views/Equation/index.js","containers/qsContext.js","components/Cell/index.js","components/Autocomplete/index.js","components/EditCell/index.js","views/Sheet/index.js","views/Space/index.js","components/Header/index.js","components/Help/index.js","components/buttons/Help/index.js","components/HelpSheet/index.js","components/HelpEquation/index.js","views/App/index.js","utils/registerServiceWorker.js","index.js","icons/pickaxe.svg","icons/anvil.svg","icons/crown.svg","icons/easel.svg"],"names":["primaryColor","extraLightGreen","lightOrange","extraLightOrange","inputFocus","inputShadow","inputStyle","buttonHover","message","offset","StyledMessage","styled","div","Title","StyledLine","StyledLink","styles","Overview","style","fontWeight","to","Draw","props","imageDataUrl","setContext","width","height","penColor","penWidth","penType","useState","positionX","setPositionX","positionY","setPositionY","mouseDown","setMouseDown","sketchElement","useRef","drawWithState","canvas","x","y","startX","startY","endX","endY","context","getContext","beginPath","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","drawLine","setPositionAndDraw","event","draw","boundingRect","current","getBoundingClientRect","changedTouches","Object","values","forEach","touch","clientX","left","clientY","top","focus","blur","pageX","window","pageXOffset","pageY","pageYOffset","useEffect","img","Image","src","onload","drawImage","ref","assign","touchAction","outline","tabIndex","onMouseMove","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","StyledInput","input","StyledDrawView","StyledDrawControls","StyledLabel","label","StyledNumberInput","StyledButton","DrawView","innerWidth","innerHeight","setPenWidth","setPenColor","localStorage","getItem","className","type","value","onClick","clearRect","placeholder","onChange","target","setItem","toDataURL","objectFromHistory","obj","res","keys","prop","text","t","unit","u","c","urlToObject","url","JSON","parse","decodeURI","replace","getEquationFromUrl","urlObject","columnSettingsFromHistory","columnSettings","newColumnSettings","column","newSetting","s","start","i","interval","passToHistory","history","generatorSettings","pushToHistory","newContext","objectToHistory","hasProps","parseInt","l","right","r","somethingWasAdded","shouldAdd","columnSettingsToHistory","newContextString","stringify","length","push","getColor","total","charCodeAt","g","b","color","Math","max","intToHex","hex","toString","ignoreList","mathmlWrapper","title","colorVariable","variable","varText","shouldSub","variableSubscript","subscript","findVarRegex","subMatch","match","slice","RegExp","removeSpace","expandVariableWithColor","expanded","rows","reduce","acc","row","cellAcc","cell","test","addMiMaybe","mathmlTable","extrapolateMathml","beautifyGlobal","padSpecial","operatorValue","operator","response","padOperators","padNumbers","global","rightTag","item","padIgnoreList","padParentheses","cutoffChars","cutoffCharsReverse","masterOpen","masterClose","leftTag","hasLeftTag","hasRightTag","segments","splitGlobal","protectConverted","endAllLeft","endAllRight","stripExtraParentheses","getParenthesesExtent","reverse","semiTrimmedLeft","trimParentheses","semiTrimmedRight","trimOpenParentheses","trimCloseParentheses","nestedLeftSplit","nestedRightSplit","mathml","specials","special","index","revealConverted","regex","open","shouldCutoff","cutoff","firstMatch","textMatch","parenthesesMatch","filteredCutoffChars","filter","filterCutoffChars","includes","join","maskCutoffWhiteList","cutoffWhiteList","key","cutoffChar","whiteListCutoffChars","remainingRegex","divideCutoffRegex","alternateDivideCutoffRegex","maskedText","cutoffMatch","cutoffDivideMatch","cutoffAlternateDivideMatch","unmaskCutoffWhiteList","leftHasPreceding","rightHasPreceding","leftHasTrailing","rightHasTrailing","circularDependencyError","variableRegex","getVariables","useIgnoreList","matches","uniqueMatches","prev","curr","recursiveSolve","inheritedContext","parents","solvableEquation","missingContext","fullMissingContext","variables","requiredContext","solvableContext","resolution","error","parent","sort","a","usableContextVariable","prepared","undefined","solve","solution","evaluate","isNaN","parseFloat","im","stripContext","formatNumber","number","str","parts","split","getLocalStorage","localString","setLocalStorage","valueString","StyledMathML","MathML","MathJax","typesetPromise","typesetClear","this","dangerouslySetInnerHTML","__html","React","StyledContainer","Label","span","getNewContext","previousText","previousVariables","nextVariables","unusedPrevious","unusedNext","NestedProperty","id","info","newInfo","name","ObjectProperty","copyContext","nameStyle","marginTop","marginBottom","trim","marginLeft","map","StyledTextarea","textarea","StyledObjectCreator","Category","Notes","ObjectCreator","onContextChange","category","onCategoryChange","notes","onNotesChange","originalStyledInput","StyledTableGenerator","StyledOverallSection","StyledColumnSection","StyledSettingGroup","StackedColumn","Setting","TableGenerator","columns","columnColorObject","settings","onGeneratorSettingChange","onColumnSettingChange","changeSetting","settingName","newValue","paddingRight","changeColumnSetting","columnName","option","paddingTop","paddingBottom","renderColumns","StyledSearchButton","StyledSearchButtonWithHover","SearchButton","hover","backgroundColor","active","StyledSaveButton","SaveButton","location","StyledMaterialButton","StyledMaterialButtonWithHover","MaterialButton","pickaxe","alt","StyledForgeButton","StyledForgeButtonWithHover","ForgeButton","anvil","StyledCommandButton","StyledCommandButtonWithHover","CommandButton","crown","StyledReviewButton","StyledReviewButtonWithHover","ReviewButton","easel","StyledFrozenTd","FrozenColumnTd","ColumnTd","td","overrideSelect","DataGrid","body","frozenColumns","editState","setEdit","keepEditing","skipTabIndexes","initialSelectionCell","setInitialSelectionCell","shouldHandleBlur","CellComponent","cellComponent","EditCellComponent","editComponent","clickedCell","setClickedCell","selectionRange","setSelectionRange","selectionCurrent","setSelectionCurrent","setHover","selection","setSelection","blurredOnce","setBlurredOnce","shiftModifier","setShiftModifier","ctrlModifier","setCtrlModifier","editorRef","selectionRef","selectText","gridMouseMove","setRangeSelection","gridMouseDown","preventDefault","setSingleSelection","resetSelection","rowIndex","columnIndex","forceSelection","cleanRow","cleanColumn","startRow","endRow","startColumn","endColumn","editorKeyDown","closeEditor","editCell","startingValue","original","callback","save","valueOverride","updateArray","originalArray","newArrayData","cellIndex","data","updateArrayCell","updateArrayRow","filterRow","tabularizeSelection","filterToSelection","position","onKeyDown","onKeyUp","zIndex","opacity","readOnly","deleteArray","columnArray","onBlur","onPaste","clipboardData","items","getAsString","cursor","header","classes","thead","tr","ind","colIndex","numbered","hoverHeaderAndNumberedColor","headerCell","tbody","numberedOffset","Td","edit","padding","editorValue","highlightInitialColor","highlightColor","bodyCell","footer","tfoot","footerCell","Graph","labels","iteration","xAxisLabel","graphData","datasets","lineTension","fill","borderColor","pointBorderColor","pointBackgroundColor","hidden","redraw","TopBar","Accordion","toggle","children","StyledFunctionSearch","TitleSection","Close","StyledItem","DeleteButton","SubSection","NoLocal","SearchInput","CategoryLabel","sortByScore","filterWithSort","listObject","regexArray","filterPart","err","equationCategories","equation","score","equations","SelfStateAccordion","isOpen","setIsOpen","FunctionSearch","toggleSearch","deleteLocalFunction","localFunctions","setFilter","searchElement","filteredLocal","filteredPremade","premade","renderLocalEquation","renderPremadeEquation","Component","StyledRoot","StyledMain","StyledSearch","AccordionContents","StyledMaterialSection","StyledMath","StyledGraph","StyledTableScrollableLimit","StyledTableScrollable","StyledDataGrid","Section","StyledSolution","MenuButton","StyledText","Root","state","table","toggleHelp","setState","showHelp","setLocalStorageAccordionState","accordionState","showSearch","toggleMaterial","showMaterial","toggleForge","showForge","toggleReview","showReview","toggleWield","showWield","toggleCommand","showCommand","getLocalStorageFunctions","setLocalStorageFunctions","localStorageFunctions","getLocalStorageAccordionState","saveLocalFunction","date","Date","now","path","search","generateTable","nextProps","missingVariables","currentProps","currentMissingVariables","some","previous","next","newState","generatorColumns","runner","simpleContext","cells","calculateIteration","Number","toFixed","solveWithAddedContext","oldHistoryObject","newHistoryObject","cleanedHistoryObject","historyObject","passCleanedSettingsToHistory","display","tableGenerated","colorVariables","textAlign","borderRadius","boxShadow","RightFloater","withQsContext","withRouter","qsContext","getFromHistory","StyledCell","Value","InheritedValue","Solution","Cell","isInherited","StyledAutocomplete","Suggestions","SuggestionsWithHover","StyledSuggestion","Suggestion","StyledEditCell","onSelect","options","suggestions","setSuggestions","textToMatch","getSuggestions","isMouseControlled","activeIndex","stopPropagation","handleKeyDown","Equation","EditActionBar","Clickable","EditEquation","autocompleteOptions","saveNewFunction","functionName","EditCell","textValue","StyledSheet","Top","Bottom","Left","Result","RowSection","RowButton","Sheet","defaultValue","useLocalStorage","setLocalFunctions","dataGridEdit","setDataGridEdit","useReducer","action","newEquations","localContext","variableMap","concat","splice","iterator","setEquations","sheetContext","gridBody","equationObject","eqIndex","uniqueMissingContext","getGridBodyMap","equationArray","dispatchEquation","newFunction","existingFunctions","newFunctions","newCurrent","StyledConnect","SpaceView","StyledHeader","AfterImage","TitleLink","LinkHome","ImageWrapper","StyledHelp","Help","StyledHelpButton","StyledHelpButtonWithHover","HelButton","Body","IgnoreList","Item","Text","VerticalGroup","Line","HelpSheet","fontSize","func","href","rel","HelpEquation","StyledApp","Menu","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","setShowHelp","Space","Home","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"6KAAaA,EAAe,UAQfC,GADU,UANO,UAMP,MACK,UAPE,UAOF,OAEfC,EAAc,UACdC,EAAmB,YAcnBC,EAAaH,EACbI,EAAW,UAVC,QAYZC,EAAU,yNAQWD,EARX,0EAWKD,EAXL,cAehB,SAASG,EAAaC,EAASC,GAClC,MAAM,6NAAN,OAQoBD,EARpB,2FAWiBC,EAXjB,mN,gfCvCJ,IAAMC,EAAgBC,IAAOC,IAAV,KAObC,EAAQF,IAAOC,IAAV,KAKLE,EAAaH,IAAOC,IAAV,KAIVG,EAAaJ,IAAOC,IAAV,IAGCI,GA0DFC,EAtDE,WACb,OACI,gBAACP,EAAD,KACI,2BACA,2BACA,gBAACG,EAAD,CAAOK,MAAO,CAAEC,WAAY,SAA5B,WACA,2BACA,2BACA,gBAACL,EAAD,KAAa,mCACb,2BACA,2BACA,gBAACA,EAAD,KAAa,6CACb,gBAACA,EAAD,KAAa,sEACb,2BACA,2BACA,gBAACA,EAAD,KAAa,qCACb,gBAACA,EAAD,KAAa,6BACb,gBAACA,EAAD,KAAa,8BACb,gBAACA,EAAD,KAAa,kBACb,2BACA,2BACA,2BACA,gBAACA,EAAD,KACI,gBAAC,IAAD,CAAMM,GAAG,SAAT,gBAEJ,2BACA,2BACA,2BACA,2BACA,gBAACL,EAAD,KACI,gBAAC,IAAD,CAAMK,GAAG,QAAQ,yBAErB,2BACA,2BACA,2BACA,2BACA,gBAACL,EAAD,KACI,gBAAC,IAAD,CAAMK,GAAG,MAAM,+BAEnB,gBAACL,EAAD,KACI,gBAAC,IAAD,CAAMK,GAAG,SAAS,kCAEtB,2BACA,2BACA,2BACA,2BACA,6BCxEG,SAASC,EAAMC,GAS1B,IAEIC,EAQAD,EARAC,aACAC,EAOAF,EAPAE,WACAN,EAMAI,EANAJ,MACAO,EAKAH,EALAG,MACAC,EAIAJ,EAJAI,OACAC,EAGAL,EAHAK,SACAC,EAEAN,EAFAM,SACAC,EACAP,EADAO,QATL,EAWmCC,qBAXnC,mBAWQC,EAXR,KAWmBC,EAXnB,OAYmCF,qBAZnC,mBAYQG,EAZR,KAYmBC,EAZnB,OAamCJ,qBAbnC,mBAaQK,EAbR,KAamBC,EAbnB,KAeOC,EAAgBC,mBAkCtB,SAASC,EAAeC,EAAQC,EAAGC,IAMnC,SAAmBF,EAAQG,EAAQC,EAAQC,EAAMC,GAC7C,IAAMC,EAAUP,EAAOQ,WAAW,MAClCD,EAAQE,YACRF,EAAQG,OAAOP,EAAQC,GACvBG,EAAQI,OAAON,EAAMC,GACrBC,EAAQK,YAAczB,EACtBoB,EAAQM,UAAYzB,EACpBmB,EAAQO,QAAUzB,EAClBkB,EAAQQ,SAbRC,CAAShB,EAAQT,EAAWE,EAAWQ,EAAGC,GAC1CV,EAAaS,GACbP,EAAaQ,GAcjB,SAASe,EAAoBC,GAAqB,IAAdC,IAAa,yDACvCC,EAAevB,EAAcwB,QAAQC,wBAC3C,GAAIJ,EAAMK,eACNC,OAAOC,OAAOP,EAAMK,gBAAgBG,SAAQ,SAAAC,GACxC,IAAM1B,EAAI0B,EAAMC,QAAUR,EAAaS,KACjC3B,EAAIyB,EAAMG,QAAUV,EAAaW,IACnCZ,EACApB,EAAcF,EAAcwB,QAASpB,EAAGC,IAExCV,EAAaS,GACbP,EAAaQ,GACbL,EAAcwB,QAAQW,QACtBnC,EAAcwB,QAAQY,eAG3B,CACH,IAAMhC,EAAIiB,EAAMgB,MAAQd,EAAaS,KAAOM,OAAOC,YAC7ClC,EAAIgB,EAAMmB,MAAQjB,EAAaW,IAAMI,OAAOG,YAC9CnB,EACApB,EAAcF,EAAcwB,QAASpB,EAAGC,IAExCV,EAAaS,GACbP,EAAaQ,IAGrB,IAAMK,EAAUV,EAAcwB,QAAQb,WAAW,MACjDxB,EAAWuB,GAGf,OA9EAgC,qBAAU,WACN,IAAMhC,EAAUV,EAAcwB,QAAQb,WAAW,MACjD,GAAIzB,EAAc,CACd,IAAMyD,EAAM,IAAIC,MAChBD,EAAIE,IAAM3D,EACVyD,EAAIG,OAAS,WACTpC,EAAQqC,UAAUJ,EAAK,EAAG,IAGlCxD,EAAWuB,KACZ,CAACxB,EAAcC,IAqEd,4BAAQ6D,IAAKhD,EACTnB,MAAO8C,OAAOsB,OAAO,GAAI,CAAEC,YAAa,OAAQC,QAAS,QAAUtE,GACnEO,MAAOA,EACPC,OAAQA,EACR+D,SAAU,EACVC,YAnER,SAAwBhC,GAChBvB,GACAsB,EAAmBC,IAkEnBiC,YAzER,SAAwBjC,GACpBD,EAAmBC,GAAO,GAC1BtB,GAAa,IAwETwD,UA/DR,SAAsBlC,GAClBD,EAAmBC,GACnBtB,GAAa,IA8DTyD,aA3DR,WACIzD,GAAa,IA2DT0D,aAAc,SAAApC,GAAK,OAAID,EAAmBC,GAAO,IACjDqC,YAAatC,EACbuC,WAAYvC,I,gFCnHxB,IAIewC,EAJKtF,IAAOuF,MAAV,IACXlF,G,skCCEN,IAAMmF,EAAiBxF,IAAOC,IAAV,KAqBdwF,EAAqBzF,IAAOC,IAAV,KAQlByF,EAAc1F,IAAO2F,MAAV,KAOXC,EAAoB5F,YAAOsF,EAAPtF,CAAH,IJzBO,QIiCxB6F,EAAe7F,YAAOsF,EAAPtF,CAAH,KASH,SAAS8F,EAAUnF,GAAQ,IAAD,EACLQ,qBADK,mBAC7BiB,EAD6B,KACpBvB,EADoB,KAE/BC,EAAQkD,OAAO+B,WAAa,GAC5BhF,EAASiD,OAAOgC,YAAc,IAAMhC,OAAOgC,YAAc,IAAMhC,OAAOgC,YAAc,GAHrD,EAIH7E,qBAJG,mBAI7BF,EAJ6B,KAInBgF,EAJmB,OAKH9E,mBAAS,WALN,mBAK7BH,EAL6B,KAKnBkF,EALmB,KAgBrC,IAAMtF,EAAeuF,aAAaC,QAAQ,gBAC1C,OACI,kBAACZ,EAAD,KACI,kBAACC,EAAD,KACI,kBAACI,EAAD,CACIQ,UAAU,MACVC,KAAK,SACLC,MAAM,QACNC,QAAS,WAhBrBpE,EAAQqE,UAAU,EAAG,EAAG3F,EAAOC,MAiBvB,kBAAC2E,EAAD,kBACA,kBAACE,EAAD,CACIU,KAAK,SACLC,MAAOtF,GAAY,GACnByF,YAAa,EACbC,SAAU,SAAA5D,GAAK,OAAIkD,EAAYlD,EAAM6D,OAAOL,UAChD,kBAAC,EAAD,CACID,KAAK,QACLC,MAAOvF,EACP2F,SAAU,SAAA5D,GAAK,OAAImD,EAAYnD,EAAM6D,OAAOL,WAEpD,kBAAC7F,EAAD,CACIE,aAAcA,EACdE,MAAOA,EACPI,QAAQ,QACRH,OAAQA,EACRC,SAAUA,EACVC,SAAUA,GAAY,EACtBJ,WAhCZ,SAA2BuB,GACvBvB,EAAWuB,GACX+D,aAAaU,QAAQ,eAAgBzE,EAAQP,OAAOiF,iB,0DCrDrD,SAASC,EAAmBC,GAC/B,IAAMC,EAAM,GACZ,MAAmB,kBAARD,EAAyBA,GACpC3D,OAAO6D,KAAKF,GAAKzD,SAAQ,SAAA4D,GACrBF,EAAIE,GAAQ,GACZF,EAAIE,GAAMC,KAAOJ,EAAIG,GAAME,EAC3BJ,EAAIE,GAAMG,KAAON,EAAIG,GAAMI,EAC3BN,EAAIE,GAAM/E,QAAU2E,EAAkBC,EAAIG,GAAMK,MAE7CP,GAGJ,SAASQ,EAAaC,GACzB,OAAOC,KAAKC,MAAMC,UAAUH,EAAII,QAAQ,aAAc,KAAKA,QAAQ,eAAgB,IAAIA,QAAQ,KAAM,MAGlG,SAASC,EAAoBL,GAChC,IAAKA,EACD,MAAO,GAEX,IAAMM,EAAYP,EAAYC,GAC9B,MAAO,CACHN,KAAMY,EAAUX,GAAK,GACrBC,KAAMU,EAAUT,GAAK,GACrBnF,QAAS2E,EAAkBiB,EAAUR,GAAK,KA8B3C,SAASS,EAA2BC,GACvC,IAAMC,EAAoB,GAW1B,OAVA9E,OAAO6D,KAAKgB,GAAgB3E,SAAQ,SAAA6E,GAChC,IAAMC,EAAa,GACfH,EAAeE,GAAQE,IACvBD,EAAWE,MAAQL,EAAeE,GAAQE,GAE1CJ,EAAeE,GAAQI,IACvBH,EAAWI,SAAWP,EAAeE,GAAQI,GAEjDL,EAAkBC,GAAUC,KAEzBF,EAqBJ,SAASO,GAAT,GAAsK,IAA5IC,EAA2I,EAA3IA,QAASvB,EAAkI,EAAlIA,KAAMhF,EAA4H,EAA5HA,QAASkF,EAAmH,EAAnHA,KAAMsB,EAA6G,EAA7GA,kBAAmBV,EAA0F,EAA1FA,eAA0F,IAA1EW,qBAA0E,SACxK,IAAKzB,IAAShF,EAAS,OAAOuG,EAAQb,UACtC,IAAMgB,EAAa,GAUnB,GATI1B,IACA0B,EAAWzB,EAAID,GAEfE,IACAwB,EAAWvB,EAAID,GAEflF,IACA0G,EAAWtB,EApHZ,SAASuB,EAAiB/B,GAC7B,IAAMC,EAAM,GACZ,GAAmB,kBAARD,EAAkB,OAAOA,EACpC,IAAIgC,GAAW,EAYf,OAXA3F,OAAO6D,KAAKF,GAAKzD,SAAQ,SAAA4D,GACjBH,EAAIG,KAAUH,EAAIG,GAAMC,MAAQJ,EAAIG,GAAM/E,SAAW4E,EAAIG,GAAMG,QAC/DL,EAAIE,GAAQ,GACZF,EAAIE,GAAME,EAAIL,EAAIG,GAAMC,KACxBH,EAAIE,GAAMI,EAAIP,EAAIG,GAAMG,KACxBL,EAAIE,GAAMK,EAAIuB,EAAgB/B,EAAIG,GAAM/E,UACpC6E,EAAIE,GAAMK,GAAKP,EAAIE,GAAME,GAAKJ,EAAIE,GAAMI,KACxCyB,GAAW,OAIlBA,EACE/B,OADP,EAqGmB8B,CAAgB3G,IAE/BwG,IACIA,EAAkBlF,OACduF,SAASL,EAAkBlF,KAAM,IAAM,IACvCoF,EAAWI,EAAI,IAEfJ,EAAWI,EAAIN,EAAkBlF,MAGrCkF,EAAkBO,QACdF,SAASL,EAAkBO,MAAO,IAAM,IACxCL,EAAWM,EAAI,IAEfN,EAAWM,EAAIR,EAAkBO,OAGrCjB,GAAgB,CAChB,IAAMC,EAvFX,SAAkCD,GACrC,IAAMC,EAAoB,GACtBkB,GAAoB,EAiBxB,OAhBAhG,OAAO6D,KAAKgB,GAAgB3E,SAAQ,SAAA6E,GAChC,IAAMC,EAAa,GACfiB,GAAY,EACZpB,EAAeE,GAAQG,QACvBe,GAAY,EACZjB,EAAWC,EAAIJ,EAAeE,GAAQG,OAEtCL,EAAeE,GAAQK,WACvBa,GAAY,EACZjB,EAAWG,EAAIN,EAAeE,GAAQK,UAEtCa,IACAD,GAAoB,EACpBlB,EAAkBC,GAAUC,MAGhCgB,EACOlB,OAEP,EAiE8BoB,CAAwBrB,GAC9CC,IACAW,EAAWR,EAAIH,GAI3B,IAAMqB,EAAmB7B,KAAK8B,UAAUX,GAAYhB,QAAQ,gBAAiB,IAAIA,QAAQ,KAAM,KAC/F,MAAyB,OAArB0B,GAA6BA,EAAiBE,OAAS,EACnDb,EACOF,EAAQgB,KAAK,IAAMH,GAEnBb,EAAQb,QAAQ,IAAM0B,GAG7BX,EACOF,EAAQgB,OAERhB,EAAQb,UCvJZ,SAAS8B,GAAUxC,GAE9B,IADA,IAAIyC,EAAQ,EACHrB,EAAI,EAAGA,EAAIpB,EAAKsC,OAAQlB,IAC7BqB,GAA8B,GAArBzC,EAAK0C,WAAWtB,GAEzBqB,EAAQ,MACRA,EAAQ,IAAOA,GAEnB,IA4DeT,EAAGW,EAAGC,EA5DfC,EAAQ,CACVb,EAAGS,EAAQ,GAAK,EAChBE,EAAG,EACHC,EAAG,GAKP,GAHAC,EAAMF,EAAKF,EAAS,IAAM,EAC1BI,EAAMD,EAAKH,EAAS,IAEhBI,EAAMb,EAAI,IAAMa,EAAMF,EAAI,IAAME,EAAMD,EAAI,GAE1C,OAAQE,KAAKC,IAAIF,EAAMb,EAAGa,EAAMF,EAAGE,EAAMD,IACzC,KAAKC,EAAMb,EACPa,EAAMF,GAAK,GACXE,EAAMD,GAAK,GACX,MACJ,KAAKC,EAAMF,EACPE,EAAMb,GAAK,GACXa,EAAMD,GAAK,GACX,MACJ,KAAKC,EAAMD,EACPC,EAAMb,GAAK,GACXa,EAAMF,GAAK,QAKZ,GAAIE,EAAMb,EAAI,KAAOa,EAAMF,EAAI,KAAOE,EAAMD,EAAI,IAEnD,OAAQE,KAAKC,IAAIF,EAAMb,EAAGa,EAAMF,EAAGE,EAAMD,IACzC,KAAKC,EAAMb,EACPa,EAAMb,GAAK,IACX,MACJ,KAAKa,EAAMF,EACPE,EAAMF,GAAK,IACX,MACJ,KAAKE,EAAMD,EACPC,EAAMD,GAAK,SAKZ,GAAKC,EAAMb,EAAIa,EAAMF,EAAIE,EAAMF,EAAIE,EAAMD,EAAIC,EAAMD,EAAIC,EAAMb,EAAK,IAErE,OAAQc,KAAKC,IAAIF,EAAMb,EAAGa,EAAMF,EAAGE,EAAMD,IACzC,KAAKC,EAAMb,EACPa,EAAMb,EAAIa,EAAMb,EAAI,IAAM,IAC1B,MACJ,KAAKa,EAAMF,EACPE,EAAMF,EAAIE,EAAMF,EAAI,IAAM,IAC1B,MACJ,KAAKE,EAAMD,EACPC,EAAMD,EAAIC,EAAMD,EAAI,IAAM,IAMlC,OAGeZ,EAHCa,EAAMb,EAGJW,EAHOE,EAAMF,EAGVC,EAHaC,EAAMD,EAIjC,IAAMI,GAAShB,GAAKgB,GAASL,GAAKK,GAASJ,GAGtD,SAASI,GAAU5C,GACf,IAAI6C,EAAM7C,EAAE8C,SAAS,IACrB,OAAsB,IAAfD,EAAIX,OAAe,IAAMW,EAAMA,E,cCN3BE,GApEI,CACf,YACA,IACA,WACA,MACA,OACA,MACA,QACA,SACA,KACA,MACA,OACA,QACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,QACA,MACA,QACA,MACA,QACA,MACA,OACA,UACA,MACA,QACA,OACA,MACA,MACA,OACA,SACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,QC9DG,SAASC,GAAT,GAAmF,IAAzDC,EAAwD,EAAxDA,MAAOrD,EAAiD,EAAjDA,KACpC,MAAM,gBAAN,OAAuBqD,EAAvB,aAAiCrD,EAAKU,QAAQ,KAAM,IAApD,WAGG,SAAS4C,GAAT,GAAyF,IAA/DtD,EAA8D,EAA9DA,KAAMuD,EAAwD,EAAxDA,SAC/B1D,EAAMG,EACNwD,EAAUD,EACRE,EAAYC,GAAkB,CAAEH,aAMtC,OAJI1D,EADA4D,EAAUE,UACJ9D,EAAIa,QAAQkD,GAAa,CAAEL,aAA3B,iCAAkEf,GAASe,GAA3E,aAAyFE,EAAUF,SAAnG,gCAAmIf,GAASe,GAA5I,aAA0JE,EAAUE,UAApK,mBAEA9D,EAAIa,QAAQkD,GAAa,CAAEL,aAA3B,iCAAkEf,GAASe,GAA3E,aAAyFC,EAAzF,mBAKP,SAASE,GAAT,GAAgE,IAAlCH,EAAiC,EAAjCA,SAC3BM,EAAWN,EAASO,MAAM,aAChC,OAAID,EACO,CACHN,SAAUA,EAASQ,MAAM,EAAGR,EAASjB,OAASuB,EAAS,GAAGvB,QAC1DqB,UAAWE,EAAS,IAGrB,CAAEN,YAGN,SAASK,GAAT,GAA4D,IAAnCL,EAAkC,EAAlCA,SAC5B,OAAO,IAAIS,OAAJ,6BAAiCC,GAAY,CAAEjE,KAAMuD,IAArD,uBAAuF,KAG3F,SAASW,GAAT,GAA6H,IAAzFlE,EAAwF,EAAxFA,KAAMuD,EAAkF,EAAlFA,SAAUY,EAAwE,EAAxEA,SACnDX,EAAUD,EACRE,EAAYC,GAAkB,CAAEH,aAItC,OAHIE,EAAUE,YACVH,EAAO,oBAAgBC,EAAUF,SAA1B,qBAA+CE,EAAUE,UAAzD,iBAEJ3D,EAAKU,QAAQkD,GAAa,CAAEL,aAAa,KAS7C,YAA8F,IAAtEV,EAAqE,EAArEA,MAAOuB,EAA8D,EAA9DA,KAClC,MAAM,sBAAN,OAA6BvB,EAA7B,aAAuCuB,EAAKC,QAAO,SAACC,EAAKC,GAAN,gBAAiBD,EAAjB,gBAA4BC,EAAIF,QAAO,SAACG,EAASC,GAChG,MAAM,GAAN,OAAUD,EAAV,sBAID,YAA0D,IAAnCxE,EAAkC,EAAlCA,KAC1B,OAAK,IAAIgE,OAAO,UAAUU,KAAK1E,GAGpBA,EAFD,OAAN,OAAcA,EAAd,SAN+B2E,CAAW,CAAE3E,KAAMyE,IAAlD,mBACD,IAFgD,YAEnC,IAFhB,aAVuDG,CAAY,CAC/D/B,MAAOL,GAASe,GAChBa,KAAM,CACF,CAACZ,GACD,CAAC,aAAD,OAAcW,EAAd,kBAEH,MAiBF,SAASU,GAAT,GAAiE,IAChEhF,EAD+D,EAAlCG,KAmBjC,OAbAH,EAAMiF,GAAe,CAAE9E,KADvBH,EA+CG,YAA0D,IACzDA,EADwD,EAAlCG,KAG1B,OADAH,EAAMA,EAAIa,QAAQ,8BAA+B,eAjD3CqE,CAAW,CAAE/E,KADnBH,EAiCG,YAA2D,IAAlCG,EAAiC,EAAjCA,KAEtBgF,EAAgB,CAClB,MAAO,SACP,IAAK,UACL,IAAK,WACL,MAAO,WAEX,MAPkB,CAAC,MAAO,IAAK,IAAK,OAOnBX,QAAO,SAACC,EAAKW,GAC1B,IAAIC,EAAWZ,EAEf,OADAY,EAAWA,EAASxE,QAAQ,IAAIsD,OAAJ,oBAAwBiB,GAAY,KAArD,gBAAoED,EAAcC,GAAlF,YAEZjF,GA7CGmF,CAAa,CAAEnF,KADrBH,EAAMoE,GAAY,CAAEjE,KADpBH,EAoBG,YAA0D,IACzDA,EADwD,EAAlCG,KAG1B,OADAH,EAAMA,EAAIa,QAAQ,6BAA8B,iBAtB1C0E,CAAW,CAAEpF,KAAMH,UAISwF,OAAQ,OAAQC,SAAU,UAY5DzF,EA6TG,YAA6D,IAC5DA,EAD2D,EAAlCG,KAK7B,OAHAmD,GAAWhH,SAAQ,SAAAoJ,GACf1F,EAAMA,EAAIa,QAAQ,IAAIsD,OAAJ,2BAA+BuB,EAA/B,qBAAwD,KAAM,sBAE7E1F,EAlUD2F,CAAc,CAAExF,KADtBH,EA8SG,YAA8D,IAC7DA,EAD4D,EAAlCG,KAK9B,OADAH,GADAA,GADAA,EAAMA,EAAIa,QAAQ,mBAAoB,kBAC5BA,QAAQ,uBAAwB,kBAChCA,QAAQ,oBAAqB,eAlTjC+E,CAAe,CAAEzF,KAVvBH,EAAMiF,GAAe,CACjB9E,KAAMH,EACNwF,OAAQ,oBACRK,YAAa,CAAC,IAAK,IAAK,IAAK,KAC7BC,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,KACzCC,WAAY,sCACZC,YAAa,oBACbC,QAAS,OACTR,SAAU,aAaX,SAASrB,GAAT,GAA2D,IAC1DpE,EADyD,EAAlCG,KAM3B,OADAH,GADAA,GADAA,GADAA,EAAMA,EAAIa,QAAQ,wCAAyC,SACjDA,QAAQ,uCAAwC,SAChDA,QAAQ,uCAAwC,SAChDA,QAAQ,wCAAyC,QA8BxD,SAASoE,GAAT,GAwBH,IANQ,IAjBR9E,EAiBO,EAjBPA,KACAqF,EAgBO,EAhBPA,OAgBO,IAfPK,mBAeO,MAfO,GAeP,MAdPC,0BAcO,MAdc,GAcd,MAbPC,kBAaO,MAbM,GAaN,MAZPC,mBAYO,MAZO,GAYP,MAXPP,gBAWO,MAXI,GAWJ,MAVPQ,eAUO,MAVG,GAUH,EACHjG,EAAMG,EACJ+F,EAAaD,EAAQxD,OAAS,EAC9B0D,EAAcV,EAAShD,OAAS,EAElC2D,EAAWC,GAAY,CAAElG,KAD7BH,EAAMsG,GAAiB,CAAEnG,KAAMH,IACSwF,WACjCY,EAAS3D,OAAS,GAAG,CACxB,IAAI8D,OAAU,EACVC,OAAW,EAFS,EAKAC,GAAsB,CAAEhK,KAF7BiK,GAAqB,CAAEvG,KAAMiG,EAAS,GAAIP,YAAaC,EAAoBa,SAAS,IAErCzE,MAD9CwE,GAAqB,CAAEvG,KAAMiG,EAAS,GAAIP,kBACtDpJ,EALgB,EAKhBA,KAAMyF,EALU,EAKVA,MACR0E,EAAkBC,GAAgB,CAAE1G,KAAM1D,IAC1CqK,EAAmBD,GAAgB,CAAE1G,KAAM+B,IACjDqE,EAAaQ,GAAoB,CAAEtK,KAAMmK,EAAiB1E,MAAO4E,IACjEN,EAAcQ,GAAqB,CAAEvK,KAAMmK,EAAiB1E,MAAO4E,IAEnE,IAAMG,EAAkBZ,GAAY,CAAElG,KAAMoG,EAAYf,WAClD0B,EAAmBb,GAAY,CAAElG,KAAMqG,EAAahB,WACtDyB,EAAgBxE,OAAS,IACzB8D,EAAatB,GAAe,CAAE9E,KAAMoG,EAAYf,SAAQK,cAAaC,qBAAoBC,aAAYC,cAAaP,WAAUQ,aAE5HiB,EAAiBzE,OAAS,IAC1B+D,EAAcvB,GAAe,CAAE9E,KAAMqG,EAAahB,SAAQK,cAAaC,qBAAoBC,aAAYC,cAAaP,WAAUQ,aAGlI,IAAMkB,EAAM,UAAMpB,GAAN,OAAmBG,EAAU,WAAOD,EAAP,YAAkBM,EAAlB,aAAiCN,EAAjC,KAA8CM,GAA3E,OAAwFJ,EAAW,WAAOV,EAAP,YAAmBe,EAAnB,aAAmCf,EAAnC,KAAiDe,GAApJ,OAAkKR,GAG9KI,EAAWC,GAAY,CAAElG,KADzBH,EAAMsG,GAAiB,CAAEnG,KADzBH,EAAMA,EAAIa,QAAQpE,EAAO+I,EAAStD,EAAOiF,KAEL3B,WAGxC,OADAxF,EAuNG,YAA+D,IAC9DA,EAD6D,EAAlCG,KAK/B,OAHAiH,GAAS9K,SAAQ,SAAC+K,EAASC,GACvBtH,EAAMA,EAAIa,QAAQ,IAAIsD,OAAJ,WAAemD,EAAf,KAAyB,KAAMD,MAE9CrH,EA5NDuH,CAAgB,CAAEpH,KAAMH,IAI3B,SAASsG,GAAT,GAAgE,IAC/DtG,EAD8D,EAAlCG,KAKhC,OAHAiH,GAAS9K,SAAQ,SAAC+K,EAASC,GACvBtH,EAAMA,EAAIa,QAAQ,IAAIsD,OAAOkD,EAAS,KAAhC,WAA0CC,EAA1C,SAEHtH,EAGX,IAAMoH,GAAW,CACb,SAGG,SAASf,GAAT,GAA2E,IAAnDlG,EAAkD,EAAlDA,KAAMqF,EAA4C,EAA5CA,OAC3BgC,EAAQ,IAAIrD,OAAJ,cAAkBqB,EAAlB,SACRvB,EAAQ9D,EAAK8D,MAAMuD,GACzB,OAAIvD,GAASA,EAAMxB,OAAS,EACjB,CAACwB,EAAM,GAAIA,EAAM,IAErB,GAGJ,SAASyC,GAAT,GAGI,IAFLvG,EAEI,EAFJA,KAEI,IAFEsH,YAEF,MAFS,EAET,MAFYd,eAEZ,aAF6Bd,mBAE7B,MAF2C,GAE3C,EACN,IAAK1F,EAAM,MAAO,GAClB,GAAKwG,EAyBE,CACH,IAAI1C,EAAQ9D,EAAK8D,MAAM,mBACvB,IAAKA,GAA0B,IAAjBA,EAAMxB,OAChB,OAAIiF,GAAa,CAAEvH,OAAMsH,OAAM5B,gBACpB8B,GAAO,CAAExH,OAAM0F,cAAac,YAEhCxG,EAGX,IAAMyH,EAAa3D,EAAM,GACnB4D,EAAY5D,EAAM,GAClB6D,EAAmB7D,EAAM,GAE/B,GAAIyD,GAAa,CAAEvH,KAAM0H,EAAWJ,OAAM5B,gBACtC,OAAO8B,GAAO,CAAExH,KAAM0H,EAAWhC,cAAac,YAElD,IAAIzC,EAAQ/D,EAAK+D,MAAM,EAAG/D,EAAKsC,OAASmF,EAAWnF,QACnD,MAAyB,MAArBqF,EACOpB,GAAqB,CAAEvG,KAAM+D,EAAOuD,KAAMA,EAAO,EAAGd,UAASd,gBAAiB+B,EAEjFH,GAAQ,EACDG,EAEJlB,GAAqB,CAAEvG,KAAM+D,EAAOuD,KAAMA,EAAO,EAAGd,UAASd,gBAAiB+B,EA/CzF,IAAI3D,EAAQ9D,EAAK8D,MAAM,mBACvB,IAAKA,GAA0B,IAAjBA,EAAMxB,OAChB,OAAIiF,GAAa,CAAEvH,OAAMsH,OAAM5B,gBACpB8B,GAAO,CAAExH,OAAM0F,cAAac,YAEhCxG,EAGX,IAAMyH,EAAa3D,EAAM,GACnB4D,EAAY5D,EAAM,GAClB6D,EAAmB7D,EAAM,GAE/B,GAAIyD,GAAa,CAAEvH,KAAM0H,EAAWJ,OAAM5B,gBACtC,OAAO8B,GAAO,CAAExH,KAAM0H,EAAWhC,cAAac,YAElD,IAAIzC,EAAQ/D,EAAK+D,MAAM0D,EAAWnF,QAClC,MAAyB,MAArBqF,EACOF,EAAalB,GAAqB,CAAEvG,KAAM+D,EAAOuD,KAAMA,EAAO,EAAGd,UAASd,gBAE7E4B,GAAQ,EACDG,EAEJA,EAAalB,GAAqB,CAAEvG,KAAM+D,EAAOuD,KAAMA,EAAO,EAAGd,UAASd,gBA8BtF,SAAS6B,GAAT,GAAyH,IAAhGvH,EAA+F,EAA/FA,KAAM0F,EAAyF,EAAzFA,YAAa4B,EAA4E,EAA5EA,KACzCM,EAAsBlC,EAAYmC,OAAOC,IAC/C,QAAa,IAATR,IAAc5B,EAAYqC,SAAS,OAC/B,sBAAsBrD,KAAK1E,KAAS,qBAAqB0E,KAAK1E,QAIzD,IAATsH,IAAc5B,EAAYqC,SAAS,OAC/B,oBAAoBrD,KAAK1E,QAIpB,IAATsH,GAAcM,EAAoBtF,OAAS,GAAK,IAAI0B,OAAJ,aAAiB4D,EAAoBI,KAAK,MAA1C,KAAoD,KAAKtD,KAAKuD,GAAoB,CAAEjI,YAMrI,SAASiI,GAAT,GAAmE,IAClEpI,EADiE,EAAlCG,KAKnC,OAHA/D,OAAO6D,KAAKoI,IAAiB/L,SAAQ,SAAAgM,GACjCtI,EAAMA,EAAIa,QAAQ,IAAIsD,OAAOmE,EAAK,KAAMD,GAAgBC,OAErDtI,EAGX,IAAMqI,GAAkB,CACpB,kBAAmB,IACnB,mBAAoB,IACpB,mBAAoB,KAGjB,SAASJ,GAAmBM,GAC/B,OAAOC,GAAqBN,SAASK,GAGlC,IAAMC,GAAuB,CAChC,IACA,IACA,IACA,IACA,KAGG,SAASb,GAAT,GAAkH,IAGjHc,EACAC,EACAC,EALkBxI,EAA8F,EAA9FA,KAAM0F,EAAwF,EAAxFA,YAAac,EAA2E,EAA3EA,QACnCoB,EAAsBlC,EAAYmC,OAAOC,IACzCW,EAAaR,GAAoB,CAAEjI,SAIrCwG,GACA8B,EAAiB,IAAItE,OAAJ,aAAiB4D,EAAoBI,KAAK,MAA1C,iBAAwDJ,EAAoBI,KAAK,MAAjF,SACjBO,EAAoB,IAAIvE,OAAJ,gCAAoC4D,EAAoBI,KAAK,MAA7D,SACpBQ,EAA6B,IAAIxE,OAAJ,gCAAoC4D,EAAoBI,KAAK,MAA7D,WAE7BM,EAAiB,IAAItE,OAAJ,gBAAoB4D,EAAoBI,KAAK,MAA7C,iBAA2DJ,EAAoBI,KAAK,MAApF,MACjBO,EAAoB,IAAIvE,OAAJ,gBAAoB4D,EAAoBI,KAAK,MAA7C,yBACpBQ,EAA6B,IAAIxE,OAAJ,gBAAoB4D,EAAoBI,KAAK,MAA7C,4CAGjC,IAAMU,EAAcD,EAAW3E,MAAMwE,GAC/BK,EAAoBF,EAAW3E,MAAMyE,GACrCK,EAA6BH,EAAW3E,MAAM0E,GAEhD3I,EAAM,GAgBV,OAfI6I,IACA7I,EAAM6I,EAAY,IAElBC,KAEK9I,GAAO8I,EAAkB,GAAGrG,OAASzC,EAAIyC,UAC1CzC,EAAM8I,EAAkB,IAG5BC,KAEK/I,GAAO+I,EAA2B,GAAGtG,OAASzC,EAAIyC,UACnDzC,EAAM+I,EAA2B,IAMtC,YAAqE,IACpE/I,EADmE,EAAlCG,KAKrC,OAHA/D,OAAO6D,KAAKoI,IAAiB/L,SAAQ,SAAAgM,GACjCtI,EAAMA,EAAIa,QAAQ,IAAIsD,OAAO,KAAOkE,GAAgBC,GAAM,KAAMA,MAE7DtI,EARAgJ,CAAsB,CAAE7I,KAAMH,IAWlC,SAASyG,GAAT,GAAmF,IAAjDhK,EAAgD,EAAhDA,KAAMyF,EAA0C,EAA1CA,MAErC+G,EAAmB,MAAMpE,KAAKpI,GAC9ByM,EAAoB,MAAMrE,KAAK3C,GAC/BiH,EAAkB,MAAMtE,KAAKpI,GAC7B2M,EAAmB,MAAMvE,KAAK3C,GACpC,OAAI+G,GAAqBE,GAAoBD,GAAsBE,EAG9DH,GAAqBE,GAAoBD,IAAqBE,EAG5D,CAAE3M,OAAMyF,SAFJ,CAAEzF,OAAMyF,MAAOA,EAAMrB,QAAQ,MAAO,KAHpC,CAAEpE,KAAMA,EAAKoE,QAAQ,MAAO,IAAKqB,SAQzC,SAAS2E,GAAT,GACH,OADiE,EAAlC1G,KACnBU,QAAQ,cAAe,MAGhC,SAASkG,GAAT,GAAyF,IAAzDtK,EAAwD,EAAxDA,KAAMyF,EAAkD,EAAlDA,MACzC,MAAI,MAAM2C,KAAK3C,GACJzF,EAAKoE,QAAQ,OAAQ,IAEzBpE,EAGJ,SAASuK,GAAT,GAA0F,IAAzDvK,EAAwD,EAAxDA,KAAMyF,EAAkD,EAAlDA,MAC1C,MAAI,MAAM2C,KAAKpI,GACJyF,EAAMrB,QAAQ,OAAQ,IAE1BqB,ECvXX,IAAMmH,GAA0B,+BAEnBC,GAAgB,yCAGtB,SAASC,GAAT,GAMY,IALfpJ,EAKc,EALdA,KAKc,IAJdqJ,qBAIc,SACd,IAAKrJ,EAAM,MAAO,GAClB,IAAMsJ,EAAUtJ,EAAK8D,MAAMqF,IAC3B,IAAKG,EAAS,MAAO,GACrB,IAAMC,EAAgBD,EAAQjF,QAAO,SAACmF,EAAMC,GACxC,OAAKD,EAAKzB,SAAS0B,GAGRD,EAFD,GAAN,mBAAWA,GAAX,CAAiBC,MAItB,IAEH,OAAKJ,EAEEE,EAAclF,QAAO,SAACmF,EAAMC,GAC/B,OAAKtG,GAAW4E,SAAS0B,GAGdD,EAFD,GAAN,mBAAWA,GAAX,CAAiBC,MAItB,IARwBF,EAWxB,SAASG,GAAT,GAqBA,IAAD,IApBF1J,YAoBE,MApBK,GAoBL,EAnBFE,EAmBE,EAnBFA,KACAlF,EAkBE,EAlBFA,QACA2O,EAiBE,EAjBFA,iBAiBE,IAhBFC,eAgBE,MAhBQ,GAgBR,EACEC,EAAmB7J,EACnBgH,EAASnC,GAAkB,CAAE7E,SAC3B8J,EAAiB,GACjBC,EAAqB,GACrBC,EAAiBZ,GAAa,CAAEpJ,SAChCiK,EAAe,YAAOD,GACtBE,EAAe,eAAQlP,GACvBkK,EAAW,CACblF,OACAE,OACA4J,iBACAC,qBACAE,kBACAjP,QAASkP,GAEPC,EAAaP,EAAQvF,QAAO,SAAC+F,EAAOC,GACtC,OAAID,EAAMA,QAAUlB,IAA2Bc,EAAUjC,SAASsC,GACvD,CAAED,MAAOlB,IAEbkB,IACR,IACH,OAAID,EAAWC,MACJ,eACAlF,EADP,CAEIiF,aACAN,mBACA7C,YAGRgD,EAAUM,MAAK,SAACC,EAAG3H,GAAJ,OAAUA,EAAEN,OAASiI,EAAEjI,UAAQnG,SAAQ,SAAAoH,GAClD,GAAI2G,EAAgB3G,IAAa2G,EAAgB3G,GAAUvD,KAAM,CAC7D,IAAMwK,EAAwBN,EAAgB3G,IAAaoG,EAAiBpG,GACtEkH,EAAWf,GAAe,CAC5B1J,KAAMwK,EAAsBxK,KAC5BE,KAAMsK,EAAsBtK,KAC5BlF,QAASwP,EAAsBxP,QAC/B2O,iBAAiB,eAAMA,EAAP,GAA4BO,GAC5CN,QAAQ,GAAD,mBAAMA,GAAN,CAAerG,MAG1B,GADAwG,EAAmBxH,KAAnB,MAAAwH,EAAkB,YAASU,EAASV,qBAChCU,EAASN,WAAWC,QAAUlB,GAE9B,YADAiB,EAAWC,MAAQlB,IAGvBgB,EAAgB3G,GAAYkH,EAC5BZ,EAAmBA,EAAiBnJ,QAAQ,IAAIsD,OAAOT,EAAU,KAAM,IAAMkH,EAASZ,iBAAmB,KAErG7C,EADAyD,EAASzD,QAAUmC,GAAczE,KAAK+F,EAASzD,QACtC9C,GAAwB,CAAElE,KAAMgH,EAAQzD,WAAUY,SAAUsG,EAASzD,SAErE1D,GAAc,CAAEtD,KAAMgH,EAAQzD,kBAEpCoG,GAAoBA,EAAiBpG,SAA6DmH,IAAhDf,EAAiBpG,GAAUsG,kBACpFA,EAAmBA,EAAiBnJ,QAAQ,IAAIsD,OAAOT,EAAU,KAAM,IAAMoG,EAAiBpG,GAAUsG,iBAAmB,KAC3H7C,EAAS1D,GAAc,CAAEtD,KAAMgH,EAAQzD,cAChCoG,GAAoBA,EAAiBpG,KAAcoG,EAAiBpG,GAAUvD,MACrF6J,EAAmBA,EAAiBnJ,QAAQ,IAAIsD,OAAOT,EAAU,KAAM,IAAMoG,EAAiBpG,GAAY,KAC1GyD,EAAS1D,GAAc,CAAEtD,KAAMgH,EAAQzD,aACvCwG,EAAmBxH,KAAKgB,KAExBuG,EAAevH,KAAKgB,GACpBwG,EAAmBxH,KAAKgB,GACxByD,EAAS1D,GAAc,CAAEtD,KAAMgH,EAAQzD,iBAG3C4G,EAAWC,MACJ,eACAlF,EADP,CAEIiF,aACAN,mBACA7C,WAGD,eACA9B,EADP,CAEIiF,WAAYQ,GAAM,CAAE3K,KAAM6J,EAAkBA,qBAC5CA,mBACA7C,YAgBD,SAAS2D,GAAT,GAMJ,IAIKC,EATJ5K,EAKF,EALEA,KAMA,IAAKA,GAAwB,IAAhBA,EAAKsC,OACd,MAAO,GAGX,IAAMwH,EAAiBV,GAAa,CAAEpJ,SACtC,GAAI8J,EAAexH,OAAS,EACxB,MAAO,CAAE8H,MAAO,kBAAmBN,kBAEvC,IACIc,EAAWC,aAAS7K,GACtB,MAAOoK,GACL,MAAO,CAAEA,SAEb,YAAiBM,IAAbE,GAA0BE,MAAMC,WAAWH,IAAmB,CAAER,MAAO,wBACvEQ,EAASI,GACF,CACHJ,SAAUA,EAASI,GACnB9D,QAAS,MAGV,CAAE0D,YAGN,SAASK,GAAcjQ,GAC1B,IAAM6E,EAAM,GACZ,GAAuB,kBAAZ7E,EACP,OAAOA,EAEX,IAAI4G,GAAW,EAYf,OAXA3F,OAAO6D,KAAK9E,GAASmB,SAAQ,SAAA4D,GACrB/E,EAAQ+E,KAAU/E,EAAQ+E,GAAMC,MAAQhF,EAAQ+E,GAAMG,MAAQlF,EAAQ+E,GAAM/E,WAC5E6E,EAAIE,GAAQ,GACZF,EAAIE,GAAMC,KAAOhF,EAAQ+E,GAAMC,KAC/BH,EAAIE,GAAMG,KAAOlF,EAAQ+E,GAAMG,KAC/BL,EAAIE,GAAM/E,QAAUiQ,GAAajQ,EAAQ+E,GAAM/E,UAC3C6E,EAAIE,GAAM/E,SAAW6E,EAAIE,GAAMC,MAAQH,EAAIE,GAAMG,QACjD0B,GAAW,OAIlBA,EAGE/B,OAHP,EAMG,SAASqL,GAAcC,GAC1B,GAAIA,GAAUA,EAAOjI,SAAU,CAC3B,IAAMkI,EAAMD,EAAOjI,WACnB,GAAI,KAAKwB,KAAK0G,GAAM,CAChB,IAAMC,EAAQD,EAAIE,MAAM,KACxB,OAAOD,EAAM,GAAG3K,QAAQ,wBAAyB,KAAO,IAAM2K,EAAM,GAEpE,OAAOD,EAAI1K,QAAQ,wBAAyB,KAGhD,OAAOyK,E,YCrNR,SAASI,GAAiBpD,GAC7B,IAAMqD,EAAczM,aAAaC,QAAQmJ,GACzC,OAAO5H,KAAKC,MAAMgL,GAGf,SAASC,GAAiBtD,EAAKhJ,GAClC,IAAMuM,EAAcnL,KAAK8B,UAAUlD,GACnCJ,aAAaU,QAAQ0I,EAAKuD,G,sKCA9B,IAAMC,GAAe/S,IAAOC,IAAV,MAgCH+S,G,4LAtBgB,qBAAZC,SACPA,QAAQC,mB,2CAMW,qBAAZD,UACPA,QAAQE,eACRF,QAAQC,oB,+BAIL,IAAD,EACoBE,KAAKzS,MAAvByN,EADF,EACEA,OAAQ3D,EADV,EACUA,MAEhB,OACI,gBAACsI,GAAD,CAAcM,wBAAyB,CAAEC,OAAS9I,GAAc,CAAEC,QAAOrD,KAAMgH,W,GApBtEmF,a,8LCVrB,IAAMC,GAAkBxT,IAAOC,IAAV,MAIfwT,GAAQzT,IAAO0T,KAAV,MAIX,SAASC,GAAT,GAA0D,IAAhCC,EAA+B,EAA/BA,aAAcxM,EAAiB,EAAjBA,KAAMhF,EAAW,EAAXA,QACpC0G,EAAU,eAAQ1G,GAClByR,EAAoBrD,GAAa,CAAEpJ,KAAMwM,IACzCE,EAAgBtD,GAAa,CAAEpJ,SAE/B2M,EAAiBF,EAAkB5E,QAAO,SAAAzG,GAAC,OAAKsL,EAAc3E,SAAS3G,MACvEwL,EAAaF,EAAc7E,QAAO,SAAAzG,GAAC,OAAKqL,EAAkB1E,SAAS3G,MAczE,OAbIM,IAC8B,IAA1BiL,EAAerK,QAAsC,IAAtBsK,EAAWtK,QAAgBqK,EAAe,IACzEjL,EAAWkL,EAAW,IAAMlL,EAAWiL,EAAe,WAC/CjL,EAAWiL,EAAe,KAGjC1Q,OAAO6D,KAAK4B,GAAYvF,SAAQ,SAAAoH,GACvBmJ,EAAc3E,SAASxE,WACjB7B,EAAW6B,OAK3B7B,EAGX,SAASmL,GAAT,GAcI,IAduBC,EAcxB,EAdwBA,GAAIvJ,EAc5B,EAd4BA,SAAUwJ,EActC,EAdsCA,KAAMxN,EAc5C,EAd4CA,SAerCyN,EAAO,aACT7C,WAAY,GACZnK,KAAM,GACNE,KAAM,GACN4J,eAAgB,GAChBG,gBAAiB,IACd8C,EAAK/R,QAAQuI,GANP,CAOToG,iBAAiB,eAAMoD,EAAKpD,iBAAZ,GAAiCoD,EAAK/R,SACtDiS,KAAM1J,IAEV,OACI,kBAAC2J,GAAD,CACIJ,GAAE,UAAKA,EAAL,YAAWvJ,GACbwJ,KAAMC,EACNzN,SAAU,YAAoC,IAAjC0N,EAAgC,EAAhCA,KAAMjN,EAA0B,EAA1BA,KAAME,EAAoB,EAApBA,KAAMlF,EAAc,EAAdA,QACrBmS,EAAW,eAAQJ,EAAK/R,SACzBmS,EAAYF,KAAOE,EAAYF,GAAQ,IAC5CE,EAAYF,GAAMjS,QAAUA,EAC5BmS,EAAYF,GAAMjN,KAAOA,EACzBmN,EAAYF,GAAM/M,KAAOA,EACzBX,EAAS,CAAE0N,KAAMF,EAAKE,KAAMjN,KAAM+M,EAAK/M,KAAME,KAAM6M,EAAK7M,KAAMlF,QAASmS,OAKxE,SAASD,GAAgB3T,GAapC,IAEIuT,EAGAvT,EAHAuT,GACAC,EAEAxT,EAFAwT,KACAxN,EACAhG,EADAgG,SAOE6N,EAAY,CAAEC,UAAW,EAAGC,aAAc,EAAGzK,MAAOL,GAASuK,EAAKE,OAExE,OACI,6BACI,6BACI,yBAAK9T,MAAOiU,GACPL,EAAKE,KACA,kBAACZ,GAAD,KAAQU,EAAKE,KAAb,SACGF,EAAK5C,WAAWS,SACXM,GAAa6B,EAAK5C,WAAWS,UAC7B,MAER,MAEV,kBAACwB,GAAD,KACI,kBAAC,EAAD,CAAalN,KAAK,OACdI,YAAY,0BACZnG,MAAO,CAAEmU,aAAc,GACvBnO,MAAO4N,EAAK/M,MAAQ,GACpBT,SAAU,SAAA5D,GACN,IAAIqE,EAAOrE,EAAM6D,OAAOL,MACJ,KAAhBa,EAAKuN,SACLvN,OAAO0K,GAEXnL,EAAS,CAAE0N,KAAMF,EAAKE,KAAMjN,OAAME,KAAM6M,EAAK7M,KAAMlF,QAASuR,GAAc,CAAEU,KAAMF,EAAKE,KAAMT,aAAcO,EAAK/M,KAAMA,OAAME,KAAM6M,EAAK7M,KAAMlF,QAAS+R,EAAK/R,eAEnK,kBAAC,EAAD,CAAakE,KAAK,OACdI,YAAY,OACZnG,MAAO,CAAEqU,WAAY,EAAGF,aAAc,GACtCnO,MAAO4N,EAAK7M,MAAQ,GACpBX,SAAU,SAAA5D,GACN,IAAIuE,EAAOvE,EAAM6D,OAAOL,MACJ,KAAhBe,EAAKqN,SACLrN,OAAOwK,GAEXnL,EAAS,CAAE0N,KAAMF,EAAKE,KAAMjN,KAAM+M,EAAK/M,KAAME,OAAMlF,QAASuR,GAAc,CAAEU,KAAMF,EAAKE,KAAMT,aAAcO,EAAKP,aAAcxM,KAAM+M,EAAK/M,KAAME,OAAMlF,QAAS+R,EAAK/R,iBAIlL+R,EAAK9C,iBAAmB8C,EAAK9C,gBAAgBwD,KAAI,SAAAlK,GAAQ,OAAI,kBAACsJ,GAAD,CAAgB1E,IAAG,UAAK2E,EAAL,YAAWvJ,GAAYuJ,GAAIA,EAAIvJ,SAAUA,EAAUwJ,KAAMA,EAAMxN,SAAUA,Q,qWCzItK,IAeemO,GAfQ9U,IAAO+U,SAAV,KAQc1U,EAGNA,G,+kBCR5B,IAAM2U,GAAsBhV,IAAOC,IAAV,MAInBuT,GAAkBxT,IAAOC,IAAV,MAIfgV,GAAWjV,YAAOsF,EAAPtF,CAAH,MAKRkV,GAAQlV,YAAO8U,GAAP9U,CAAH,MAOLyT,GAAQzT,IAAOC,IAAV,MAKI,SAASkV,GAAexU,GAmBnC,OACI,kBAACqU,GAAD,KACI,kBAAC,GAAD,aACA,kBAACV,GAAD,CAAgBJ,GAAG,OAAOC,KAAMxT,EAAMwT,KAAMxN,SAAUhG,EAAMyU,kBAC5D,kBAAC,GAAD,iBACA,kBAAC,GAAD,KACI,kBAACH,GAAD,CAAU1O,MAAO5F,EAAM0U,UAAY,GAAI/O,KAAK,WAAWK,SAAUhG,EAAM2U,oBAE3E,kBAAC,GAAD,cACA,kBAAC,GAAD,KACI,kBAACJ,GAAD,CAAO3O,MAAO5F,EAAM4U,OAAS,GAAIjP,KAAK,WAAWK,SAAUhG,EAAM6U,kB,w/BCvDjF,IAAMlQ,GAActF,YAAOyV,EAAPzV,CAAH,MAIX0V,GAAuB1V,IAAOC,IAAV,MAQpB0V,GAAuB3V,IAAOC,IAAV,MAMpB2V,GAAsB5V,IAAOC,IAAV,KACLI,IAKdwV,GAAqB7V,IAAOC,IAAV,KfRW,Kec7B6V,GAAgB9V,IAAOC,IAAV,MAIb8V,GAAU/V,IAAOC,IAAV,MAKPwT,GAAQzT,IAAOC,IAAV,MAKI,SAAS+V,GAAgBrV,GAAQ,IAExCsV,EAMAtV,EANAsV,QACAC,EAKAvV,EALAuV,kBACAhO,EAIAvH,EAJAuH,eAJuC,EAQvCvH,EAHAwV,gBALuC,MAK5B,GAL4B,EAMvCC,EAEAzV,EAFAyV,yBACAC,EACA1V,EADA0V,sBAEE3S,EAAOyS,EAASzS,KAChByF,EAAQgN,EAAShN,MAsCvB,SAASmN,EAAeC,GACpB,OAAO,SAAUxT,GACb,IAAMyT,EAAWzT,EAAM6D,OAAOL,MAAMuB,QAAQ,KAAM,IAClD,GAAI0O,IAAaL,EAASI,GAAc,CACpC,IAAMlO,EAAU,eAAQ8N,GACxB9N,EAAWkO,GAAeC,EAC1BJ,EAAyB/N,KAIrC,OACI,kBAACqN,GAAD,KACI,kBAACC,GAAD,KACI,kBAACI,GAAD,CAASxV,MAAO,CAAEkW,aAAc,IAC5B,kBAAC,GAAD,aACA,kBAAC,GAAD,CAAanQ,KAAK,SAASK,SAAU2P,EAAc,QAAS/P,MAAO7C,GAAQ,GAAIgD,YAAY,OAE/F,kBAACqP,GAAD,KACI,kBAAC,GAAD,cACA,kBAAC,GAAD,CAAazP,KAAK,SAASK,SAAU2P,EAAc,SAAU/P,MAAO4C,GAAS,GAAIzC,YAAY,SAGrG,kBAACkP,GAAD,KA1DR,YAAgG,IAAtEK,EAAqE,EAArEA,QAASC,EAA4D,EAA5DA,kBAAmBhO,EAAyC,EAAzCA,eAAgBmO,EAAyB,EAAzBA,sBAC5DK,EAAsB,SAACC,EAAYJ,GACrC,OAAO,SAAUxT,GACb,IAAMyT,EAAWzT,EAAM6D,OAAOL,MAC9B,IAAK2B,EAAeyO,IAAeH,IAAatO,EAAeyO,GAAYJ,GAAc,CACrF,IAAMpO,EAAiB,eAAQD,GAC1BA,EAAeyO,GAGhBxO,EAAkBwO,GAAlB,eAAqCzO,EAAeyO,IAFpDxO,EAAkBwO,GAAc,GAIpCxO,EAAkBwO,GAAYJ,GAAeC,EAC7CH,EAAsBlO,MAIlC,OAAO8N,EAAQpB,KAAI,SAAAzM,GACf,IAAMwO,EAAS1O,EAAeE,GAAUF,EAAeE,GAAU,GAC3DG,EAAQqO,EAAOrO,MACfE,EAAWmO,EAAOnO,SACxB,OAAO,kBAACoN,GAAD,CAAoBtG,IAAKnH,GAC5B,yBAAK7H,MAAO,CAAE0J,MAAOiM,EAAkB9N,GAAS5H,WAAY,OAAQqW,WAAY,GAAIC,cAAe,KAAO1O,GAC1G,kBAAC0N,GAAD,KACI,kBAACC,GAAD,KACI,kBAAC,GAAD,cACA,kBAAC,GAAD,CAAaxV,MAAO,CAAEqU,WAAY,IAAMtO,KAAK,SAASK,SAAU+P,EAAoBtO,EAAQ,SAAU7B,MAAOgC,GAAS,GAAI7B,YAAY,OAE1I,kBAACqP,GAAD,KACI,kBAAC,GAAD,iBACA,kBAAC,GAAD,CAAazP,KAAK,SAASK,SAAU+P,EAAoBtO,EAAQ,YAAa7B,MAAOkC,GAAY,GAAI/B,YAAY,YA8BxHqQ,CAAc,CAAEd,UAASC,oBAAmBhO,iBAAgBmO,4B,uNCtH9DrW,WAAOC,IAAtB,M,iSCEA,IAAM+W,GAAqBhX,IAAOC,IAAV,MAMlBgX,GAA8BjX,IAAOC,IAAV,KAI3BI,EAAmB,UAAW,IAGrB,SAAS6W,GAAcvW,GAClC,OAAIA,EAAMwW,MAEF,kBAACF,GAAD,iBAAiCtW,EAAjC,CAAwCJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MACnH,uBAAGzL,UAAU,iBAAiB9F,MAAOI,EAAMJ,OAA3C,WAKJ,kBAACyW,GAAD,iBAAwBrW,EAAxB,CAA+BJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MAC1G,uBAAGzL,UAAU,iBAAiB9F,MAAOI,EAAMJ,OAA3C,W,qJCvBhB,IAAM+W,GAAmBtX,IAAOC,IAAV,KAIhBI,EAAmB,SAGV,SAASkX,GAAY5W,GAChC,OAAIA,EAAMyG,MAAQzG,EAAM6W,SAEhB,kBAACF,GAAqB3W,EAClB,uBAAG0F,UAAU,kBAAb,SAID,K,yTCdf,IAAMoR,GAAuBzX,IAAOC,IAAV,MAMpByX,GAAgC1X,IAAOC,IAAV,KAI7BI,EAAmB,YAAa,IAGvB,SAASsX,GAAgBhX,GACpC,OAAIA,EAAMwW,MAEF,kBAACO,GAAD,iBAAmC/W,EAAnC,CAA0CJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MACrH,yBAAKvN,IAAKqT,KAASC,IAAI,WAAW9W,OAASJ,EAAMJ,OAASI,EAAMJ,MAAMQ,QAAW,GAAID,MAAQH,EAAMJ,OAASI,EAAMJ,MAAMO,OAAU,MAKtI,kBAAC2W,GAAD,iBAA0B9W,EAA1B,CAAiCJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MAC5G,yBAAKvN,IAAKqT,KAASC,IAAI,WAAW9W,OAASJ,EAAMJ,OAASI,EAAMJ,MAAMQ,QAAW,GAAID,MAAQH,EAAMJ,OAASI,EAAMJ,MAAMO,OAAU,M,yTCvBlJ,IAAMgX,GAAoB9X,IAAOC,IAAV,MAMjB8X,GAA6B/X,IAAOC,IAAV,KAI1BI,EAAmB,SAAU,IAGpB,SAAS2X,GAAarX,GACjC,OAAIA,EAAMwW,MAEF,kBAACY,GAAD,iBAAgCpX,EAAhC,CAAuCJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MAClH,yBAAKvN,IAAK0T,KAAOJ,IAAI,QAAQ9W,OAASJ,EAAMJ,OAASI,EAAMJ,MAAMQ,QAAW,GAAID,MAAQH,EAAMJ,OAASI,EAAMJ,MAAMO,OAAU,MAKjI,kBAACgX,GAAD,iBAAuBnX,EAAvB,CAA8BJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MACzG,yBAAKvN,IAAK0T,KAAOJ,IAAI,QAAQ9W,OAASJ,EAAMJ,OAASI,EAAMJ,MAAMQ,QAAW,GAAID,MAAQH,EAAMJ,OAASI,EAAMJ,MAAMO,OAAU,M,yTCvB7I,IAAMoX,GAAsBlY,IAAOC,IAAV,MAMnBkY,GAA+BnY,IAAOC,IAAV,KAI5BI,EAAmB,WAAY,KAGtB,SAAS+X,GAAezX,GACnC,OAAIA,EAAMwW,MAEF,kBAACgB,GAAD,iBAAkCxX,EAAlC,CAAyCJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MACpH,yBAAKvN,IAAK8T,KAAOR,IAAI,UAAU9W,OAASJ,EAAMJ,OAASI,EAAMJ,MAAMQ,QAAW,GAAID,MAAQH,EAAMJ,OAASI,EAAMJ,MAAMO,OAAU,MAKnI,kBAACoX,GAAD,iBAAyBvX,EAAzB,CAAgCJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MAC3G,yBAAKvN,IAAK8T,KAAOR,IAAI,UAAU9W,OAASJ,EAAMJ,OAASI,EAAMJ,MAAMQ,QAAW,GAAID,MAAQH,EAAMJ,OAASI,EAAMJ,MAAMO,OAAU,M,yTCvB/I,IAAMwX,GAAqBtY,IAAOC,IAAV,MAMlBsY,GAA8BvY,IAAOC,IAAV,KAI3BI,EAAmB,UAAW,IAGrB,SAASmY,GAAc7X,GAClC,OAAIA,EAAMwW,MAEF,kBAACoB,GAAD,iBAAiC5X,EAAjC,CAAwCJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MACnH,yBAAKvN,IAAKkU,KAAOZ,IAAI,SAAS9W,OAASJ,EAAMJ,OAASI,EAAMJ,MAAMQ,QAAW,GAAID,MAAQH,EAAMJ,OAASI,EAAMJ,MAAMO,OAAU,MAKlI,kBAACwX,GAAD,iBAAwB3X,EAAxB,CAA+BJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MAC1G,yBAAKvN,IAAKkU,KAAOZ,IAAI,SAAS9W,OAASJ,EAAMJ,OAASI,EAAMJ,MAAMQ,QAAW,GAAID,MAAQH,EAAMJ,OAASI,EAAMJ,MAAMO,OAAU,M,kJCzB9I,IAAM4X,GAAiB1Y,IAAOC,IAAV,MAGd0Y,GAAiB,SAAAhY,GACnB,OACI,kBAACiY,GAAD,KACI,kBAACF,GAAmB/X,KAK1BiY,GAAW5Y,IAAO6Y,GAAV,MAGVC,IAAiB,EAEN,SAASC,GAAUpY,GAkD9B,IAEIqY,EASArY,EATAqY,KACAC,EAQAtY,EARAsY,cAHL,EAWKtY,EAPAuY,iBAJL,MAIiB,GAJjB,EAKKC,EAMAxY,EANAwY,QACAC,EAKAzY,EALAyY,YACAC,EAIA1Y,EAJA0Y,eACAC,EAGA3Y,EAHA2Y,qBACAC,EAEA5Y,EAFA4Y,wBATL,EAWK5Y,EADA6Y,wBAVL,SAYOC,EAAgB9Y,EAAM+Y,cACtBC,EAAoBhZ,EAAMiZ,cAbjC,EAeuCzY,mBAAS,IAfhD,mBAeQ0Y,EAfR,KAeqBC,EAfrB,OAgB6C3Y,mBAAS,IAhBtD,mBAgBQ4Y,EAhBR,KAgBwBC,EAhBxB,OAiBiD7Y,mBAAS,IAjB1D,mBAiBQ8Y,EAjBR,KAiB0BC,EAjB1B,OAkB2B/Y,mBAAS,IAlBpC,mBAkBQgW,EAlBR,KAkBegD,EAlBf,OAmBmChZ,qBAnBnC,mBAmBQiZ,EAnBR,KAmBmBC,EAnBnB,OAoBmClZ,oBAAS,GApB5C,mBAoBQK,EApBR,KAoBmBC,EApBnB,OAqBuCN,oBAAS,GArBhD,mBAqBQmZ,EArBR,KAqBqBC,EArBrB,OAsB2CpZ,oBAAS,GAtBpD,mBAsBQqZ,EAtBR,KAsBuBC,EAtBvB,OAuByCtZ,oBAAS,GAvBlD,mBAuBQuZ,EAvBR,KAuBsBC,EAvBtB,KAyBOC,GAAYjZ,mBACZkZ,GAAelZ,mBA0BrB,SAASmZ,KACL,IAAMpW,EAAMmW,GAAa3X,QACzBwB,EAAIb,QACJa,EAAIsV,kBAAkB,EAAGtV,EAAI6B,MAAMmD,QAyBvC,SAASqR,GAAehY,EAAO4I,EAAKvD,GAChC+R,EAAS,CACLxO,SAAamG,IAARnG,GAAqB,EAAIA,EAC9BvD,YAAmB0J,IAAX1J,GAAwB,EAAIA,IAEpC5G,GAGAwZ,QAA0BlJ,IAARnG,EAAoBqN,EAAKtP,OAASiC,OACrCmG,IAAX1J,EAAuB4Q,EAAK,GAAGtP,OAAStB,GAAQ,GAI5D,SAAS6S,GAAelY,EAAO4I,EAAKvD,GAChCrF,EAAMmY,iBACNzZ,GAAa,GACb8Y,GAAe,GAEfT,EAAe,CACXnO,IAAKkO,EAAYlO,MAAQA,EAAMA,OAAMmG,EACrC1J,OAAQyR,EAAYzR,SAAWA,EAASA,OAAS0J,IAEjD0I,EAGAQ,QAA0BlJ,IAARnG,EAAoBqN,EAAKtP,OAASiC,OACrCmG,IAAX1J,EAAuB4Q,EAAK,GAAGtP,OAAStB,GAAQ,GAEpD+S,GAAmBxP,EAAKvD,GAAQ,GA+FxC,SAASgT,KACL7B,EAAwB,IACxBW,EAAoB,IACpBF,EAAkB,IAClBF,EAAe,IACfS,GAAe,GACfF,EAAa,IAmCjB,SAASc,GAAoBE,EAAkBC,EAAqBC,GAChE,IAAM5P,EAAM0P,GAAyB,IAAdA,IAAoC,IAAjBC,GAAsB,EAAIE,GAASH,GAAY,EACnFjT,EAASkT,GAA4B,IAAdD,IAAoC,IAAjBC,GAAsB,EAAIG,GAAY9P,EAAK2P,GAAe,EAC1G/B,EAAwB,CAAE5N,MAAKvD,WAC/B8R,EAAoB,CAAEvO,MAAKvD,WAC3B4R,EAAkB,CACd0B,SAAU/P,EACVgQ,YAAqB7J,IAAbuJ,EAAyB1P,EAAMqN,EAAKtP,OAC5CkS,YAAaxT,EACbyT,eAA2B/J,IAAhBwJ,EAA4BlT,EAAS4Q,EAAK,GAAGtP,SAExD6R,GACAT,KAIR,SAASE,GAAmBK,EAAkBC,EAAqBC,GAC/D,IAAM5P,EAAM6P,GAASH,GACfjT,EAASqT,GAAY9P,EAAK2P,GAChCpB,EAAoB,CAAEvO,MAAKvD,WAC3B4R,EAAkB,CACd0B,SAAU/P,EAAM2N,EAAqB3N,IAAMA,EAAM2N,EAAqB3N,IACtEgQ,OAAQhQ,EAAM2N,EAAqB3N,IAAM2N,EAAqB3N,IAAMA,EACpEiQ,YAAaxT,EAASkR,EAAqBlR,OAASA,EAASkR,EAAqBlR,OAClFyT,UAAWzT,EAASkR,EAAqBlR,OAASkR,EAAqBlR,OAASA,IAEhFmT,GACAT,KAIR,SAASgB,GAAe/Y,GACF,WAAdA,EAAMwM,KACNwM,IAAY,GAEE,UAAdhZ,EAAMwM,MACF6J,EAEI4C,GADAxB,EACStB,EAAUvN,IAAM,EAEhBuN,EAAUvN,IAAM,EAFGuN,EAAU9Q,SAK1C2T,KAEIZ,GADAX,EACmBtB,EAAUvN,IAAM,EAEhBuN,EAAUvN,IAAM,EAFGuN,EAAU9Q,UAM1C,QAAdrF,EAAMwM,KAAmB8J,GAAmBA,EAAelK,SAAS+J,EAAU9Q,UAC9ErF,EAAMmY,iBACF9B,EAEI4C,GAAS9C,EAAUvN,IADnB6O,EACwBtB,EAAU9Q,OAAS,EAEnB8Q,EAAU9Q,OAAS,IAG/C2T,KAEIZ,GAAmBjC,EAAUvN,IAD7B6O,EACkCtB,EAAU9Q,OAAS,EAEnB8Q,EAAU9Q,OAAS,KAI/C,MAAdrF,EAAMwM,KACFmL,IACA3X,EAAMmY,iBACNa,MAKZ,SAASC,GAAUX,EAAUC,EAAaW,GAKtC,QAJ2BnK,IAAvBoH,EAAUgD,eAA4CpK,IAAlBoH,EAAUvN,UAA0CmG,IAArBoH,EAAU9Q,SAC5EqR,EAAgBP,EAAUgD,SAAS3V,MAAQ2S,EAAUgD,aAAezC,EAAgBP,EAAUhW,QAAQqD,MAAQ2S,EAAUhW,UACzHvC,EAAMwb,SAASjD,EAAUvN,IAAKuN,EAAU9Q,OAAQ8Q,EAAUhW,SAE1DmY,GAAY,GAAKC,GAAe,EAAG,CACnC,IAAM3P,EAAM6P,GAASH,GACfjT,EAASqT,GAAY9P,EAAK2P,GAC1BY,OAA6BpK,IAAlBmK,EAA8BA,EAAgBjD,EAAKrN,GAAKvD,GACzE+Q,EAAQ,CAAExN,MAAKvD,SAAQ8T,WAAUhZ,QAASgZ,KAIlD,SAASH,KAA0C,IAA7BK,IAA4B,yDAAfC,EAAe,uCAC1CD,GACAzb,EAAMwb,SAASjD,EAAUvN,IAAKuN,EAAU9Q,OAAQiU,GAAiBnD,EAAUhW,SAE/EiW,EAAQ,IACRgC,GAAmBjC,EAAUvN,IAAKuN,EAAU9Q,QAGhD,SAASkU,GAAaZ,EAAUE,EAAaW,EAAeC,GACxD,OAAOD,EAAc1H,KAAI,SAAClJ,EAAK0P,GAAN,OAG7B,SAAyB1P,EAAKiQ,EAAaY,EAAcnB,GACrD,YAAqBvJ,IAAjB0K,EACOnZ,OAAOsB,OAAO,GAAIgH,EAAIkJ,KAAI,SAAChJ,EAAM4Q,GAAP,OAMzC,SAA0B5Q,EAAM6Q,EAAMrB,EAAUoB,GAC5C,YAAa3K,IAAT4K,GACA/b,EAAMwb,SAASd,EAAUoB,EAAWC,GAC7BA,GAEA7Q,EAX+C8Q,CAAgB9Q,EAAM2Q,EAAaC,EAAYb,GAAcP,EAAUoB,OAEtH9Q,EAPiCiR,CAAejR,EAAKiQ,EAAaY,EAAanB,EAAWK,GAAWL,MAoBpH,SAASG,GAAU7P,GACf,OAAOA,EAAMqN,EAAKtP,OAAS,EAAIsP,EAAKtP,OAAS,EACvCiC,EAAM,EAAI,EAAIA,EAGxB,SAAS8P,GAAa9P,EAAKvD,GACvB,OAAOA,EAAS4Q,EAAKrN,GAAKjC,OAAS,EAAIsP,EAAKrN,GAAKjC,OAAS,EACpDtB,EAAS,EAAI,EAAIA,EAG3B,SAASyU,GAAWlR,EAAK0P,GACrB,OAAIA,GAAYtB,EAAe2B,UAC3BL,GAAYtB,EAAe4B,OAOnC,SAASmB,GAAqBnR,GAC1B,OAAOA,EAAIsD,OAAO8N,IAAmBlI,KAAI,SAAArM,GACrC,OAAOiR,OACY3H,IAAZtJ,EAAEjC,MAAsB,GAAKiC,EAAEjC,MAAM+D,WACtC9B,EAAE8B,cACT8E,KAAK,MAGZ,SAAS2N,GAAmBlR,EAAMyP,GAC9B,OAAIA,GAAevB,EAAe6B,aAC9BN,GAAevB,EAAe8B,UAqItC,OAhfAzX,qBAAU,WACNiW,EAAarB,EAAK/J,OAAO4N,IAAWhI,IAAIiI,IAAqB1N,KAAK,SACnE,CAAC4J,EAAMe,IAEV3V,qBAAU,WACFgW,GACAU,OAEL,CAACV,IAEJhW,qBAAU,WACN,QAAsB0N,IAAlBoH,EAAUvN,UAA0CmG,IAArBoH,EAAU9Q,OAAsB,CAC/D,IAAM1D,EAAMkW,GAAU1X,QACtBwB,EAAIb,QACAiV,GACAA,IAAiB,EAEjBpU,EAAIsV,kBAAkB,EAAGtV,EAAI6B,MAAMmD,aAGvCoR,OAEL,CAAC5B,EAAUvN,IAAKuN,EAAU9Q,SA4dzB,yBAAK7H,MAAO,CAAEO,MAAO,OAAQkc,cAA4BlL,IAAlBoH,EAAUvN,KAA0C,IAArBuN,EAAU9Q,QAAgB,YAC5F6U,UArdR,SAA2Bla,GACL,UAAdA,EAAMwM,KACNkL,GAAiB,GAEH,YAAd1X,EAAMwM,KACNoL,GAAgB,IAidhBuC,QA7cR,SAAyBna,GACH,UAAdA,EAAMwM,KACNkL,GAAiB,GAEH,YAAd1X,EAAMwM,KACNoL,GAAgB,KAychB,8BAAUjW,IAAKmW,GACXvU,KAAK,OACLC,MAAO6T,EACP7Z,MAAO,CAAEyc,SAAU,QAASG,QAAS,IAAMC,QAAS,GACpDC,UAAQ,EACRJ,UA5ZZ,SAA2Bla,GAmBvB,GAlBkB,UAAdA,EAAMwM,KACNyM,GAAS1C,EAAqB3N,IAAK2N,EAAqBlR,QAE1C,QAAdrF,EAAMwM,MACNxM,EAAMmY,iBAEFC,GAAmB7B,EAAqB3N,IADxC6O,EAC6ClB,EAAqBlR,OAAS,EAE9BkR,EAAqBlR,OAAS,IAGjE,WAAdrF,EAAMwM,WACgBuC,IAAlBoH,EAAUvN,UAA0CmG,IAArBoH,EAAU9Q,OACzC2T,KAEAX,MAGU,WAAdrY,EAAMwM,IAAkB,CAKxB,IAJA,IAAM+N,EAAc,GAChB3R,EAAMoO,EAAe2B,SACrBtT,EAAS2R,EAAe6B,YACtB2B,EAAc,GACbnV,GAAU2R,EAAe8B,WACxBzT,GAAU,GACVmV,EAAY5T,KAAK,IAErBvB,IAEJ,KAAOuD,GAAOoO,EAAe4B,QACrBhQ,GAAO,GACP2R,EAAY3T,KAAK4T,GAErB5R,IAEJ2Q,GAAYvC,EAAe2B,SAAU3B,EAAe6B,YAAa5C,EAAMsE,GAEzD,cAAdva,EAAMwM,KACN5O,EAAMwb,SAAS7C,EAAqB3N,IAAK2N,EAAqBlR,OAAQ,IAExD,YAAdrF,EAAMwM,MAEFiL,EACAQ,GAAkBf,EAAiBtO,IAAM,EAAGsO,EAAiB7R,QAE7D+S,GAAmB7B,EAAqB3N,IAAM,EAAG2N,EAAqBlR,SAG5D,cAAdrF,EAAMwM,MACFiL,EACAQ,GAAkBf,EAAiBtO,IAAM,EAAGsO,EAAiB7R,QAE7D+S,GAAmB7B,EAAqB3N,IAAM,EAAG2N,EAAqBlR,SAG5D,cAAdrF,EAAMwM,MACFiL,EACAQ,GAAkBf,EAAiBtO,IAAKsO,EAAiB7R,OAAS,GAElE+S,GAAmB7B,EAAqB3N,IAAK2N,EAAqBlR,OAAS,IAGjE,eAAdrF,EAAMwM,MACFiL,EACAQ,GAAkBf,EAAiBtO,IAAKsO,EAAiB7R,OAAS,GAElE+S,GAAmB7B,EAAqB3N,IAAK2N,EAAqBlR,OAAS,IAG/EsS,EACkB,MAAd3X,EAAMwM,KAAa4L,GAAmB,KAAM,MAGvB,IAArBpY,EAAMwM,IAAI7F,SACVsS,GAAS1C,EAAqB3N,IAAK2N,EAAqBlR,OAAQrF,EAAMwM,KACtEuJ,IAAiB,IAiVjB0E,OAAQhE,EAnUpB,YAOShY,GAAa8Y,GACdK,GAAgB,GAChBF,GAAiB,GACjBhZ,GAAa,GACb2Z,MAEAb,GAAe,SAsTmCzI,EAC9C2L,QAnTZ,SAAyB1a,GACrBA,EAAM2a,cAAcC,MAAM,GAAGC,aAAY,SAAAxW,GACrC,IAAMoE,EAAOpE,EAAKsL,MAAM,MAClBgK,EAAOtV,EAAK8D,MAAM,OAClBM,EAAKqJ,KAAI,SAAClJ,GAAD,OAASA,EAAI+G,MAAM,SAC5BlH,EAAKqJ,KAAI,SAAClJ,GAAD,OAASA,EAAI+G,MAAM,QAClC4J,GACIvC,EAAe2B,SACf3B,EAAe6B,YACf5C,EACA0D,SA0SJ,2BAAOrW,UAAW1F,EAAM0F,UACpB9F,MAAO8C,OAAOsB,OAAO,GAAI,CAAEkZ,OAAQ,QAAUld,EAAMJ,OACnD0E,UA/cZ,WACIxD,GAAa,IA+cLyD,aAAc,WACViV,EAAS,MAEZxZ,EAAMmd,QACH,2BAAOzX,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQC,MAC7Czd,MAAOI,EAAMN,QAAUM,EAAMN,OAAO2d,OACnCrd,EAAMmd,OAAOjJ,KApJlC,SAAoBlJ,EAAK0P,GACrB,OACI,wBAAI9L,IAAK8L,EAAUhV,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQD,QAAUnd,EAAMod,QAAQD,OAAOG,GACxF1d,MAAOI,EAAMN,QAAUM,EAAMN,OAAOyd,QAAUnd,EAAMN,OAAOyd,OAAOG,IACjEtS,EAAIkJ,KAAI,SAAC7N,EAAKkX,GAAN,OAKrB,SAAqBrS,EAAMsS,GACvB,IAAM7C,EAAc3a,EAAMyd,SAAWD,EAAW,EAAIA,EACpD,OACI,wBAAI5O,IAAK+L,EAAajV,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQD,QAAUnd,EAAMod,QAAQD,OAAOjF,GAC3FtY,MAAO8C,OAAOsB,OAAO,GAAIhE,EAAMN,QAAUM,EAAMN,OAAOyd,QAAUnd,EAAMN,OAAOyd,OAAOjF,GAChFlY,EAAMyd,WAA6B,IAAjB9C,GAAsB3a,EAAMN,QAAUM,EAAMN,OAAO2Y,MAAQrY,EAAMN,OAAO2Y,KAAKoF,SAC/F,CACIhH,gBAAiBkE,GAAenE,EAAM/O,QACtCkT,GAAenE,EAAM/O,OACfzH,EAAM0d,4BACN,OAEdrZ,YAAa,SAACjC,GAAD,OAAWkY,GAAclY,EAAO,KAAMuY,IACnDvW,YAAa,SAAChC,GAAD,OAAWgY,GAAchY,EAAO,KAAMuY,KAClDzP,GAnBsByS,CAAWtX,EAAKkX,WAmJtClF,GACG,2BAAO3S,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQQ,MAC7Che,MAAOI,EAAMN,QAAUM,EAAMN,OAAOke,OACnCvF,EAAKnE,KA9H1B,SAAkBlJ,EAAK0P,GACnB,OACI,wBAAI9L,IAAK8L,EAAUhV,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQD,QAAUnd,EAAMod,QAAQ/E,KAAKiF,GACtF1d,MAAOI,EAAMN,QAAUM,EAAMN,OAAO2Y,MAAQrY,EAAMN,OAAO2Y,KAAKiF,IAC7Dtd,EAAMyd,UACH,kBAAC,GAAD,CAAgB/X,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQD,QAAUnd,EAAMod,QAAQ/E,KAAKH,GACnFtY,MAAO8C,OAAOsB,OAAO,GAAIhE,EAAMN,QAAUM,EAAMN,OAAO2Y,MAAQrY,EAAMN,OAAO2Y,KAAKH,GAC5ElY,EAAMN,QAAUM,EAAMN,OAAO2Y,MAAQrY,EAAMN,OAAO2Y,KAAKoF,SACvD,CACIhH,gBAAiBiE,GAAYlE,EAAMxL,KACnC0P,GAAYlE,EAAMxL,IACZhL,EAAM0d,4BAA8B,OAElDrZ,YAAa,SAACjC,GAAD,OAAWkY,GAAclY,EAAOsY,EAAU,OACvDtW,YAAa,SAAChC,GAAD,OAAWgY,GAAchY,EAAOsY,EAAU,QACtDA,EAAW1a,EAAM6d,gBAGzB7S,EAAIkJ,KAAI,SAAC7N,EAAKkX,GAAN,OAKrB,SAAmBrS,EAAMyP,EAAaD,GAClC,IAAMoD,EAAKxF,GAAiBqC,EAAcrC,EAAgBN,GAAiBC,GAC3E,OAAIM,EAAUvN,MAAQ0P,GAAYnC,EAAU9Q,SAAWkT,EAE/C,kBAAC1C,GAAD,CAAUrJ,IAAK+L,EAAajV,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQ/E,MAAQrY,EAAMod,QAAQ/E,KAAK0F,KAC7Fne,MAAO8C,OAAOsB,OAAO,GAAIhE,EAAMN,QAAUM,EAAMN,OAAO2Y,MAAQrY,EAAMN,OAAO2Y,KAAK0F,KAC5E,CACIC,QAAS,QAEjB5Z,YAAa,SAAChC,GAAD,OAAWgY,GAAchY,EAAOsY,EAAUC,KACtD3B,EACK,kBAACA,EAAD,eACEiB,UAAWA,GACXgE,YAAa1F,EAAUhW,QACvByD,SAAU,SAAAJ,GAAK,OAAI4S,EAAQ,eAAKD,EAAN,CAAiBhW,QAASqD,MACpDwV,YAAaA,GACbkB,UAAWnB,IACPjQ,IACN,2BAAOtL,MAAOI,EAAMN,QAAUM,EAAMN,OAAO2Y,MAAQrY,EAAMN,OAAO2Y,KAAK0F,KACnEha,IAAKkW,GACLtU,KAAK,OACLC,MAAO2S,EAAUhW,QACjByD,SAAU,SAAC5D,GAAD,OAAWoW,EAAQ,eAAKD,EAAN,CAAiBhW,QAASH,EAAM6D,OAAOL,UACnE0W,UAAWnB,MAKvB,kBAAC2C,EAAD,CAAIlP,IAAK+L,EAAajV,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQ/E,MAAQrY,EAAMod,QAAQ/E,KAAKH,GACvFtY,MAAO8C,OAAOsB,OAAO,GAAIhE,EAAMN,QAAUM,EAAMN,OAAO2Y,MAAQrY,EAAMN,OAAO2Y,KAAKH,GAC5E,CACIzB,gBAAiBiE,GAAYtB,EAAe4B,QAC5CN,GAAYtB,EAAe2B,UAC3BJ,GAAevB,EAAe8B,WAC9BP,GAAevB,EAAe6B,YACxBP,IAAa/B,EAAqB3N,KACxC2P,IAAgBhC,EAAqBlR,OAC3BzH,EAAMke,sBACNle,EAAMme,eAAiB,OAEzC/Z,YAAa,SAAChC,GAAD,OAAWgY,GAAchY,EAAOsY,EAAUC,IACvDtW,YAAa,SAACjC,GAAD,OAAWkY,GAAclY,EAAOsY,EAAUC,IACvDrW,UAAW,SAAClC,GAAD,OA3XE4I,EA2X4B0P,EA3XvBjT,EA2XiCkT,OAzX3DzB,EAAYlO,MAAQA,GAAOkO,EAAYzR,SAAWA,EAAQ4T,GAASrQ,EAAKvD,GAGnEkR,EAAqB3N,MAAQA,GAAO2N,EAAqBlR,SAAWA,GACzE0R,EAAe,CAAEnO,MAAKvD,YAN9B,IAA6BuD,EAAKvD,IA4XjBqR,EAAgB,kBAACA,EAAkB5N,GAAWA,GAhD5BkT,CAAS/X,EAAKkX,EAAK7C,WA+GzC1a,EAAMqe,QACH,2BAAO3Y,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQkB,MAC7C1e,MAAOI,EAAMN,QAAUM,EAAMN,OAAO4e,OACnCte,EAAMqe,OAAOnK,KA5DlC,SAAoBlJ,EAAK0P,GACrB,OACI,wBAAI9L,IAAK8L,EAAUhV,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQiB,QAAUre,EAAMod,QAAQiB,OAAOf,GACxF1d,MAAOI,EAAMN,QAAUM,EAAMN,OAAO2e,QAAUre,EAAMN,OAAO2e,OAAOf,IACjEtS,EAAIkJ,KAAI,SAAC7N,EAAKkX,GAAN,OAKrB,SAAqBrS,EAAMyP,EAAaD,GACpC,OACI,wBAAI9L,IAAK+L,EAAaoB,KAAMpB,EAAajV,UAAW1F,EAAMod,SAAWpd,EAAMod,QAAQiB,QAAUre,EAAMod,QAAQiB,OAAOnG,GAC9GtY,MAAO8C,OAAOsB,OAAO,GAAIhE,EAAMN,QAAUM,EAAMN,OAAO2e,QAAUre,EAAMN,OAAO2e,OAAOnG,GAChF,CACIzB,gBAAiBkE,GAAevB,EAAe8B,WAC/CP,GAAevB,EAAe6B,aAC9BP,GAAYtB,EAAe4B,QAC3BN,GAAYtB,EAAe2B,SACrB/a,EAAMme,eACN,QAEbjT,GAjBsBqT,CAAWlY,EAAKkX,EAAK7C,a,+GCvjB5D,IAAMlb,GAAaH,IAAOC,IAAV,MAID,SAASkf,GAAOxe,GAY3B,IAZmC,IAE/BsV,EAIAtV,EAJAsV,QACAC,EAGAvV,EAHAuV,kBACA1K,EAEA7K,EAFA6K,KACA5C,EACAjI,EADAiI,kBAEElF,EAAOuF,SAASL,EAAkBlF,MAAQ,EAAG,IAC7CyF,EAAQF,SAASL,EAAkBO,OAAS,GAAI,IAChDiW,EAAS,GACXC,GAAa,EAAI3b,EACf4b,EAAgC,IAAnBrJ,EAAQvM,OACpB2V,GAAalW,GACZmW,EACAF,EAAOzV,KAAK6B,EAAK6T,EAAY3b,GAAM,IAEnC0b,EAAOzV,KAAK0V,GAEhBA,IAEJ,IAaME,EAAY,CACdH,SACAI,SAfavJ,EAAQpB,KAAI,SAACzM,EAAQmG,GAClC,MAAO,CACH5I,MAAOyC,EACPqX,YAAa,EACbC,MAAM,EACNtI,gBAAiBlB,EAAkB9N,GACnCuX,YAAazJ,EAAkB9N,GAC/BwX,iBAAkB1J,EAAkB9N,GACpCyX,qBAAsB3J,EAAkB9N,GACxCsU,KAAMlR,EAAKqJ,KAAI,SAAArM,GAAC,OAAIA,EAAE+F,MACtBuR,OAAQvR,IAAU0H,EAAQvM,OAAS,OAO3C,OACI,kBAAC,GAAD,KACI,kBAAC,KAAD,CAAMqW,QAAQ,EAAMrD,KAAM6C,K,iHC5CtC,IAAMS,GAAShgB,IAAOC,IAAV,MAKG,SAASggB,GAAWtf,GAI/B,IACQ0F,EAAuC1F,EAAvC0F,UAAWV,EAA4BhF,EAA5BgF,MAAO4F,EAAqB5K,EAArB4K,SAAU2U,EAAWvf,EAAXuf,OACpC,OACI,uBAAK7Z,UAAWA,GACZ,gBAAC2Z,GAAD,CAAQxZ,QAAS,kBAAM0Z,MAClBva,GAEJ4F,GAAY5K,EAAMwf,U,ghFCX/B,IAAMC,GAAuBpgB,IAAOC,IAAV,K1BSI,Q0BCxBC,GAAQF,IAAOC,IAAV,MAQLogB,GAAergB,IAAOC,IAAV,MAMZqgB,GAAQtgB,IAAOC,IAAV,MAaLsgB,GAAavgB,IAAOC,IAAV,K1B5Bc,Q0B8CxBugB,GAAexgB,IAAOC,IAAV,K1B3DI,Q0BkFhBwT,GAAQzT,IAAOC,IAAV,K1BjFgB,S0B6FrBwgB,GAAazgB,IAAOC,IAAV,MAMVygB,GAAU1gB,IAAOC,IAAV,MAIP0gB,GAAc3gB,YAAOsF,EAAPtF,CAAH,MAMX4gB,GAAgB5gB,IAAOC,IAAV,K1BlGM,Q0BwHzB,SAAS4gB,GAAalP,EAAG3H,GACrB,OAAI2H,EAAED,KAAO1H,EAAE0H,MACH,EACDC,EAAED,KAAO1H,EAAE0H,KACX,EAEHC,EAAE0C,KAAOrK,EAAEqK,MACH,EAED,EAMnB,SAASyM,GAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,WAAY9R,EAAU,EAAVA,OAC7B/H,EAAO7D,OAAO6D,KAAK6Z,GACnBC,EAAa,GAGnB/R,EAAOyD,MAAM,KAAKnP,SAAQ,SAAA0d,GACtB,IAAIxS,EACJ,IACIA,EAAQ,IAAIrD,OAAO6V,EAAY,MACjC,MAAOC,GACLzS,EAAQ,IAAIrD,OAAoB6V,EAvC1BnZ,QAAQ,sBAAuB,QAuCQ,MAEjDkZ,EAAWrX,KAAK8E,MAGpB,IAAM0S,EAAqB,GAC3Bja,EAAK3D,SAAQ,SAAAgM,GACT,IAAM6R,EAAWL,EAAWxR,GACtBmC,EA5Cd,YAA6D,IAA3CsP,EAA0C,EAA1CA,WAAY3M,EAA8B,EAA9BA,KAAM3M,EAAwB,EAAxBA,IAAK2N,EAAmB,EAAnBA,SAAUE,EAAS,EAATA,MAC3C8L,EAAQ,EAOZ,OANAL,EAAWzd,SAAQ,SAAAkL,GACf4S,GAAuD,KAA7ChN,EAAKnJ,MAAMuD,IAAU,CAAE/E,OAAQ,IAAKA,OAC9C2X,GAA2D,IAAjDhM,EAASnK,MAAMuD,IAAU,CAAE/E,OAAQ,IAAKA,OAClD2X,GAAsD,IAA5C3Z,EAAIwD,MAAMuD,IAAU,CAAE/E,OAAQ,IAAKA,OAC7C2X,GAAwD,GAA9C9L,EAAMrK,MAAMuD,IAAU,CAAE/E,OAAQ,IAAKA,UAE5C2X,EAoCUA,CAAM,CAAEhN,KAAM9E,EAAK7H,IAAK0Z,EAAS1Z,IAAK2N,SAAU+L,EAAS/L,UAAY,GAAIE,MAAO6L,EAAS7L,OAAS,GAAIyL,eAC/GtP,EAAO,IACFyP,EAAmBC,EAAS/L,UAAY,UACzC8L,EAAmBC,EAAS/L,UAAY,QAAU,IAEtD8L,EAAmBC,EAAS/L,UAAY,QAAQ1L,KAAK,CACjD0K,KAAM9E,EACN7H,IAAK0Z,EAAS1Z,IACd2N,SAAU+L,EAAS/L,SACnBE,MAAO6L,EAAS7L,MAChB7D,YAGT,IACH,IAAMzK,EAAM,GAIZ,OAHA5D,OAAO6D,KAAKia,GAAoB5d,SAAQ,SAAAgM,GACpCtI,EAAI0C,KAAK,CAAE0K,KAAM9E,EAAK+R,UAAWH,EAAmB5R,GAAKmC,KAAKmP,SAE3D5Z,EAGX,SAASsa,GAAoB5gB,GAAQ,IACzBgF,EAAUhF,EAAVgF,MADwB,EAEJxE,oBAAS,GAFL,mBAEzBqgB,EAFyB,KAEjBC,EAFiB,KAIhC,OAAO,kBAACxB,GAAD,CAAWta,MAAOA,EAAO4F,SAAUiW,EAAQtB,OAAQ,kBAAMuB,GAAWD,KACtE7gB,EAAMwf,UAIA,SAASuB,GAAgB/gB,GAAQ,IACpCghB,EAAsDhhB,EAAtDghB,aAAcC,EAAwCjhB,EAAxCihB,oBAAqBC,EAAmBlhB,EAAnBkhB,eADA,EAEf1gB,mBAAS,IAFM,mBAEpC8N,EAFoC,KAE5B6S,EAF4B,KAIrCC,EAAgBpgB,mBAEtByC,qBAAU,WACN2d,EAAc7e,QAAQW,UACvB,IAEH,IAAMme,EAAgBlB,GAAe,CAAE7R,SAAQ8R,WAAYc,IACrDI,EAAkBnB,GAAe,CAAE7R,SAAQ8R,WAAYmB,KAE7D,SAASC,EAAqBf,GAC1B,OACI,kBAACb,GAAD,CAAYhR,IAAK6R,EAAS/M,MACtB,kBAAC,GAAD,KACI,kBAAC,IAAD,CAAM5T,GAAI2gB,EAAS1Z,KAAM0Z,EAAS/M,OAEtC,kBAACmM,GAAD,CAAcha,QAAS,WACnBob,EAAoBR,EAAS/M,QAE7B,uBAAGhO,UAAU,kBAAb,WAchB,SAAS+b,EAAuBhB,GAC5B,OACI,kBAACb,GAAD,CAAYhR,IAAK6R,EAAS/M,MACtB,kBAAC,GAAD,KACI,kBAAC,IAAD,CAAM5T,GAAI2gB,EAAS1Z,KAAM0Z,EAAS/M,QAclD,OACI,kBAAC+L,GAAD,KACI,kBAACC,GAAD,CAAc7Z,QAASmb,GACnB,kBAAC,GAAD,qBAGA,kBAACrB,GAAD,CAAO9Z,QAASmb,GACZ,uBAAGtb,UAAU,kBAAb,WAGR,kBAACsa,GAAD,CACIjc,IAAKqd,EACLrb,YAAY,SACZH,MAAO0I,EACPtI,SAAU,SAAA5D,GAAK,OAAI+e,EAAU/e,EAAM6D,OAAOL,UAEpB,IAAzByb,EAActY,OACT,kBAACgX,GAAD,qCACA,KAELsB,EAAcnN,KA9CvB,YAAoD,IAApBR,EAAmB,EAAnBA,KAAMiN,EAAa,EAAbA,UAClC,OACI,kBAACC,GAAD,CAAoBhS,IAAK8E,EAAM1O,MAAO,kBAACib,GAAD,kBAA0BvM,IAC3DiN,EAAUzM,IAAIsN,OA4ClBF,EAAgBvY,OAAS,EACpB,kBAAC+W,GAAD,yBACA,KAELwB,EAAgBpN,KAjCzB,YAAsD,IAApBR,EAAmB,EAAnBA,KAAMiN,EAAa,EAAbA,UACpC,OACI,kBAACC,GAAD,CAAoBhS,IAAK8E,EAAM1O,MAAO,kBAACib,GAAD,kBAA0BvM,IAC3DiN,EAAUzM,IAAIuN,Q,26DC/N/B,ICrB6BC,GDqBvBC,GAAatiB,IAAOC,IAAV,MAKVsiB,GAAaviB,IAAOC,IAAV,MAUVuiB,GAAexiB,IAAOC,IAAV,MASZwiB,GAAoBziB,IAAOC,IAAV,MAQjByiB,GAAwB1iB,IAAOC,IAAV,MAGrB+U,GAAsBhV,IAAOC,IAAV,MAGnB0iB,GAAa3iB,IAAOC,IAAV,MAGV2iB,GAAc5iB,IAAOC,IAAV,MAGX4iB,GAA6B7iB,IAAOC,IAAV,MAK1B6iB,GAAwB9iB,IAAOC,IAAV,MAGrB8iB,GAAiB/iB,IAAOC,IAAV,K3BzEE,O2B4EdI,GAIF2iB,GAAUhjB,IAAOC,IAAV,MAKPC,GAAQF,IAAOC,IAAV,KAGEI,GAKP4iB,GAAiBjjB,IAAOC,IAAV,MAMdijB,GAAaljB,IAAOC,IAAV,MAIVkjB,GAAanjB,IAAOC,IAAV,MAIVmjB,G,2MAKFC,MAAQ,CACJC,MAAO,CACH,IAEJhK,qBAAsB,I,EA2K1BiK,WAAa,WACT,EAAKC,SAAS,CAAEC,UAAW,EAAKJ,MAAMI,Y,EAG1C9B,aAAe,WACX,EAAK+B,8BAAL,eAAwC,EAAKL,MAAMM,eAAnD,CAAmEC,YAAa,EAAKP,MAAMM,eAAeC,e,EAG9GC,eAAiB,WACb,EAAKH,8BAAL,eAAwC,EAAKL,MAAMM,eAAnD,CAAmEG,cAAe,EAAKT,MAAMM,eAAeG,iB,EAGhHC,YAAc,WACV,EAAKL,8BAAL,eAAwC,EAAKL,MAAMM,eAAnD,CAAmEK,WAAY,EAAKX,MAAMM,eAAeK,c,EAG7GC,aAAe,WACX,EAAKP,8BAAL,eAAwC,EAAKL,MAAMM,eAAnD,CAAmEO,YAAa,EAAKb,MAAMM,eAAeO,e,EAG9GC,YAAc,WACV,EAAKT,8BAAL,eAAwC,EAAKL,MAAMM,eAAnD,CAAmES,WAAY,EAAKf,MAAMM,eAAeS,c,EAG7GC,cAAgB,WACZ,EAAKX,8BAAL,eAAwC,EAAKL,MAAMM,eAAnD,CAAmEW,aAAc,EAAKjB,MAAMM,eAAeW,gB,EAG/GC,yBAA2B,WACvB,OAAO5R,GAAgB,mBAAqB,I,EAGhD6R,yBAA2B,SAACC,GACxB5R,GAAgB,iBAAkB4R,GAClC,EAAKjB,SAAS,CAAEiB,2B,EAGpBC,8BAAgC,WAC5B,OAAO/R,GAAgB,c,EAG3B+Q,8BAAgC,SAACC,GAC7B9Q,GAAgB,YAAa8Q,GAC7B,EAAKH,SAAS,CAAEG,oB,EAGpBgB,kBAAoB,YAAyC,IAAtChc,EAAqC,EAArCA,QAAS0L,EAA4B,EAA5BA,KAAMgB,EAAsB,EAAtBA,SAAUE,EAAY,EAAZA,MACtCkP,EAAwB,EAAKF,2BACnCE,EAAsBpQ,GAAQ,CAC1BgB,WACAE,QACAqP,KAAMC,KAAKC,MACXpd,IAAKiB,EAAQ6O,SAASuN,MAAQ,GAAKpc,EAAQ6O,SAASwN,QAAU,IAElE,EAAKR,yBAAyBC,I,EAGlC7C,oBAAsB,SAACvN,GACnB,IAAMoQ,EAAwB,EAAKF,kCAC5BE,EAAsBpQ,GAC7B,EAAKmQ,yBAAyBC,I,EAGlClL,wBAA0B,SAACa,GACvB,EAAKoJ,SAAL,eAAmB,EAAKH,MAAxB,CAA+B/J,qBAAsBc,M,oFAvOrD,IAAMqK,EAAwBrR,KAAKmR,2BAC7BZ,EAAc,aAChBC,YAAY,EACZE,cAAc,EACdE,WAAW,EACXE,YAAY,EACZI,aAAa,GACVlR,KAAKsR,iCAERrP,EAAW,GACXjC,KAAKzS,MAAMyG,OACPqd,EAAsBrR,KAAKzS,MAAMyG,MACjCiO,EAAWoP,EAAsBrR,KAAKzS,MAAMyG,MAAMiO,SAC3C6M,GAAQ9O,KAAKzS,MAAMyG,QAC1BiO,EAAW6M,GAAQ9O,KAAKzS,MAAMyG,MAAMiO,WAG5C,IAAIE,EAAQ,GACRnC,KAAKzS,MAAMyG,OACPqd,EAAsBrR,KAAKzS,MAAMyG,MACjCmO,EAAQkP,EAAsBrR,KAAKzS,MAAMyG,MAAMmO,MACxC2M,GAAQ9O,KAAKzS,MAAMyG,QAC1BmO,EAAQ2M,GAAQ9O,KAAKzS,MAAMyG,MAAMmO,QAGzCnC,KAAKoQ,SAAS,CACVF,MAAOlQ,KAAK6R,cAAc7R,KAAKzS,OAC/B8jB,wBACAd,iBACApO,QACAF,e,gDAImB6P,GACvB,IAAMT,EAAwBrR,KAAKmR,2BADD,EAEiCW,EAA3D/Q,YAF0B,MAEnB,GAFmB,IAEiC+Q,EAAhDtc,yBAFe,MAEK,GAFL,IAEiCsc,EAAxBhd,sBAFT,MAE0B,GAF1B,EAG5Bid,EAAmBhR,EAAKhD,oBAAsB,GAC9CiU,EAAehS,KAAKzS,MACpB0kB,EAA0BD,EAAajR,KAAKgR,kBAAoB,GACtE,GAAIC,EAAajR,KAAKlD,mBAAqBkD,EAAKlD,kBAC5CmU,EAAaxc,kBAAkBlF,OAASkF,EAAkBlF,MAC1D0hB,EAAaxc,kBAAkBO,QAAUP,EAAkBO,OAC3D9F,OAAO6D,KAAKke,EAAald,gBAAgBod,MAAK,SAAA/V,GAC1C,cAAc6V,EAAald,eAAeqH,YAAgBrH,EAAeqH,IACrE6V,EAAald,eAAeqH,GAAKhH,QAAUL,EAAeqH,GAAKhH,OAC/D6c,EAAald,eAAeqH,GAAK9G,WAAaP,EAAeqH,GAAK9G,aAE1E4c,EAAwBC,MAAK,SAAAC,GAAQ,OAAKJ,EAAiBhW,SAASoW,OACpEJ,EAAiBG,MAAK,SAAAE,GAAI,OAAKH,EAAwBlW,SAASqW,MAAQ,CACxE,IAAMC,EAAW,CACbnC,MAAOlQ,KAAK6R,cAAcC,GAC1BT,yBAEArR,KAAKzS,MAAMyG,OAAS8d,EAAU9d,OACzB8d,EAAU9d,KAEJqd,EAAsBS,EAAU9d,MACvCqe,EAASpQ,SAAWoP,EAAsBS,EAAU9d,MAAMiO,UAAY,GAC/D6M,GAAQgD,EAAU9d,QACzBqe,EAASpQ,SAAW6M,GAAQgD,EAAU9d,MAAMiO,UAAY,IAJxDoQ,EAASpQ,SAAW,IAOxBjC,KAAKzS,MAAMyG,OAAS8d,EAAU9d,OACzB8d,EAAU9d,KAEJqd,EAAsBS,EAAU9d,MACvCqe,EAASlQ,MAAQkP,EAAsBS,EAAU9d,MAAMmO,OAAS,GACzD2M,GAAQgD,EAAU9d,QACzBqe,EAASlQ,MAAQ2M,GAAQgD,EAAU9d,MAAMmO,OAAS,IAJlDkQ,EAASlQ,MAAQ,IAOzBnC,KAAKoQ,SAASiC,M,uCAIuC,IAA5CtR,EAA2C,EAA3CA,KAAMjM,EAAqC,EAArCA,eAAgBU,EAAqB,EAArBA,kBAC7Buc,EAAmBhR,EAAKhD,oBAAsB,GADI,EAEvBvI,EAAzBlF,YAFgD,MAEzC,EAFyC,IAEvBkF,EAAfO,aAFsC,MAE9B,GAF8B,EAGlDma,EAAQ,GACRoC,EAAmBP,EAAiBtQ,KAAI,SAAAzM,GAC1C,IAAIG,EAAQ,EACRE,EAAW,EAOf,OANIP,EAAeE,IAAWF,EAAeE,GAAQG,QACjDA,EAAQL,EAAeE,GAAQG,OAE/BL,EAAeE,IAAWF,EAAeE,GAAQK,WACjDA,EAAWP,EAAeE,GAAQK,UAE/B,CACH4L,KAAMjM,EACNG,QACAE,eAGFkd,EAAS,CACXtG,WAAY,EAAIpW,SAASvF,EAAM,KAKnC,IAzBwD,iBA0BpD,IAAMkiB,EAAgB,GAChBC,EAAQH,EAAiB7Q,KAAI,SAAAzM,GAC/B,IAAMnB,EANd,SAA6BmB,GACzB,OAAO+J,WAAW/J,EAAOG,OAASod,EAAOtG,UAAYlN,WAAW/J,EAAOK,UAKvDqd,CAAmB1d,GAE/B,OADAwd,EAAcxd,EAAOiM,MAAQpN,EACtB8e,OAAO9e,EAAI+e,QAAQ,QAExBhU,EAAW+T,OAAO5T,WlB3F7B,YAEJ,IAFsC/K,EAEvC,EAFuCA,KAAMwe,EAE7C,EAF6CA,cAGvC3e,EAAMG,EAKV,OAJsBoJ,GAAa,CAAEpJ,SACvBsK,MAAK,SAACC,EAAG3H,GAAJ,OAAUA,EAAEN,OAASiI,EAAEjI,UAAQnG,SAAQ,SAAAoH,GACtD1D,EAAMA,EAAIa,QAAQ,IAAIsD,OAAOT,EAAU,KAAjC,WAA2Cib,EAAcjb,GAAzD,SAEHoH,GAAM,CAAE3K,KAAMH,IkBmFsBgf,CAAsB,CAAE7e,KAAM+M,EAAKlD,iBAAkB2U,kBAAiB5T,UAAY,GAAGgU,QAAQ,KAChI1C,EAAM3Z,KAAN,sBAAekc,GAAf,CAAsB7T,KACtB2T,EAAOtG,aATJsG,EAAOtG,WAAapW,SAASE,EAAO,KAAM,IAWjD,OAAOma,I,mDAGmB4C,EAAkBC,GAC5C,IAAMC,EAAuB,CACzBzd,QAASud,EAAiBvd,QAC1BvB,KAAM8e,EAAiB9e,KACvBiO,SAAU6Q,EAAiB7Q,SAC3BE,MAAO2Q,EAAiB3Q,MACxBnT,QAAQ,eAAM8jB,EAAiB9jB,SAC/B8F,eAAe,eAAMge,EAAiBhe,gBACtCU,kBAAkB,eAAMsd,EAAiBtd,mBACzCC,eAAiBqd,EAAiB9e,MAAQ+e,EAAiB/e,MAAU8e,EAAiB9e,OAAS+e,EAAiB/e,MAuBpH,GApBI+e,EAAiBje,iBACjBke,EAAqBle,eAArB,eAA2Cie,EAAiBje,gBAC5Dke,EAAqBvd,eAAgB,GAGrCsd,EAAiBvd,oBACjBwd,EAAqBxd,kBAArB,eAA8Cud,EAAiBvd,mBAC/Dwd,EAAqBvd,eAAgB,GAGA,kBAA9Bsd,EAAiB9Q,WACxB+Q,EAAqB/Q,SAAW8Q,EAAiB9Q,SACjD+Q,EAAqBvd,eAAgB,GAGH,kBAA3Bsd,EAAiB5Q,QACxB6Q,EAAqB7Q,MAAQ4Q,EAAiB5Q,MAC9C6Q,EAAqBvd,eAAgB,GAGrCsd,EAAiB/e,MAAQ+e,EAAiB/jB,SAAW+jB,EAAiB7e,KAAM,CAC5E,IAAM6M,EAAOrD,GAAe,CAAE1J,KAAM+e,EAAiB/e,KAAMhF,QAAS+jB,EAAiB/jB,QAASkF,KAAM6e,EAAiB7e,OACrHjE,OAAO6D,KAAKkf,EAAqBle,gBAAgB3E,SAAQ,SAAAgM,GAChD4E,EAAKhD,mBAAmBhC,SAASI,WAC3B6W,EAAqBle,eAAeqH,MAGnD6W,EAAqBhf,KAAO+e,EAAiB/e,KAC7Cgf,EAAqB9e,KAAO6e,EAAiB7e,KAC7C8e,EAAqBhkB,QAArB,eAAoC+jB,EAAiB/jB,SAEzDsG,GAAc,eAAK0d,M,wCAG4B,IAAjChV,EAAgC,EAAhCA,UAAW8E,EAAqB,EAArBA,kBACzB,OAAO9E,EAAUyD,KAAI,SAAAlK,GACjB,OAAO,uBAAK4E,IAAK5E,EAAUpK,MAAO,CAAEC,WAAY,OAAQyJ,MAAOiM,EAAkBvL,KAAcA,Q,+BAuE5F,IAAD,SACsEyI,KAAKzS,MAAzEwT,EADF,EACEA,KAAM/M,EADR,EACQA,KAAMhF,EADd,EACcA,QAAS8F,EADvB,EACuBA,eAAgBU,EADvC,EACuCA,kBAAmBD,EAD1D,EAC0DA,QAC1D0d,EAAgB,CAAE1d,UAASvB,OAAMhF,UAASwG,oBAAmBV,kBAF7D,EAiBFkL,KAAKiQ,MAZLC,EALE,EAKFA,MACAjO,EANE,EAMFA,SACAE,EAPE,EAOFA,MACAkP,EARE,EAQFA,sBARE,IASFd,eACIC,EAVF,EAUEA,WACAE,EAXF,EAWEA,aACAE,EAZF,EAYEA,UACAE,EAbF,EAaEA,WAEAI,EAfF,EAeEA,YAGFtS,EAAWmC,EAAK5C,WAAWS,SAC3B5D,EAAS+F,EAAK/F,OACd+W,EAAmBhR,EAAKhD,mBAAmBlC,QAAO,SAAAzG,GAAC,OAAIA,IAAMpB,KAC7D8O,EAAoBiP,EAAiB1Z,QAAO,SAACC,EAAKxI,GACpD,IAAM+D,EAAG,eAAQyE,GAEjB,OADAzE,EAAI/D,GAAW0G,GAAS1G,GACjB+D,IACR,IAEH,OADAiP,EAAkB9O,GAAQwC,GAASxC,GAE/B,gBAACkb,GAAD,KACI,gBAACC,GAAD,CAAYhiB,MAAO,CAAEO,MAAO8iB,EAAa,qBAAuB,SAC5D,gBAAC3D,GAAD,CACI1U,SAAUyY,EACV9D,OAAQ9M,KAAK2Q,YACbpe,MACI,gBAACqd,GAAD,KACI,gBAAChL,GAAD,MACA,gBAAC,GAAD,yBAGR,gBAACyK,GAAD,KACI,gBAAC,GAAD,KACI,gBAACtN,GAAD,CACIhB,KAAI,eAAOA,EAAP,CAAaE,KAAM,KACvBe,gBAAiB,gBAAGhO,EAAH,EAAGA,KAAME,EAAT,EAASA,KAAMlF,EAAf,EAAeA,QAAf,OAA6B,EAAKkkB,6BAA6BD,EAC5E,CACIjf,OACAE,OACAlF,aAERiT,SAAUA,EACVC,iBAAkB,SAAAvS,GACd,EAAKygB,SAAS,CAAEnO,SAAUtS,EAAM6D,OAAOL,SAE3CgP,MAAOA,EACPC,cAAe,SAAAzS,GACX,EAAKygB,SAAS,CAAEjO,MAAOxS,EAAM6D,OAAOL,WAG3CyL,GACG,gBAACiR,GAAD,CAAgB1iB,MAAO,CAAE0J,MAAOiM,EAAkB9O,KAC7CA,EADL,MACckL,GAAaN,OAM3C,gBAACiO,GAAD,CACI1U,SAAU2Y,EACVhE,OAAQ9M,KAAK6Q,aACbte,MACI,gBAACqd,GAAD,KACI,gBAACxK,GAAD,MACA,gBAAC,GAAD,iBAGR,gBAACiK,GAAD,KACI,gBAACE,GAAD,KACKvU,EACK,gBAAC,GAAD,CAAQ3D,MAAOrD,EAAMgH,OAAQA,IAC7B,gBAAC+U,GAAD,oCAC8B,gBAACnL,GAAD,CAAazX,MAAO,CAAEQ,OAAQ,GAAID,MAAO,GAAIylB,QAAS,UAAY/f,QAAS4M,KAAK2Q,cAD9G,iBAEE,2BACA,+BAMpB,gBAAC9D,GAAD,CACI1U,SAAUuY,EACV5D,OAAQ9M,KAAKyQ,eACble,MACI,gBAACqd,GAAD,KACI,gBAACrL,GAAD,MACA,gBAAC,GAAD,2BAGR,gBAAC8K,GAAD,KACI,gBAACC,GAAD,KACI,gBAACG,GAAD,KACI,gBAACC,GAAD,CACIviB,MAAO,CACHO,MAAOqkB,EAAiBzb,OAAU,KAACyb,EAAiBzb,OAAS,G3BrbnE,G2Bqb2I,EAAK,SAE7Iyb,EAAiBzb,OAAS,GACvB,gBAACsM,GAAD,CACI7B,KAAMA,EACN8B,QAASkP,EACTjP,kBAAmBA,EACnBhO,eAAgBA,EAChBiO,SAAUvN,EACVwN,yBAA0B,SAAAD,GAAQ,OAAI,EAAKmQ,6BAA6BD,EACpE,CACIzd,kBAAmBuN,KAE3BE,sBAAuB,SAAAF,GAAQ,OAAI,EAAKmQ,6BAA6BD,EACjE,CACIne,eAAgBiO,KAExBqQ,eAAgB,SAAAlD,GAAK,OAAI,EAAKE,SAAS,CAAEF,aAEhD6B,EAAiBzb,OAAS,EACrB,gBAACqZ,GAAD,KACE,gBAAChK,GAAD,CAAU+E,OAAQ,CAAC,CAAC,aAAF,mBAAkB1K,KAAKqT,eAAe,CAAErV,UAAU,GAAD,mBAAM+T,GAAN,CAAwB/d,IAAO8O,yBAC9FkI,UAAQ,EACRI,eAAgB5V,EAAkBlF,MAAQ,EAC1CsV,KAAMsK,EACNjjB,OAAQ,CACJyd,OAAQ,CACJjF,GAAI,CAAE6N,UAAW,UAErB1N,KAAM,CACF0F,KAAM,CACF5d,MAAOT,KAEXwY,GAAI,CACA/X,M3Bzd7B,I2B0d6B4lB,UAAW,QACXC,aAAc,EACdC,UAAW,wBAEfxI,SAAU,CAAEtd,M3B5dlC,G2B4dwE4lB,UAAW,UAGrE5H,eAAe,OACfD,sBAAsB,OACtBR,4BAA4B,QAC5B/E,qBAAsBlG,KAAKiQ,MAAM/J,qBACjCC,wBAAyBnG,KAAKmG,wBAC9B4C,SAAU,SAACxQ,EAAKvD,EAAQsU,GACpB4G,EAAM3X,GAAKvD,GAAUsU,EACrB,EAAK8G,SAAS,CAAEF,cAG1B,kEACsC,gBAACtL,GAAD,CAAazX,MAAO,CAAEQ,OAAQ,GAAID,MAAO,GAAIylB,QAAS,UAAY/f,QAAS4M,KAAK2Q,cADtH,iBAEE,2BACA,2BAHF,6FAKE,2BACA,iCAQ5B,gBAAC9D,GAAD,CACI1U,SAAU+Y,EACVpE,OAAQ9M,KAAKiR,cACb1e,MACI,gBAACqd,GAAD,KACI,gBAAC5K,GAAD,MACA,gBAAC,GAAD,gBAGR,gBAACqK,GAAD,KACI,gBAACG,GAAD,KACKuC,EAAiBzb,OAAS,EACrB,gBAACyV,GAAD,CACElJ,QAAO,sBAAMkP,GAAN,CAAwB/d,IAC/B8O,kBAAmBA,EACnB1K,KAAM8X,EACN1a,kBAAmBA,IACrB,gBAACua,GAAD,oCAC8B,gBAACxL,GAAD,CAAgBpX,MAAO,CAAEQ,OAAQ,GAAID,MAAO,GAAIylB,QAAS,UAAY/f,QAAS4M,KAAKyQ,iBADjH,yBAQtB,gBAACrB,GAAD,CAAcjiB,MAAO,CAAEO,MAAO8iB,EAAa,IAAM,IAC5CA,GAAc,gBAAClC,GAAD,CACXG,eAAgB4C,EAChB7C,oBAAqBxO,KAAKwO,oBAC1BD,aAAcvO,KAAKuO,gBAG3B,gBAACkF,GAAD,CAActmB,MAAO,CAAEgmB,QAAS,SAC5B,gBAACrD,GAAD,KACI,gBAAC3L,GAAD,CACIJ,OAAK,EACL/P,KAAMA,EACNoQ,SAAU7O,EAAQ6O,SAClBhR,QAAS,WACL,EAAKme,kBAAkB,CAAEhc,UAAS0L,KAAMjN,EAAMiO,WAAUE,cAGpE,gBAAC2N,GAAD,KAAY,gBAAChM,GAAD,CAAcC,OAAK,EAACE,OAAQuM,EAAYpd,QAAS4M,KAAKuO,sB,GAzcnEpO,aAgdJuT,IC3jBczE,GD2jBA0E,YAAW3D,IC3jBE,SAAAziB,GACtC,IAAMqmB,EvBmFH,SAAyBre,GAC5B,IAAMX,EAAYW,EAAQ6O,SAASwN,OAAOtb,OAAS,EAAIjC,EAAYkB,EAAQ6O,SAASwN,QAAU,GACxFpc,EAAoB,GAO1B,OANIZ,EAAUkB,IACVN,EAAkBlF,KAAOsE,EAAUkB,GAEnClB,EAAUoB,IACVR,EAAkBO,MAAQnB,EAAUoB,GAEjC,CACHhC,KAAMY,EAAUX,GAAK,GACrBC,KAAMU,EAAUT,GAAK,GACrBnF,QAAS2E,EAAkBiB,EAAUR,GAAK,IAC1CoB,oBACAV,eAAgBD,EAA0BD,EAAUM,GAAK,KuBjG3C2e,CAAetmB,EAAMgI,SACjCwL,EAAOrD,GAAe,CAAE1J,KAAM4f,EAAU5f,KAAMhF,QAAS4kB,EAAU5kB,QAASkF,KAAM0f,EAAU1f,OAChG,OAAO,kBAAC+a,GAAD,iBAAe1hB,EAAWqmB,EAA1B,CAAqC7S,KAAMA,O,0qBCHtD,IAAM+S,GAAalnB,IAAOC,IAAV,MAQVwT,GAAQzT,IAAOC,IAAV,MAKLknB,GAAQnnB,IAAOC,IAAV,MAKLmnB,GAAiBpnB,IAAOC,IAAV,MAMdonB,GAAWrnB,IAAOC,IAAV,MAKC,SAASqnB,GAAM3mB,GAAQ,IAC1B4F,EAAgB5F,EAAhB4F,MACR,GADwB5F,EAATwT,KACL,KACEnC,EAAarR,EAAbqR,SACR,OACI,kBAACkV,GAAD,KACI,kBAAC,GAAD,KACK3gB,GAEL,kBAAC8gB,GAAD,KACK/U,GAAaN,KAItB,IACIrM,EAAuBhF,EAAvBgF,MAAO4hB,EAAgB5mB,EAAhB4mB,YACf,OACI,kBAACL,GAAD,KACI,kBAAC,GAAD,KACKvhB,GAEJ4hB,EACK,kBAACH,GAAD,KACG9U,GAAa/L,IAEhB,kBAAC4gB,GAAD,KACa,KAAV5gB,EAAe,YAAc+L,GAAa/L,K,2mBCxDnE,IAAMihB,GAAqBxnB,IAAOC,IAAV,MAKlBqF,GAActF,IAAOuF,MAAV,MAKXkiB,GAAcznB,IAAOC,IAAV,MAKXynB,GAAuB1nB,YAAOynB,GAAPznB,CAAH,MAMpB2nB,GAAmB3nB,IAAOC,IAAV,MAMtB,SAAS2nB,GAAYjnB,GACjB,OACI,kBAACgnB,GAAD,iBAAsBhnB,EAAtB,CAA6BJ,MAAO,CAAE6W,gBAAiBzW,EAAM0W,QAAU,eAClE1W,EAAMuT,I,02CCxBnB,IAAM2T,GAAiB7nB,IAAOC,IAAV,MAMdwT,GAAQzT,IAAOC,IAAV,MAGLunB,GAAqBxnB,aD0DZ,SAAuBW,GAAQ,IAClC0F,EAA6D1F,EAA7D0F,UAAWuU,EAAkDja,EAAlDia,UAAWrU,EAAuC5F,EAAvC4F,MAAOI,EAAgChG,EAAhCgG,SAAUmhB,EAAsBnnB,EAAtBmnB,SAAUC,EAAYpnB,EAAZonB,QADhB,EAGD5mB,mBAAS,IAHR,mBAGjC6mB,EAHiC,KAGpBC,EAHoB,KAKzC7jB,qBAAU,WACN6jB,EA5CR,SAAyBF,EAASG,GAC9B,IAAMzZ,EAAQ,IAAIrD,OAAO8c,EAAa,KACtC,OAAOH,EAAQ9Y,QAAO,SAAA2H,GAAM,OAAInI,EAAM3C,KAAK8K,EAAO1C,OA0C/BiU,CAAeJ,EAASxhB,MACxC,CAAEA,EAAOwhB,IAP6B,MASb5mB,mBAAS,CAAEinB,mBAAmB,IATjB,mBASjC/E,EATiC,KAS1BG,EAT0B,KAWzC,OACI,kBAACgE,GAAD,CAAoBnhB,UAAWA,EAAWtB,YAAa,YACnB,IAA5Bse,EAAM+E,mBACN5E,EAAS,CAAE4E,mBAAmB,EAAMC,YAAahF,EAAMgF,gBAG3D,kBAAC,GAAD,CACI9hB,MAAOA,EACPI,SAAU,SAAA5D,GAAK,OAAI4D,EAAS5D,EAAM6D,OAAOL,QACzC0W,UAAW,SAAAla,GAAK,OArDhC,SAAwBA,EAAOsgB,EAAOG,EAAUwE,EAAaF,GACvC,cAAd/kB,EAAMwM,WACoBuC,IAAtBuR,EAAMgF,aAA6BhF,EAAMgF,YAAc,GAAKL,EAAYte,OACxE8Z,EAAS,CAAE4E,mBAAmB,EAAOC,YAAa,IAElD7E,EAAS,CAAE4E,mBAAmB,EAAOC,YAAahF,EAAMgF,YAAc,KAG5D,YAAdtlB,EAAMwM,WACoBuC,IAAtBuR,EAAMgF,YACN7E,EAAS,CAAE4E,mBAAmB,EAAOC,YAAa,IACrB,IAAtBhF,EAAMgF,YACb7E,EAAS,CAAE4E,mBAAmB,EAAOC,YAAaL,EAAYte,OAAS,IAEvE8Z,EAAS,CAAE4E,mBAAmB,EAAOC,YAAahF,EAAMgF,YAAc,KAG5D,UAAdtlB,EAAMwM,MACD8T,EAAM+E,wBAA2CtW,IAAtBuR,EAAMgF,YAGJ,IAAvBL,EAAYte,SACnB3G,EAAMulB,kBACNR,EAASE,EAAY,GAAG9T,MAJxBnR,EAAMulB,kBACNR,EAASE,EAAY3E,EAAMgF,aAAanU,MAM9B,WAAdnR,EAAMwM,MACD8T,EAAM+E,wBAA2CtW,IAAtBuR,EAAMgF,aAClC7E,EAAS,CAAE4E,mBAAmB,KAyBNG,CAAcxlB,EAAOsgB,EAAOG,EAAUwE,EAAaF,IACvEpjB,IAAKkW,IAERyI,EAAM+E,kBACD,kBAACV,GAAD,KACGM,EAAYnT,KAAI,SAAA+B,GAAM,OAAI,kBAACgR,GAAD,eAAYrY,IAAKqH,EAAO1C,GAAI1N,QAAS,kBAAMshB,EAASlR,EAAO1C,MAAS0C,QAEjG,kBAAC6Q,GAAD,KACGO,EAAYnT,KAAI,SAAC+B,EAAQrI,GAAT,OAAmB,kBAACqZ,GAAD,eAAYrY,IAAKqH,EAAO1C,GAAImD,OAAQ9I,IAAU8U,EAAMgF,YAAa7hB,QAAS,kBAAMshB,EAASlR,EAAO1C,MAAS0C,WCtFtI5W,CAAH,KAMIK,GAMtBiF,GAActF,IAAOuF,MAAV,KAIOlF,GAIlBmoB,GAAWxoB,IAAOC,IAAV,MAeRwoB,GAAgBzoB,IAAOC,IAAV,MAKb+iB,GAAUhjB,IAAOC,IAAV,MAIPyoB,GAAY1oB,IAAOC,IAAV,KAGFI,GAGb,SAASsoB,GAAchoB,GAAQ,IAEvBie,EAQAje,EARAie,YACAhE,EAOAja,EAPAia,UACAjU,EAMAhG,EANAgG,SACAsW,EAKAtc,EALAsc,UACA2L,EAIAjoB,EAJAioB,oBACA/G,EAGAlhB,EAHAkhB,eACAgH,EAEAloB,EAFAkoB,gBACA9M,EACApb,EADAob,YAGJ,OACI,kBAAC8L,GAAD,CAAgB5K,UAAWA,GACvB,kBAAC,GAAD,KACI,kBAACwL,GAAD,KACI,kBAAC,GAAD,KACI,kBAACC,GAAD,CAAWliB,QAAS,kBAAMuV,MAA1B,QACA,kBAAC2M,GAAD,CAAWliB,QAAS,kBAAMuV,GAAY,KAAtC,WAEJ,kBAAC,GAAD,KACI,kBAAC2M,GAAD,CAAWliB,QAAS,WAChBqiB,EAAgB,CACZxU,KAAMuK,EAAYrY,MAClB8O,SAAUuJ,EAAYvJ,SACtBjT,QAASwc,EAAYzK,KAAK/R,QAC1BmT,MAAOqJ,EAAYrJ,MACnBnO,KAAMwX,EAAYzK,KAAK/M,KACvBE,KAAMsX,EAAYzK,KAAK7M,MACxBua,GACH9F,MATJ,iBAWA,kBAAC2M,GAAD,CAAWliB,QAAS,kBAAMG,EAAS,eAAKiY,EAAN,CAAmBzK,KAAMrD,GAAe,CAAE1J,KAAM,UAAlF,WAGR,kBAAC+N,GAAD,CACIhB,KAAI,eAAOyK,EAAYzK,KAAnB,CAAyBE,KAAMuK,EAAYrY,OAAS,KACxD6O,gBAAiB,SAAAjB,GAAI,OAAIxN,EAAS,eAAKiY,EAAN,CAAmBzK,KAAMrD,GAAe,CAAE1J,KAAM+M,EAAK/M,KAAME,KAAM6M,EAAK7M,KAAMlF,QAASiQ,GAAa8B,EAAK/R,eACxIkT,iBAAkB,SAAAvS,GAAK,OAAI4D,EAAS,eAAKiY,EAAN,CAAmBvJ,SAAUtS,EAAM6D,OAAOL,UAC7EiP,cAAe,SAAAzS,GAAK,OAAI4D,EAAS,eAAKiY,EAAN,CAAmBrJ,MAAOxS,EAAM6D,OAAOL,aAG/E,kBAAC,GAAD,CACIqU,UAAWA,EACXrU,MAAOqY,EAAYrY,MACnBI,SAAU,SAAAJ,GAAK,OAAII,EAAS,eAAKiY,EAAN,CAAmBrY,YAC9CuhB,SAAU,SAAAgB,GACN,IAAI1U,EACAyN,EAAeiH,IAAiBjH,EAAeiH,GAAcphB,IAC7D0M,EAAUrM,EAAmB8Z,EAAeiH,GAAcphB,KAAKtF,QAAQ0mB,GAChEjH,EAAeiH,GACtB1U,EAAU,CAAEhS,QAASyf,EAAeiH,GAAc1mB,QAASgF,KAAMya,EAAeiH,GAAc1hB,KAAME,KAAMua,EAAeiH,GAAcxhB,MAChI4a,GAAQ4G,KACf1U,EAAUrM,EAAmBma,GAAQ4G,GAAcphB,KAAKtF,QAAQ0mB,IAEpE/M,GAAY,EAAM,CAAE5H,KAAMC,EAAS7N,MAAOuiB,KAE9Cf,QAASnJ,GAAeA,EAAYzK,MAAkC,KAA1ByK,EAAYzK,KAAK/M,KAAc,GAAKwhB,KAMjF,SAASG,GAAUpoB,GAAQ,IAC9BgF,EAAUhF,EAAVgF,MACR,GAAIA,EAAO,CAAC,IACAiZ,EAAgDje,EAAhDie,YAAahE,EAAmCja,EAAnCia,UAAWjU,EAAwBhG,EAAxBgG,SAAUsW,EAActc,EAAdsc,UAEpC+L,EAAmC,kBAAhBpK,EAA2BA,EAAYrY,MAAQqY,EAExE,OACI,kBAACiJ,GAAD,CAAgB5K,UAAWA,GACvB,kBAAC,GAAD,KAAQtX,GACR,kBAAC,GAAD,CACIjB,IAAKkW,EACLjU,SAAU,SAAA5D,GACN4D,EAAS5D,EAAM6D,OAAOL,QAE1BA,WAAqBuL,IAAdkX,EAA0B,GAAKA,KAIlD,OAAO,kBAACL,GAAiBhoB,G,smCC5IjC,IAAMsoB,GAAcjpB,IAAOC,IAAV,MAOXipB,GAAMlpB,IAAOC,IAAV,KhCDgB,OgCMnB,IAIAkpB,GAASnpB,IAAOC,IAAV,MAMNmpB,GAAOppB,IAAOC,IAAV,MAKJwT,GAAQzT,IAAOC,IAAV,MAMLopB,GAASrpB,IAAOC,IAAV,MAONqpB,GAAatpB,IAAOC,IAAV,MAKVspB,GAAYvpB,IAAOC,IAAV,KAGFI,GAGE,SAASmpB,GAAO7oB,GAAQ,IAAD,EtBjD/B,SAA0B8oB,EAAcla,GAAM,IAAD,EACtBpO,mBAASsoB,GADa,mBACzCpG,EADyC,KAClCG,EADkC,KAUhD,OAPApf,qBAAU,WACN,IAAMmC,EAAQoM,GAAgBpD,QAChBuC,IAAVvL,GAAiC,OAAVA,GACvBid,EAASjd,KAEd,CAACgJ,IAEG,CACH8T,EACA,SAAA7M,GACI3D,GAAgBtD,EAAKiH,GACrBgN,EAAShN,KsBoC2BkT,CAAgB,GAAI,kBAD9B,mBAC3B7H,EAD2B,KACX8H,EADW,OAEMxoB,mBAAS,IAFf,mBAE3ByoB,EAF2B,KAEbC,EAFa,OAGQC,sBAU1C,SAA0BzG,EAAO0G,GAC7B,IAAM9iB,EAAM,GACZ,GAAoB,2BAAhB8iB,EAAOzjB,KACPW,EAAIqa,UAAYyI,EAAOzI,eACpB,GAAoB,uBAAhByI,EAAOzjB,KAA+B,CAAC,IACtCqF,EAAsBoe,EAAtBpe,IAAKvD,EAAiB2hB,EAAjB3hB,OAAQsU,EAASqN,EAATrN,KACfsN,EAAY,YAAO3G,EAAM/B,WAChB,IAAXlZ,EAEI4hB,EAAare,GADb+Q,GAGoB,CAAEnW,MAAO,KAG5ByjB,EAAare,GAAKse,eACnBD,EAAare,GAAKse,aAAe,SAExBnY,IAAT4K,GAA+B,KAATA,SACfsN,EAAare,GAAKse,aAAa5G,EAAM6G,YAAYve,GAAKvD,IAE7D4hB,EAAare,GAAKse,aAAa5G,EAAM6G,YAAYve,GAAKvD,IAAWsU,GAGzEzV,EAAIqa,UAAY0I,OACb,GAAoB,gBAAhBD,EAAOzjB,KAAwB,CAAC,IAC/B6N,EAAc4V,EAAd5V,KAAMxI,EAAQoe,EAARpe,IACRqe,EAAY,YAAO3G,EAAM/B,WAC/B0I,EAAare,GAAKvE,KAAO+M,EAAK/M,KAC9B4iB,EAAare,GAAKrE,KAAO6M,EAAK7M,KAC9B0iB,EAAare,GAAKvJ,QAAU+R,EAAK/R,QACjC4nB,EAAare,GAAK0J,SAAWlB,EAAKkB,SAClC2U,EAAare,GAAK4J,MAAQpB,EAAKoB,MAC/BtO,EAAIqa,UAAY0I,OACb,GAAoB,WAAhBD,EAAOzjB,KAAmB,CACjC,IAAM0jB,EAAY,YAAO3G,EAAM/B,WACzB/S,OAAyBuD,IAAjBiY,EAAOxb,MAAsByb,EAAatgB,OAASqgB,EAAOxb,MACxEtH,EAAIqa,UAAY0I,EAAa7e,MAAM,EAAGoD,GAAO4b,OAAO,CAAC,CAAE5jB,MAAO,KAAOyjB,EAAa7e,MAAMoD,SACrF,GAAoB,cAAhBwb,EAAOzjB,KAAsB,CACpC,IAAM0jB,EAAY,YAAO3G,EAAM/B,WACzB/S,OAAyBuD,IAAjBiY,EAAOxb,MAAsByb,EAAatgB,OAAS,EAAIqgB,EAAOxb,MAC5Eyb,EAAaI,OAAO7b,EAAO,GAC3BtH,EAAIqa,UAAY0I,EAIpB,OAFA/iB,EAAIqa,UAmBR,SAAuBA,GACnB,IAAM0I,EAAY,YAAO1I,GAEzB,IAAK0I,EAAatgB,OACd,IAAK,IAAI2gB,EAAW,EAAGA,GAAY,GAAIA,IACnCL,EAAargB,KAAK,CAAEpD,MAAO,KAInC,OADAsM,GAAgB,iBAAkBmX,GAC3BA,EA5BSM,CAAarjB,EAAIqa,WACjCje,OAAOsB,OAAOsC,EAAd5D,OAAA,IAAAA,CAAA,GA8BJ,SAAyBie,GACrB,IAAM4I,EAAc,GACdK,EAAe,GA6CrB,MAAO,CACHC,SA7CalJ,EAAUzM,KAAI,SAAC4V,EAAgBC,GAC5C,IAAMrW,EAAOoW,EAAelkB,MAC5B2jB,EAAYvgB,KAAK,CAAC0K,IAFsC,MAGnBoW,EAAetW,MAAQ,GAApD/M,EAHgD,EAGhDA,KAAME,EAH0C,EAG1CA,KAH0C,IAGpClF,eAHoC,MAG1B,GAH0B,EAIlD6nB,EAAeQ,EAAeR,aAC9BlZ,EAAmB1N,OAAOsB,OAAO,GAAI4lB,EAAcN,GACnD9V,EAAOrD,GAAe,CAAE1J,OAAME,OAAMlF,QAASiQ,GAAajQ,GAAU2O,qBACrEoD,EAAK5C,WAAWC,QACjB+Y,EAAalW,GAAQF,EAAK5C,WAAWS,UAEzC,IAAM2Y,EAAuBxW,EAAKhD,oBAAsBgD,EAAKhD,mBAAmB1F,QAAO,SAACmF,EAAMC,GAC1F,OAAID,EAAKzB,SAAS0B,GACPD,EAEAA,EAAKuZ,OAAOtZ,KAExB,IACG5J,EAAM,CAAC,CAETkN,OACAyU,oBAAqBvlB,OAAO6D,KAAK7D,OAAOsB,OAAO,GAAIkd,EAAgBK,KAAUrN,KAAI,SAAArM,GAAC,MAAK,CAAE0L,GAAI1L,MAC7FqZ,iBACAgH,kBACA7W,SAAUmC,EAAK5C,WAAWC,MAAhB,mBAAoCmZ,EAAqBlf,QAAO,SAACmF,EAAMC,GAC7E,OAAIE,EAAiBF,GACVD,EAEAA,EAAKuZ,OAAOtZ,KAExB,IAAIzB,KAAK,OAAU+E,EAAK5C,WAAWS,SACtCzL,MAAO8N,IAYX,OAVIsW,GACAA,EAAqBpnB,SAAQ,SAAAgM,GACzB2a,EAAYQ,GAAS/gB,KAAK4F,GAC1BtI,EAAI0C,KAAK,CACLhE,MAAO4J,EACPhJ,MAAO,IAAMwK,EAAiBxB,IAASnN,EAAQmN,IAAQnN,EAAQmN,GAAKnI,MACpEmgB,aAAc0C,IAAiBA,EAAa1a,QAIjDtI,KAIPijB,eA/EoBU,CAAe3jB,EAAIqa,aACpCra,IAvD2D,CAAEujB,SAAU,KAHhD,mBAG3BK,EAH2B,KAGZC,EAHY,OAIsB3pB,mBAAS,IAJ/B,mBAI3BmY,EAJ2B,KAILC,EAJK,KA6DlC,SAASsP,EAAiBkC,EAAaC,GAAoB,IAC/C3W,EAA+C0W,EAA/C1W,KAAMgB,EAAyC0V,EAAzC1V,SAAUjT,EAA+B2oB,EAA/B3oB,QAASmT,EAAsBwV,EAAtBxV,MAAOnO,EAAe2jB,EAAf3jB,KAAME,EAASyjB,EAATzjB,KACxC2jB,EAAe5nB,OAAOsB,OAAO,GAAIqmB,GACvCC,EAAa5W,GAAQ,CACjBgB,WACAjT,QAASiQ,GAAajQ,GACtBmT,QACAnO,OACAE,OACAsd,KAAMC,KAAKC,OAEf6E,EAAkBsB,GAoEtB,OAtIA7mB,qBAAU,WACN0mB,EAAiB,CACbxkB,KAAM,yBACNgb,UAAW3O,GAAgB,mBAAqB,OAErD,IAkIC,kBAACsW,GAAD,KACI,kBAACC,GAAD,KACI,kBAACE,GAAD,KACI,kBAAC,GAAD,aACA,kBAACC,GAAD,eAEJ,kBAACC,GAAD,KACI,kBAACC,GAAD,CAAW/iB,QAAS,kBAAMskB,EAAiB,CAAExkB,KAAM,SAAUiI,MAAO+K,EAAqB3N,QAAzF,WACA,kBAAC4d,GAAD,CAAW/iB,QAAS,kBAAMskB,EAAiB,CAAExkB,KAAM,YAAaiI,MAAO+K,EAAqB3N,QAA5F,gBAGR,kBAACwd,GAAD,KACI,kBAACpQ,GAAD,CACIG,UAAW0Q,EACXzQ,QAAS,SAAAD,GACL,GAAyB,IAArBA,EAAU9Q,QAA6C,kBAAtB8Q,EAAUhW,QAAsB,CACjE,IACMgoB,EAAa,CACf/W,KAFSrD,GAAe,CAAE1J,KAAM,KAGhCb,MAAO2S,EAAUhW,SAErBgW,EAAUgD,SAAWgP,EACrBhS,EAAUhW,QAAUgoB,EAExBrB,EAAgB3Q,IAEpBF,KAAM6R,EAAcL,SACpBnqB,OAAQ,CACJ2Y,KAAM,CACF0F,KAAM,CACFiI,aAAc,EACdC,UAAW,wBAEf/N,GAAI,CACA8N,aAAc,EACdC,UAAW,0BAIvBtN,qBAAsBA,EACtBC,wBAAyBA,EACzBsF,sBAAuBxe,EACvBye,eAAgBze,EAChB8b,SAAU,SAACxQ,EAAKvD,EAAQsU,GACpBoO,EAAiB,CAAExkB,KAAM,qBAAsBqF,MAAKvD,SAAQsU,UAEhEhD,cAAe4N,GACf1N,cAAemP,GACf1P,eAAgB,CAAC,O,uRCrPrC,IAAM8R,GAAgBnrB,IAAOC,IAAV,MAObC,GAAQF,IAAOC,IAAV,MAeImrB,GAVG,WACd,OACI,gBAACD,GAAD,KACI,gBAAC,GAAD,CAAO5qB,MAAO,CAAEC,WAAY,SAA5B,SACA,2BAFJ,oB,o3BCdR,IAAM6qB,GAAerrB,IAAOC,IAAV,KlCYY,OkCJxB,IAIAqE,GAAQtE,IAAOqE,IAAV,MAKLinB,GAAatrB,IAAOC,IAAV,MAIVsrB,GAAYvrB,IAAOC,IAAV,MAOTurB,GAAWxrB,IAAOC,IAAV,MAKRwrB,GAAezrB,IAAOC,IAAV,MAsBH8mB,oBAjBf,SAAiBpmB,GAAQ,IACbgI,EAAYhI,EAAZgI,QACR,OACI,kBAAC0iB,GAAD,KACI,kBAACG,GAAD,CAAUhlB,QAAS,kBAAMmC,EAAQgB,KAAK,OAClC,kBAAC8hB,GAAD,KACI,kBAAC,GAAD,CAAOlnB,IAAI,cAAcsT,IAAI,MAEjC,kBAACyT,GAAD,KACI,kBAACC,GAAD,kBAGP5qB,EAAMwf,a,ySCpDnB,IAAMuL,GAAa1rB,IAAOC,IAAV,MAWD,SAAS0rB,GAAMhrB,GAAQ,IAC1Bwf,EAAuBxf,EAAvBwf,SACR,OAD+Bxf,EAAb8iB,SAIX,kBAACiI,GAAD,KACFvL,GAHM,K,iSCbf,IAAMyL,GAAmB5rB,IAAOC,IAAV,MAMhB4rB,GAA4B7rB,IAAOC,IAAV,KAIzBI,EAAmB,OAAQ,IAGlB,SAASyrB,GAAWnrB,GAC/B,OAAIA,EAAMwW,MAEF,kBAAC0U,GAAD,iBAA+BlrB,EAA/B,CAAsCJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MACjH,uBAAGzL,UAAU,iBAAiB9F,MAAOI,EAAMJ,OAA3C,iBAKJ,kBAACqrB,GAAD,iBAAsBjrB,EAAtB,CAA6BJ,MAAK,eAAOI,EAAMJ,MAAb,CAAoB6W,gBAAiBzW,EAAM0W,OAAShX,OAAsByR,MACxG,uBAAGzL,UAAU,iBAAiB9F,MAAOI,EAAMJ,OAA3C,iB,0hDCjBhB,IAAMmrB,GAAa1rB,IAAOC,IAAV,KrCOc,QqCAxB8rB,GAAO/rB,IAAOC,IAAV,MAMJqgB,GAAQtgB,IAAOC,IAAV,MAeL+rB,GAAahsB,IAAOC,IAAV,MAMVgsB,GAAOjsB,IAAOC,IAAV,MAKJisB,GAAOlsB,IAAOC,IAAV,MAIJG,GAAaJ,IAAOC,IAAV,MAKV+iB,GAAUhjB,IAAOC,IAAV,MAKPksB,GAAgBnsB,IAAOC,IAAV,MAKbC,GAAQF,IAAOC,IAAV,MAKLmsB,GAAOpsB,IAAOC,IAAV,MAKK,SAASosB,GAAW1rB,GAAQ,IAEnC4iB,EACA5iB,EADA4iB,WAEJ,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAO/c,QAAS+c,GACZ,uBAAGld,UAAU,kBAAb,UAEJ,kBAAC,GAAD,CAAO9F,MAAO,CAAEoe,QAAS,KAAzB,QAGA,kBAACoN,GAAD,KACI,kBAACG,GAAD,KACI,kBAAC,GAAD,KACI,kBAACC,GAAD,KACI,kBAACC,GAAD,KAAO,wEACP,kBAACA,GAAD,KAAO,qFAGf,kBAAC,GAAD,KACI,yBAAK7nB,IAAKqT,KAASC,IAAI,WAAW9W,OAAQ,GAAID,MAAO,KACrD,kBAACqrB,GAAD,KACI,kBAAC,GAAD,KAAQ,oBACR,kBAACC,GAAD,KAAO,0HAGf,kBAAC,GAAD,KACI,yBAAK7nB,IAAK0T,KAAOJ,IAAI,QAAQ9W,OAAQ,GAAID,MAAO,KAChD,kBAACqrB,GAAD,KACI,kBAAC,GAAD,KAAQ,kBACR,kBAACC,GAAD,KAAO,sGACP,kBAACA,GAAD,KAAO,yFACP,kBAACA,GAAD,KAAO,sFACP,kBAACA,GAAD,KAAO,+DACP,kBAACA,GAAD,KAAO,yFACP,kBAACA,GAAD,KAAO,4CAGf,kBAAC,GAAD,KACI,yBAAK7nB,IAAKkU,KAAOZ,IAAI,SAAS9W,OAAQ,GAAID,MAAO,KACjD,kBAACqrB,GAAD,KACI,kBAAC,GAAD,KAAQ,UACR,kBAACC,GAAD,KAAO,sCAGf,kBAAC,GAAD,KACI,yBAAK7nB,IAAK8T,KAAOR,IAAI,UAAU9W,OAAQ,GAAID,MAAO,KAClD,kBAACqrB,GAAD,KACI,kBAAC,GAAD,KAAQ,SACR,kBAACC,GAAD,KAAO,iFACP,kBAACA,GAAD,KAAO,2FACP,kBAACA,GAAD,KAAO,2DAGf,kBAAC,GAAD,KACI,uBAAG7rB,MAAO,CAAE+rB,SAAU,IAAMjmB,UAAU,kBAAtC,UACA,kBAAC8lB,GAAD,KACI,kBAAC,GAAD,KAAQ,UACR,kBAACC,GAAD,KAAO,kCACP,kBAACA,GAAD,KAAO,4GACP,kBAACA,GAAD,KAAO,iDACP,kBAACA,GAAD,KAAO,iGACP,kBAACA,GAAD,KAAO,sGACP,kBAACA,GAAD,KAAO,4FAGf,6BACA,kBAACA,GAAD,KAAO,gDAEX,kBAACJ,GAAD,KACKzhB,GAAWsK,KAAI,SAAA0X,GACZ,OAAO,kBAACN,GAAD,CAAM1c,IAAKgd,GAAOA,OAGjC,kBAACL,GAAD,KACI,6BADJ,YAEa,kBAAC,GAAD,KAAY,uBAAGM,KAAK,kDAAkD5lB,OAAO,SAAS6lB,IAAI,uBAA9E,oDAFzB,2D,0hDC/IhB,IAAMf,GAAa1rB,IAAOC,IAAV,KtCOc,QsCAxB8rB,GAAO/rB,IAAOC,IAAV,MAMJqgB,GAAQtgB,IAAOC,IAAV,MAeL+rB,GAAahsB,IAAOC,IAAV,MAMVgsB,GAAOjsB,IAAOC,IAAV,MAKJisB,GAAOlsB,IAAOC,IAAV,MAIJG,GAAaJ,IAAOC,IAAV,MAKV+iB,GAAUhjB,IAAOC,IAAV,MAKPksB,GAAgBnsB,IAAOC,IAAV,MAKbC,GAAQF,IAAOC,IAAV,MAKLmsB,GAAOpsB,IAAOC,IAAV,MAKK,SAASysB,GAAc/rB,GAAQ,IAEtC4iB,EACA5iB,EADA4iB,WAEJ,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAO/c,QAAS+c,GACZ,uBAAGld,UAAU,kBAAb,UAEJ,kBAAC,GAAD,CAAO9F,MAAO,CAAEoe,QAAS,KAAzB,QAGA,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,6EACA,kBAAC,GAAD,0FAGR,kBAAC,GAAD,KACI,yBAAKpa,IAAKqT,KAASC,IAAI,WAAW9W,OAAQ,GAAID,MAAO,KACrD,kBAAC,GAAD,KACI,kBAAC,GAAD,yBACA,kBAAC,GAAD,+HAGR,kBAAC,GAAD,KACI,yBAAKyD,IAAK0T,KAAOJ,IAAI,QAAQ9W,OAAQ,GAAID,MAAO,KAChD,kBAAC,GAAD,KACI,kBAAC,GAAD,uBACA,kBAAC,GAAD,2GACA,kBAAC,GAAD,8FACA,kBAAC,GAAD,2FACA,kBAAC,GAAD,oEACA,kBAAC,GAAD,8FACA,kBAAC,GAAD,iDAGR,kBAAC,GAAD,KACI,yBAAKyD,IAAKkU,KAAOZ,IAAI,SAAS9W,OAAQ,GAAID,MAAO,KACjD,kBAAC,GAAD,KACI,kBAAC,GAAD,eACA,kBAAC,GAAD,2CASR,kBAAC,GAAD,KACI,yBAAKyD,IAAK8T,KAAOR,IAAI,UAAU9W,OAAQ,GAAID,MAAO,KAClD,kBAAC,GAAD,KACI,kBAAC,GAAD,cACA,kBAAC,GAAD,sFACA,kBAAC,GAAD,gGACA,kBAAC,GAAD,gEAGR,kBAAC,GAAD,KACI,uBAAGP,MAAO,CAAE+rB,SAAU,IAAMjmB,UAAU,kBAAtC,UACA,kBAAC,GAAD,KACI,kBAAC,GAAD,eACA,kBAAC,GAAD,uCACA,kBAAC,GAAD,iHACA,kBAAC,GAAD,sDACA,kBAAC,GAAD,sGACA,kBAAC,GAAD,2GACA,kBAAC,GAAD,iGAGR,6BACA,kBAAC,GAAD,qDAEJ,kBAAC,GAAD,KACKkE,GAAWsK,KAAI,SAAA0X,GACZ,OAAO,kBAAC,GAAD,CAAMhd,IAAKgd,GAAOA,OAGjC,kBAAC,GAAD,KACI,6BADJ,YAEa,kBAAC,GAAD,KAAY,uBAAGC,KAAK,kDAAkD5lB,OAAO,SAAS6lB,IAAI,uBAA9E,oDAFzB,2D,ukBCjIhB,IAAME,GAAY3sB,IAAOC,IAAV,MAiBT2sB,GAAO5sB,IAAOC,IAAV,MAOJijB,GAAaljB,IAAOC,IAAV,MC5ChB,IAAM4sB,GAAcC,QACa,cAA7B9oB,OAAOwT,SAASuV,UAEiB,UAA7B/oB,OAAOwT,SAASuV,UAEhB/oB,OAAOwT,SAASuV,SAAS7hB,MACrB,2DAsCZ,SAAS8hB,GAAiBC,GACtBC,UAAUC,cACLC,SAASH,GACTI,MAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBnK,QACb6J,UAAUC,cAAcQ,WAKxBC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAM/BC,OAAM,SAAAtc,GACHoc,QAAQpc,MAAM,4CAA6CA,MC1EvEuc,IAASC,OACL,mBFoDW,SAAcrtB,GAAQ,IAAD,EACAQ,oBAAS,GADT,mBACzBsiB,EADyB,KACfwK,EADe,KAGhC,SAAS1K,IACL0K,GAAaxK,GAGjB,OACI,kBAACkJ,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,KACI,kBAAC,IAAD,CAAO5H,KAAK,cAAciJ,OAAQ,SAAArtB,GAAK,OAAI,kBAACisB,GAAD,KACvC,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAYzV,OAAK,EAACE,OAAQoM,EAAUjd,QAAS+c,UAIzD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwB,KAAK,QAAQiJ,OAAQ,SAAArtB,GAAK,OAAI,kBAACmF,EAAD,iBAAcnF,EAAd,CAAqB4iB,WAAYA,QACtE,kBAAC,IAAD,CAAOwB,KAAK,MAAMiJ,OAAQ,SAAArtB,GAAK,OAAI,kBAAC6nB,GAAD,iBAAkB7nB,EAAlB,CAAyB4iB,WAAYA,QACxE,kBAAC,IAAD,CAAOwB,KAAK,SAASiJ,OAAQ,SAAArtB,GAAK,OAAI,kBAAC6oB,GAAD,iBAAe7oB,EAAf,CAAsB4iB,WAAYA,QACxE,kBAAC,IAAD,CAAOwB,KAAK,SAASiJ,OAAQ,SAAArtB,GAAK,OAAI,kBAACutB,GAAD,iBAAevtB,EAAf,CAAsB4iB,WAAYA,QACxE,kBAAC,IAAD,CAAOwB,KAAK,IAAIiJ,OAAQ,SAAArtB,GAAK,OAAI,kBAACwtB,EAAD,iBAAcxtB,EAAd,CAAqB4iB,WAAYA,SAEtE,kBAACoI,GAAD,CAAMpI,WAAYA,EAAYE,SAAUA,GACpC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOsB,KAAK,MAAMiJ,OAAQ,SAAArtB,GAAK,OAAI,kBAAC+rB,GAAD,iBAAkB/rB,EAAlB,CAAyB4iB,WAAYA,QACxE,kBAAC,IAAD,CAAOwB,KAAK,SAASiJ,OAAQ,SAAArtB,GAAK,OAAI,kBAAC0rB,GAAD,iBAAe1rB,EAAf,CAAsB4iB,WAAYA,cE/E5F,MACA6K,SAASC,eAAe,QDab,WACX,GAA6C,kBAAmBnB,UAAW,CAGvE,GADkB,IAAIoB,IAAIC,GAAwBvqB,OAAOwT,UAC3CgX,SAAWxqB,OAAOwT,SAASgX,OAIrC,OAGJxqB,OAAOyqB,iBAAiB,QAAQ,WAC5B,IAAMxB,EAAK,UAAMsB,GAAN,sBAEP1B,KAiDhB,SAAkCI,GAE9ByB,MAAMzB,GACDI,MAAK,SAAA/gB,GAGsB,MAApBA,EAASqiB,SACuD,IAAhEriB,EAASsiB,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GAC/BA,EAAa0B,aAAa3B,MAAK,WAC3BrpB,OAAOwT,SAASyX,eAKxBjC,GAAgBC,MAGvBa,OAAM,WACHF,QAAQC,IACJ,oEArEAqB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,MAAK,WAC/BO,QAAQC,IACJ,gHAMRb,GAAgBC,OCvChCkC,I,mBCTAC,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.25d83a2a.chunk.js","sourcesContent":["export const primaryColor = '#0064ff' // #0082ff\r\nexport const secondaryColor = '#0ccf35'\r\nexport const complementaryColor = '#fe8500'\r\n\r\nexport const yellow = '#FC0'\r\nexport const lightYellow = '#FC06'\r\n\r\nexport const lightGreen = `${secondaryColor}40`\r\nexport const extraLightGreen = `${secondaryColor}20`\r\n\r\nexport const lightOrange = '#ffe1b5'\r\nexport const extraLightOrange = '#ffebcdcc'\r\n\r\nexport const lightBlue = 'lightblue'\r\n\r\nexport const gray = '#888888'\r\nexport const lightGray = '#CCC'\r\nexport const extraLightGray = '#EEE'\r\n\r\nexport const backgroundColor = '#777'\r\n\r\nexport const materialColumnWidth = 168\r\n\r\nexport const materialIterationWidth = 80\r\n\r\nexport const inputFocus = extraLightGreen\r\nexport const inputShadow = `${lightGray}`\r\n\r\nexport const inputStyle = `\r\n    font-family: 'Ubuntu', sans-serif;\r\n    font-size: 1rem;\r\n    line-height: 1.2rem;\r\n    padding: 4px 6px;\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    border: none;\r\n    box-shadow: 0px 0px 2px 2px ${inputShadow};\r\n    outline: none;\r\n    :focus {\r\n        background-color: ${inputFocus};\r\n    }\r\n`\r\n\r\nexport function buttonHover (message, offset) {\r\n    return `\r\n    :hover {\r\n        border: white 5px solid;\r\n        margin: -5px;\r\n        position: relative;\r\n        ::after {\r\n            box-shadow: 0px 3px 3px #CCC;\r\n            font-weight: bold;\r\n            content: \"${message}\";\r\n            position: absolute;\r\n            top: 45px;\r\n            right: ${offset}px;\r\n            background-color: white;\r\n            border-radius: 15px;\r\n            padding: 5px;\r\n            @media (max-width: 600px) {\r\n                right: 0px;\r\n            }\r\n        }\r\n    }\r\n`\r\n}\r\n","import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\n\r\nconst StyledMessage = styled.div`\r\n    min-height: 1px;\r\n    overflow: auto;\r\n    width: 100%;\r\n    text-align: center;\r\n`\r\n\r\nconst Title = styled.div`\r\n    font-size: 1.5rem;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst StyledLine = styled.div`\r\n    padding-top: 8px;\r\n`\r\n\r\nconst StyledLink = styled.div`\r\n    margin: 20px;\r\n    a {\r\n        color: ${styles.primaryColor};\r\n    }\r\n`\r\n\r\nconst Overview = () => {\r\n    return (\r\n        <StyledMessage>\r\n            <br />\r\n            <br />\r\n            <Title style={{ fontWeight: 'bold' }}>Mathite</Title>\r\n            <br />\r\n            <br />\r\n            <StyledLine>{'A better way to solve problems.'}</StyledLine>\r\n            <br />\r\n            <br />\r\n            <StyledLine>{'What you always wanted from spreadsheets.'}</StyledLine>\r\n            <StyledLine>{'And what you wanted from databases, without having to work for it.'}</StyledLine>\r\n            <br />\r\n            <br />\r\n            <StyledLine>{'Create functions and collaborate.'}</StyledLine>\r\n            <StyledLine>{'Clean spaces. Clean data.'}</StyledLine>\r\n            <StyledLine>{'Do it once, and only once.'}</StyledLine>\r\n            <StyledLine>{'Own your work.'}</StyledLine>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <StyledLine>\r\n                <Link to='space'>Get started</Link>\r\n            </StyledLine>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <StyledLink>\r\n                <Link to='draw'>{'Take a break to draw'}</Link>\r\n            </StyledLink>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <StyledLink>\r\n                <Link to='eq'>{'Create a reusable function'}</Link>\r\n            </StyledLink>\r\n            <StyledLink>\r\n                <Link to='sheet'>{'Use functions and create more'}</Link>\r\n            </StyledLink>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {/* <StyledLink>\r\n                <Link to='data'>{'Test the data view'}</Link>\r\n            </StyledLink> */}\r\n        </StyledMessage>\r\n    )\r\n}\r\n\r\nexport default Overview\r\n","import React, { useEffect, useState, useRef } from 'react'\r\n\r\nexport default function Draw (props: {\r\n    imageDataUrl: Object,\r\n    setContext: Function,\r\n    style: Object,\r\n    height: number,\r\n    width: number,\r\n    penColor: string,\r\n    penWidth: string,\r\n    penType: string\r\n}) {\r\n    const {\r\n        imageDataUrl,\r\n        setContext,\r\n        style,\r\n        width,\r\n        height,\r\n        penColor,\r\n        penWidth,\r\n        penType\r\n    } = props\r\n    const [positionX, setPositionX] = useState()\r\n    const [positionY, setPositionY] = useState()\r\n    const [mouseDown, setMouseDown] = useState()\r\n\r\n    const sketchElement = useRef()\r\n\r\n    useEffect(() => {\r\n        const context = sketchElement.current.getContext('2d')\r\n        if (imageDataUrl) {\r\n            const img = new Image()\r\n            img.src = imageDataUrl\r\n            img.onload = () => {\r\n                context.drawImage(img, 0, 0)\r\n            }\r\n        }\r\n        setContext(context)\r\n    }, [imageDataUrl, setContext])\r\n\r\n    function drawMouseDown (event) {\r\n        setPositionAndDraw(event, false)\r\n        setMouseDown(true)\r\n    }\r\n\r\n    function drawMouseMove (event) {\r\n        if (mouseDown) {\r\n            setPositionAndDraw(event)\r\n        }\r\n    }\r\n\r\n    function drawMouseUp (event) {\r\n        setPositionAndDraw(event)\r\n        setMouseDown(false)\r\n    }\r\n\r\n    function drawMouseLeave () {\r\n        setMouseDown(false)\r\n    }\r\n\r\n    function drawWithState (canvas, x, y) {\r\n        drawLine(canvas, positionX, positionY, x, y)\r\n        setPositionX(x)\r\n        setPositionY(y)\r\n    }\r\n\r\n    function drawLine (canvas, startX, startY, endX, endY) {\r\n        const context = canvas.getContext('2d')\r\n        context.beginPath()\r\n        context.moveTo(startX, startY)\r\n        context.lineTo(endX, endY)\r\n        context.strokeStyle = penColor\r\n        context.lineWidth = penWidth\r\n        context.lineCap = penType\r\n        context.stroke()\r\n    }\r\n\r\n    function setPositionAndDraw (event, draw = true) {\r\n        const boundingRect = sketchElement.current.getBoundingClientRect()\r\n        if (event.changedTouches) {\r\n            Object.values(event.changedTouches).forEach(touch => {\r\n                const x = touch.clientX - boundingRect.left\r\n                const y = touch.clientY - boundingRect.top\r\n                if (draw) {\r\n                    drawWithState(sketchElement.current, x, y)\r\n                } else {\r\n                    setPositionX(x)\r\n                    setPositionY(y)\r\n                    sketchElement.current.focus()\r\n                    sketchElement.current.blur()\r\n                }\r\n            })\r\n        } else {\r\n            const x = event.pageX - boundingRect.left - window.pageXOffset\r\n            const y = event.pageY - boundingRect.top - window.pageYOffset\r\n            if (draw) {\r\n                drawWithState(sketchElement.current, x, y)\r\n            } else {\r\n                setPositionX(x)\r\n                setPositionY(y)\r\n            }\r\n        }\r\n        const context = sketchElement.current.getContext('2d')\r\n        setContext(context)\r\n    }\r\n\r\n    return (\r\n        <canvas ref={sketchElement}\r\n            style={Object.assign({}, { touchAction: 'none', outline: 'none' }, style)}\r\n            width={width}\r\n            height={height}\r\n            tabIndex={0}\r\n            onMouseMove={drawMouseMove}\r\n            onMouseDown={drawMouseDown}\r\n            onMouseUp={drawMouseUp}\r\n            onMouseLeave={drawMouseLeave}\r\n            onTouchStart={event => setPositionAndDraw(event, false)}\r\n            onTouchMove={setPositionAndDraw}\r\n            onTouchEnd={setPositionAndDraw}>\r\n        </canvas>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\nimport * as styles from 'styles'\r\n\r\nconst StyledInput = styled.input`\r\n    ${styles.inputStyle}\r\n`\r\n\r\nexport default StyledInput\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport Draw from 'components/Draw'\r\nimport StyledInput from 'components/StyledInput'\r\n\r\nconst StyledDrawView = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-top: 1rem;\r\n\r\n    canvas {\r\n        border: 1px lightblue solid;\r\n    }\r\n\r\n    input {\r\n        margin-left: 20px;\r\n        margin-right: 20px;\r\n        @media (max-width: 992px) {\r\n            margin-left: 4px;\r\n            margin-right: 4px;\r\n            width: 50px;\r\n        }\r\n    }\r\n`\r\n\r\nconst StyledDrawControls = styled.div`\r\n    position: fixed;\r\n    top: 1rem;\r\n    right: 0px;\r\n    max-width: 600px;\r\n    display: flex;\r\n`\r\n\r\nconst StyledLabel = styled.label`\r\n    margin: 5px;\r\n    white-space: nowrap;\r\n    width: 35px;\r\n    padding-right: 20px;\r\n`\r\n\r\nconst StyledNumberInput = styled(StyledInput)`\r\n    text-align: center;\r\n\r\n    :focus {\r\n        background-color: ${styles.extraLightGray};\r\n    }\r\n`\r\n\r\nconst StyledButton = styled(StyledInput)`\r\n    cursor: pointer;\r\n    width: 200px;\r\n\r\n    :focus {\r\n        background-color: #CCC;\r\n    }\r\n`\r\n\r\nexport default function DrawView (props) {\r\n    const [ context, setContext ] = useState()\r\n    const width = window.innerWidth - 30\r\n    const height = window.innerHeight > 500 ? window.innerHeight - 100 : window.innerHeight - 40\r\n    const [ penWidth, setPenWidth ] = useState()\r\n    const [ penColor, setPenColor ] = useState('#000000')\r\n\r\n    function clearImage () {\r\n        context.clearRect(0, 0, width, height)\r\n    }\r\n\r\n    function handleSetContext (context) {\r\n        setContext(context)\r\n        localStorage.setItem('imageDataUrl', context.canvas.toDataURL())\r\n    }\r\n\r\n    const imageDataUrl = localStorage.getItem('imageDataUrl')\r\n    return (\r\n        <StyledDrawView>\r\n            <StyledDrawControls>\r\n                <StyledButton\r\n                    className='btn'\r\n                    type='button'\r\n                    value='Clear'\r\n                    onClick={() => clearImage()} />\r\n                <StyledLabel>Pen Size:</StyledLabel>\r\n                <StyledNumberInput\r\n                    type='number'\r\n                    value={penWidth || ''}\r\n                    placeholder={1}\r\n                    onChange={event => setPenWidth(event.target.value)} />\r\n                <StyledInput\r\n                    type='color'\r\n                    value={penColor}\r\n                    onChange={event => setPenColor(event.target.value)} />\r\n            </StyledDrawControls>\r\n            <Draw\r\n                imageDataUrl={imageDataUrl}\r\n                width={width}\r\n                penType='round'\r\n                height={height}\r\n                penColor={penColor}\r\n                penWidth={penWidth || 1}\r\n                setContext={handleSetContext} />\r\n        </StyledDrawView>\r\n    )\r\n}\r\n","export function objectToHistory (obj: Object) {\r\n    const res = {}\r\n    if (typeof obj !== 'object') return obj\r\n    let hasProps = false\r\n    Object.keys(obj).forEach(prop => {\r\n        if (obj[prop] && (obj[prop].text || obj[prop].context || obj[prop].unit)) {\r\n            res[prop] = {}\r\n            res[prop].t = obj[prop].text\r\n            res[prop].u = obj[prop].unit\r\n            res[prop].c = objectToHistory(obj[prop].context)\r\n            if (res[prop].c || res[prop].t || res[prop].u) {\r\n                hasProps = true\r\n            }\r\n        }\r\n    })\r\n    if (!hasProps) return undefined\r\n    return res\r\n}\r\n\r\nexport function objectFromHistory (obj: Object) {\r\n    const res = {}\r\n    if (typeof obj !== 'object') return obj\r\n    Object.keys(obj).forEach(prop => {\r\n        res[prop] = {}\r\n        res[prop].text = obj[prop].t\r\n        res[prop].unit = obj[prop].u\r\n        res[prop].context = objectFromHistory(obj[prop].c)\r\n    })\r\n    return res\r\n}\r\n\r\nexport function urlToObject (url: String) {\r\n    return JSON.parse(decodeURI(url.replace(/^(\\/eq)*\\?/, '')).replace(/[\"~!@#$%&=]/g, '').replace(/`/g, '\"'))\r\n}\r\n\r\nexport function getEquationFromUrl (url: String) {\r\n    if (!url) {\r\n        return {}\r\n    }\r\n    const urlObject = urlToObject(url)\r\n    return {\r\n        text: urlObject.t || '',\r\n        unit: urlObject.u || '',\r\n        context: objectFromHistory(urlObject.c || {})\r\n    }\r\n}\r\n\r\nexport function columnSettingsToHistory (columnSettings) {\r\n    const newColumnSettings = {}\r\n    let somethingWasAdded = false\r\n    Object.keys(columnSettings).forEach(column => {\r\n        const newSetting = {}\r\n        let shouldAdd = false\r\n        if (columnSettings[column].start) {\r\n            shouldAdd = true\r\n            newSetting.s = columnSettings[column].start\r\n        }\r\n        if (columnSettings[column].interval) {\r\n            shouldAdd = true\r\n            newSetting.i = columnSettings[column].interval\r\n        }\r\n        if (shouldAdd) {\r\n            somethingWasAdded = true\r\n            newColumnSettings[column] = newSetting\r\n        }\r\n    })\r\n    if (somethingWasAdded) {\r\n        return newColumnSettings\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport function columnSettingsFromHistory (columnSettings) {\r\n    const newColumnSettings = {}\r\n    Object.keys(columnSettings).forEach(column => {\r\n        const newSetting = {}\r\n        if (columnSettings[column].s) {\r\n            newSetting.start = columnSettings[column].s\r\n        }\r\n        if (columnSettings[column].i) {\r\n            newSetting.interval = columnSettings[column].i\r\n        }\r\n        newColumnSettings[column] = newSetting\r\n    })\r\n    return newColumnSettings\r\n}\r\n\r\nexport function getFromHistory (history: Object) {\r\n    const urlObject = history.location.search.length > 1 ? urlToObject(history.location.search) : {}\r\n    const generatorSettings = {}\r\n    if (urlObject.l) {\r\n        generatorSettings.left = urlObject.l\r\n    }\r\n    if (urlObject.r) {\r\n        generatorSettings.right = urlObject.r\r\n    }\r\n    return {\r\n        text: urlObject.t || '',\r\n        unit: urlObject.u || '',\r\n        context: objectFromHistory(urlObject.c || {}),\r\n        generatorSettings,\r\n        columnSettings: columnSettingsFromHistory(urlObject.s || {})\r\n    }\r\n}\r\n\r\nexport function passToHistory ({ history, text, context, unit, generatorSettings, columnSettings, pushToHistory = false }: { history: any, text: string, context: Object }) {\r\n    if (!text && !context) return history.replace()\r\n    const newContext = {}\r\n    if (text) {\r\n        newContext.t = text\r\n    }\r\n    if (unit) {\r\n        newContext.u = unit\r\n    }\r\n    if (context) {\r\n        newContext.c = objectToHistory(context)\r\n    }\r\n    if (generatorSettings) {\r\n        if (generatorSettings.left) {\r\n            if (parseInt(generatorSettings.left, 10) > 1000) {\r\n                newContext.l = 1000\r\n            } else {\r\n                newContext.l = generatorSettings.left\r\n            }\r\n        }\r\n        if (generatorSettings.right) {\r\n            if (parseInt(generatorSettings.right, 10) > 1000) {\r\n                newContext.r = 1000\r\n            } else {\r\n                newContext.r = generatorSettings.right\r\n            }\r\n        }\r\n        if (columnSettings) {\r\n            const newColumnSettings = columnSettingsToHistory(columnSettings)\r\n            if (newColumnSettings) {\r\n                newContext.s = newColumnSettings\r\n            }\r\n        }\r\n    }\r\n    const newContextString = JSON.stringify(newContext).replace(/[`~!@#$%&=_]/g, '').replace(/\"/g, '`')\r\n    if (newContextString !== '{}' && newContextString.length > 0) {\r\n        if (pushToHistory) {\r\n            return history.push('?' + newContextString)\r\n        } else {\r\n            return history.replace('?' + newContextString)\r\n        }\r\n    } else {\r\n        if (pushToHistory) {\r\n            return history.push()\r\n        } else {\r\n            return history.replace()\r\n        }\r\n    }\r\n}\r\n","export default function getColor (text: string): string {\r\n    let total = 0\r\n    for (var i = 0; i < text.length; i++) {\r\n        total += text.charCodeAt(i) * 16\r\n    }\r\n    if (total < 1000) {\r\n        total = 1000 - total\r\n    }\r\n    const color = {\r\n        r: total % 64 * 4,\r\n        g: 0,\r\n        b: 0\r\n    }\r\n    color.g = (total) % 128 * 2\r\n    color.b = (total) % 256\r\n\r\n    if (color.r > 96 && color.g > 96 && color.b > 96) {\r\n        // If the colors are all high it will be too light\r\n        switch (Math.max(color.r, color.g, color.b)) {\r\n        case color.r:\r\n            color.g -= 96\r\n            color.b -= 96\r\n            break\r\n        case color.g:\r\n            color.r -= 96\r\n            color.b -= 96\r\n            break\r\n        case color.b:\r\n            color.r -= 96\r\n            color.g -= 96\r\n            break\r\n        default:\r\n            break\r\n        }\r\n    } else if (color.r < 128 && color.g < 128 && color.b < 128) {\r\n        // If the colors are all too low it will be too dark\r\n        switch (Math.max(color.r, color.g, color.b)) {\r\n        case color.r:\r\n            color.r += 128\r\n            break\r\n        case color.g:\r\n            color.g += 128\r\n            break\r\n        case color.b:\r\n            color.b += 128\r\n            break\r\n        default:\r\n            break\r\n        }\r\n    } else if ((color.r % color.g + color.g % color.b + color.b % color.r) < 256) {\r\n        // If the colors are all too close together it will be gray\r\n        switch (Math.max(color.r, color.g, color.b)) {\r\n        case color.r:\r\n            color.r = color.r % 128 + 128\r\n            break\r\n        case color.g:\r\n            color.g = color.g % 128 + 128\r\n            break\r\n        case color.b:\r\n            color.b = color.b % 128 + 128\r\n            break\r\n        default:\r\n            break\r\n        }\r\n    }\r\n    return rgbToHex(color.r, color.g, color.b)\r\n}\r\n\r\nfunction rgbToHex (r, g, b): string {\r\n    return '#' + intToHex(r) + intToHex(g) + intToHex(b)\r\n}\r\n\r\nfunction intToHex (c: any): string {\r\n    var hex = c.toString(16)\r\n    return hex.length === 1 ? '0' + hex : hex\r\n}\r\n","const ignoreList = [\r\n    'undefined',\r\n    'e',\r\n    'Infinity',\r\n    'LN2',\r\n    'LN10',\r\n    'log',\r\n    'LOG2E',\r\n    'LOG10E',\r\n    'pi',\r\n    'phi',\r\n    'sqrt',\r\n    'sqrt2',\r\n    'tau',\r\n    'abs',\r\n    'cbrt',\r\n    'ceil',\r\n    'cube',\r\n    'exp',\r\n    'fix',\r\n    'floor',\r\n    'gcd',\r\n    'hypot',\r\n    'lcm',\r\n    'log10',\r\n    'mod',\r\n    'norm',\r\n    'nthroot',\r\n    'pow',\r\n    'round',\r\n    'sign',\r\n    'mad',\r\n    'max',\r\n    'mean',\r\n    'median',\r\n    'min',\r\n    'mode',\r\n    'prod',\r\n    'std',\r\n    'sum',\r\n    'var',\r\n    'acos',\r\n    'acosh',\r\n    'acot',\r\n    'acoth',\r\n    'acsc',\r\n    'acsch',\r\n    'asec',\r\n    'asech',\r\n    'asin',\r\n    'asinh',\r\n    'atan',\r\n    'atan2',\r\n    'atanh',\r\n    'cos',\r\n    'cosh',\r\n    'cot',\r\n    'coth',\r\n    'csc',\r\n    'csch',\r\n    'sec',\r\n    'sech',\r\n    'sin',\r\n    'sinh',\r\n    'tan',\r\n    'tanh'\r\n]\r\n\r\nexport default ignoreList\r\n","import getColor from './getColor'\r\nimport ignoreList from './ignoreList'\r\n\r\nexport function mathmlWrapper ({ title, text }: { title: string, text: string }): string {\r\n    return `<math title=\"${title}\">${text.replace(/_/g, '')}</math>`\r\n}\r\n\r\nexport function colorVariable ({ text, variable }: { text: string, variable: string }): string {\r\n    let res = text\r\n    let varText = variable\r\n    const shouldSub = variableSubscript({ variable })\r\n    if (shouldSub.subscript) {\r\n        res = res.replace(findVarRegex({ variable }), `$1<msub><mi mathcolor=\"${getColor(variable)}\">${shouldSub.variable}_</mi><mn mathcolor=\"${getColor(variable)}\">${shouldSub.subscript}</mn></msub>$3`)\r\n    } else {\r\n        res = res.replace(findVarRegex({ variable }), `$1<mrow><mi mathcolor=\"${getColor(variable)}\">${varText}</mi></mrow>$3`)\r\n    }\r\n    return res\r\n}\r\n\r\nexport function variableSubscript ({ variable }: { variable: string}) {\r\n    const subMatch = variable.match(/([0-9]+)$/)\r\n    if (subMatch) {\r\n        return {\r\n            variable: variable.slice(0, variable.length - subMatch[1].length),\r\n            subscript: subMatch[1]\r\n        }\r\n    }\r\n    return { variable }\r\n}\r\n\r\nexport function findVarRegex ({ variable }: { variable: string }) {\r\n    return new RegExp(`(^|[^A-Za-z0-9 _])(${removeSpace({ text: variable })})([^A-Za-z0-9 _]|$)`, 'g')\r\n}\r\n\r\nexport function expandVariableWithColor ({ text, variable, expanded }: {text: string, variable: string, expanded: string}): string {\r\n    let varText = variable\r\n    const shouldSub = variableSubscript({ variable })\r\n    if (shouldSub.subscript) {\r\n        varText = `<msub><mi>${shouldSub.variable}_</mi><mn>${shouldSub.subscript}</mn></msub>`\r\n    }\r\n    return text.replace(findVarRegex({ variable }), '$1' + mathmlTable({\r\n        color: getColor(variable),\r\n        rows: [\r\n            [varText],\r\n            [`<mo>(</mo>${expanded}<mo>)</mo>`]\r\n        ]\r\n    }) + '$3')\r\n}\r\n\r\nexport function mathmlTable ({ color, rows }: { color: string, rows: Array<Array<string>>}): string {\r\n    return `<mtable mathcolor=\"${color}\">${rows.reduce((acc, row) => `${acc}<mtr>${row.reduce((cellAcc, cell) => {\r\n        return `${cellAcc}<mtd><mrow>${addMiMaybe({ text: cell })}</mrow></mtd>`\r\n    }, '')}</mtr>`, '')}</mtable>`\r\n}\r\n\r\nexport function addMiMaybe ({ text }: { text: string }): string {\r\n    if (!new RegExp(/^<.*>$/).test(text)) {\r\n        return `<mi>${text}</mi>`\r\n    } else {\r\n        return text\r\n    }\r\n}\r\n\r\nexport function extrapolateMathml ({ text }: { text: string }): string {\r\n    let res = text\r\n    res = padNumbers({ text: res })\r\n    res = removeSpace({ text: res })\r\n    res = padOperators({ text: res })\r\n    res = padSpecial({ text: res })\r\n    res = beautifyGlobal({ text: res, global: 'sqrt', rightTag: 'msqrt' })\r\n    res = beautifyGlobal({\r\n        text: res,\r\n        global: '<mo>&divide;</mo>',\r\n        cutoffChars: ['+', '-', ')', '*'],\r\n        cutoffCharsReverse: ['+', '-', '*', '/', '('],\r\n        masterOpen: '<mstyle displaystyle=\"true\"><mfrac>',\r\n        masterClose: '</mfrac></mstyle>',\r\n        leftTag: 'mrow',\r\n        rightTag: 'mrow'\r\n    })\r\n    res = padParentheses({ text: res })\r\n    res = padIgnoreList({ text: res })\r\n    return res\r\n}\r\n\r\nexport function padNumbers ({ text }: { text: string }): string {\r\n    let res = text\r\n    res = res.replace(/(^|[^A-Za-z0-9 ])([0-9]+)/g, '$1<mo>$2</mo>')\r\n    return res\r\n}\r\n\r\nexport function removeSpace ({ text }: { text: string }): string {\r\n    let res = text\r\n    res = res.replace(/(^|[^A-Za-z0-9])( +)($|[^A-Za-z0-9])/g, '$1$3')\r\n    res = res.replace(/(^|[A-Za-z0-9])( +)($|[^A-Za-z0-9])/g, '$1$3')\r\n    res = res.replace(/(^|[^A-Za-z0-9])( +)($|[A-Za-z0-9])/g, '$1$3')\r\n    res = res.replace(/(^|[^A-Za-z0-9])( +)($|[^A-Za-z0-9])/g, '$1$3')\r\n    return res\r\n}\r\n\r\nexport function padOperators ({ text }: { text: string}): string {\r\n    const operators = ['\\\\+', '-', '/', '\\\\*']\r\n    const operatorValue = {\r\n        '\\\\+': '&plus;',\r\n        '-': '&minus;',\r\n        '/': '&divide;',\r\n        '\\\\*': '&times;'\r\n    }\r\n    return operators.reduce((acc, operator) => {\r\n        let response = acc\r\n        response = response.replace(new RegExp(`([^</*-+])${operator}`, 'g'), `$1<mo>${operatorValue[operator]}</mo>`) // replace\r\n        return response\r\n    }, text)\r\n}\r\n\r\nexport function padSpecial ({ text }: { text: string }): string {\r\n    let res = text\r\n    res = res.replace(/([^A-Za-z0-9<>/;#\"'= &()])/g, '<mo>$1</mo>') // replace the rest of the unknown elements\r\n    return res\r\n}\r\n\r\n/*\r\n    global: the text to search for\r\n    rightTag: the tag to surround the extent of parentheses to the right of the global\r\n    leftTag: the tag to surround the extent of parentheses to the left of the global\r\n*/\r\nexport function beautifyGlobal ({\r\n    text,\r\n    global,\r\n    cutoffChars = [],\r\n    cutoffCharsReverse = [],\r\n    masterOpen = '',\r\n    masterClose = '',\r\n    rightTag = '',\r\n    leftTag = ''\r\n}: {\r\n    text: string,\r\n    global: string,\r\n    cutoffChars?: Array<string>,\r\n    cutoffCharsReverse?: Array<string>,\r\n    masterOpen?: string,\r\n    masterClose?: string,\r\n    rightTag?: string,\r\n    leftTag?: string\r\n}): string {\r\n    let res = text\r\n    const hasLeftTag = leftTag.length > 0\r\n    const hasRightTag = rightTag.length > 0\r\n    res = protectConverted({ text: res })\r\n    let segments = splitGlobal({ text: res, global })\r\n    while (segments.length > 1) {\r\n        let endAllLeft\r\n        let endAllRight\r\n        const extentLeft = getParenthesesExtent({ text: segments[0], cutoffChars: cutoffCharsReverse, reverse: true })\r\n        const extentRight = getParenthesesExtent({ text: segments[1], cutoffChars })\r\n        const { left, right } = stripExtraParentheses({ left: extentLeft, right: extentRight })\r\n        const semiTrimmedLeft = trimParentheses({ text: left })\r\n        const semiTrimmedRight = trimParentheses({ text: right })\r\n        endAllLeft = trimOpenParentheses({ left: semiTrimmedLeft, right: semiTrimmedRight })\r\n        endAllRight = trimCloseParentheses({ left: semiTrimmedLeft, right: semiTrimmedRight })\r\n\r\n        const nestedLeftSplit = splitGlobal({ text: endAllLeft, global })\r\n        const nestedRightSplit = splitGlobal({ text: endAllRight, global })\r\n        if (nestedLeftSplit.length > 1) {\r\n            endAllLeft = beautifyGlobal({ text: endAllLeft, global, cutoffChars, cutoffCharsReverse, masterOpen, masterClose, rightTag, leftTag })\r\n        }\r\n        if (nestedRightSplit.length > 1) {\r\n            endAllRight = beautifyGlobal({ text: endAllRight, global, cutoffChars, cutoffCharsReverse, masterOpen, masterClose, rightTag, leftTag })\r\n        }\r\n\r\n        const mathml = `${masterOpen}${hasLeftTag ? `<${leftTag}>${endAllLeft}</${leftTag}>` : endAllLeft}${hasRightTag ? `<${rightTag}>${endAllRight}</${rightTag}>` : endAllRight}${masterClose}`\r\n        res = res.replace(left + global + right, mathml)\r\n        res = protectConverted({ text: res })\r\n        segments = splitGlobal({ text: res, global })\r\n    }\r\n    res = revealConverted({ text: res })\r\n    return res\r\n}\r\n\r\nexport function protectConverted ({ text }: { text: string }): string {\r\n    let res = text\r\n    specials.forEach((special, index) => {\r\n        res = res.replace(new RegExp(special, 'g'), `_${index}_`)\r\n    })\r\n    return res\r\n}\r\n\r\nconst specials = [\r\n    'msqrt'\r\n]\r\n\r\nexport function splitGlobal ({ text, global }: { text: string, global: string }) {\r\n    const regex = new RegExp(`(.*)${global}(.*)`)\r\n    const match = text.match(regex)\r\n    if (match && match.length > 1) {\r\n        return [match[1], match[2]]\r\n    }\r\n    return []\r\n}\r\n\r\nexport function getParenthesesExtent (\r\n    { text, open = 0, reverse = false, cutoffChars = [] }:\r\n    { text: string, open?: number, reverse?: boolean, cutoffChars?: Array<string> }\r\n): string {\r\n    if (!text) return ''\r\n    if (!reverse) {\r\n        let match = text.match(/^([^()]*)([()])/)\r\n        if (!match || match.length === 0) {\r\n            if (shouldCutoff({ text, open, cutoffChars })) {\r\n                return cutoff({ text, cutoffChars, reverse })\r\n            }\r\n            return text\r\n        }\r\n\r\n        const firstMatch = match[0]\r\n        const textMatch = match[1]\r\n        const parenthesesMatch = match[2]\r\n\r\n        if (shouldCutoff({ text: textMatch, open, cutoffChars })) {\r\n            return cutoff({ text: textMatch, cutoffChars, reverse })\r\n        }\r\n        let slice = text.slice(firstMatch.length)\r\n        if (parenthesesMatch === '(') {\r\n            return firstMatch + getParenthesesExtent({ text: slice, open: open + 1, reverse, cutoffChars })\r\n        } else {\r\n            if (open <= 1) {\r\n                return firstMatch\r\n            }\r\n            return firstMatch + getParenthesesExtent({ text: slice, open: open - 1, reverse, cutoffChars })\r\n        }\r\n    } else {\r\n        let match = text.match(/([()])([^()]*)$/)\r\n        if (!match || match.length === 0) {\r\n            if (shouldCutoff({ text, open, cutoffChars })) {\r\n                return cutoff({ text, cutoffChars, reverse })\r\n            }\r\n            return text\r\n        }\r\n\r\n        const firstMatch = match[0]\r\n        const textMatch = match[2]\r\n        const parenthesesMatch = match[1]\r\n\r\n        if (shouldCutoff({ text: textMatch, open, cutoffChars })) {\r\n            return cutoff({ text: textMatch, cutoffChars, reverse })\r\n        }\r\n        let slice = text.slice(0, text.length - firstMatch.length)\r\n        if (parenthesesMatch === ')') {\r\n            return getParenthesesExtent({ text: slice, open: open + 1, reverse, cutoffChars }) + firstMatch\r\n        } else {\r\n            if (open <= 1) {\r\n                return firstMatch\r\n            }\r\n            return getParenthesesExtent({ text: slice, open: open - 1, reverse, cutoffChars }) + firstMatch\r\n        }\r\n    }\r\n}\r\n\r\nexport function shouldCutoff ({ text, cutoffChars, open }: { text: string, cutoffChars: Array<string>, open: number}): boolean {\r\n    const filteredCutoffChars = cutoffChars.filter(filterCutoffChars)\r\n    if (open === 0 && cutoffChars.includes('/')) {\r\n        if (/<\\/mfrac><\\/mstyle>/.test(text) || /<mo>&divide;<\\/mo>/.test(text)) {\r\n            return true\r\n        }\r\n    }\r\n    if (open === 0 && cutoffChars.includes('*')) {\r\n        if (/<mo>&times;<\\/mo>/.test(text)) {\r\n            return true\r\n        }\r\n    }\r\n    if (open === 0 && filteredCutoffChars.length > 0 && new RegExp(`[\\\\${filteredCutoffChars.join('\\\\')}]`, 'g').test(maskCutoffWhiteList({ text }))) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function maskCutoffWhiteList ({ text }: { text: string }): string {\r\n    let res = text\r\n    Object.keys(cutoffWhiteList).forEach(key => {\r\n        res = res.replace(new RegExp(key, 'g'), cutoffWhiteList[key])\r\n    })\r\n    return res\r\n}\r\n\r\nconst cutoffWhiteList = {\r\n    '<mo>&plus;</mo>': '+',\r\n    '<mo>&minus;</mo>': '-',\r\n    '<mo>&times;</mo>': '*'\r\n}\r\n\r\nexport function filterCutoffChars (cutoffChar: string) {\r\n    return whiteListCutoffChars.includes(cutoffChar)\r\n}\r\n\r\nexport const whiteListCutoffChars = [\r\n    '+',\r\n    '-',\r\n    '*',\r\n    '(',\r\n    ')'\r\n]\r\n\r\nexport function cutoff ({ text, cutoffChars, reverse }: { text: string, cutoffChars: Array<string>, reverse?: boolean}) {\r\n    const filteredCutoffChars = cutoffChars.filter(filterCutoffChars)\r\n    const maskedText = maskCutoffWhiteList({ text })\r\n    let remainingRegex\r\n    let divideCutoffRegex\r\n    let alternateDivideCutoffRegex\r\n    if (reverse) {\r\n        remainingRegex = new RegExp(`[\\\\${filteredCutoffChars.join('\\\\')}]([^\\\\${filteredCutoffChars.join('\\\\')}]+)$`)\r\n        divideCutoffRegex = new RegExp(`<mo>&divide;</mo>([^\\\\${filteredCutoffChars.join('\\\\')}]+)$`)\r\n        alternateDivideCutoffRegex = new RegExp(`</mfrac></mstyle>([^\\\\${filteredCutoffChars.join('\\\\')}]+)$`)\r\n    } else {\r\n        remainingRegex = new RegExp(`^([^\\\\${filteredCutoffChars.join('\\\\')}]+)[\\\\${filteredCutoffChars.join('\\\\')}]`)\r\n        divideCutoffRegex = new RegExp(`^([^\\\\${filteredCutoffChars.join('\\\\')}]+)<mo>&divide;</mo>`)\r\n        alternateDivideCutoffRegex = new RegExp(`^([^\\\\${filteredCutoffChars.join('\\\\')}]+)<mstyle displaystyle=\"true\"><mfrac>`)\r\n    }\r\n\r\n    const cutoffMatch = maskedText.match(remainingRegex)\r\n    const cutoffDivideMatch = maskedText.match(divideCutoffRegex)\r\n    const cutoffAlternateDivideMatch = maskedText.match(alternateDivideCutoffRegex)\r\n\r\n    let res = ''\r\n    if (cutoffMatch) {\r\n        res = cutoffMatch[1]\r\n    }\r\n    if (cutoffDivideMatch) {\r\n        // Should only enter here if we're dealing with the preceding part of a divide\r\n        if (!res || cutoffDivideMatch[1].length < res.length) {\r\n            res = cutoffDivideMatch[1]\r\n        }\r\n    }\r\n    if (cutoffAlternateDivideMatch) {\r\n        // Should only enter here if we're dealing with the preceding part of a divide\r\n        if (!res || cutoffAlternateDivideMatch[1].length < res.length) {\r\n            res = cutoffAlternateDivideMatch[1]\r\n        }\r\n    }\r\n    return unmaskCutoffWhiteList({ text: res })\r\n}\r\n\r\nexport function unmaskCutoffWhiteList ({ text }: { text: string }): string {\r\n    let res = text\r\n    Object.keys(cutoffWhiteList).forEach(key => {\r\n        res = res.replace(new RegExp('\\\\' + cutoffWhiteList[key], 'g'), key)\r\n    })\r\n    return res\r\n}\r\n\r\nexport function stripExtraParentheses ({ left, right }: { left: string, right: string }) {\r\n    // Remove unmatched preceding or trailing parentheses\r\n    const leftHasPreceding = /^\\(/.test(left)\r\n    const rightHasPreceding = /^\\(/.test(right)\r\n    const leftHasTrailing = /\\)$/.test(left)\r\n    const rightHasTrailing = /\\)$/.test(right)\r\n    if (leftHasPreceding && !leftHasTrailing && !rightHasPreceding && !rightHasTrailing) {\r\n        return { left: left.replace(/^\\(/, ''), right }\r\n    }\r\n    if (!leftHasPreceding && !leftHasTrailing && !rightHasPreceding && rightHasTrailing) {\r\n        return { left, right: right.replace(/\\)$/, '') }\r\n    }\r\n    return { left, right }\r\n}\r\n\r\nexport function trimParentheses ({ text }: { text: string }): string {\r\n    return text.replace(/^\\((.*)\\)$/g, '$1')\r\n}\r\n\r\nexport function trimOpenParentheses ({ left, right }: { left: string, right: string }): string {\r\n    if (/\\)$/.test(right)) {\r\n        return left.replace(/^\\(/g, '')\r\n    }\r\n    return left\r\n}\r\n\r\nexport function trimCloseParentheses ({ left, right }: { left: string, right: string }): string {\r\n    if (/^\\(/.test(left)) {\r\n        return right.replace(/\\)$/g, '')\r\n    }\r\n    return right\r\n}\r\n\r\nexport function padParentheses ({ text }: { text: string }): string {\r\n    let res = text\r\n    res = res.replace(/^(.{0,3})([()])/g, '$1<mo>$2</mo>') // replace at the beginning\r\n    res = res.replace(/([()])([^()]{0,4})$/g, '<mo>$1</mo>$2') // replace at the end\r\n    res = res.replace(/([()])(?!<\\/mo>)/g, '<mo>$1</mo>')\r\n    return res\r\n}\r\n\r\nexport function revealConverted ({ text }: { text: string }): string {\r\n    let res = text\r\n    specials.forEach((special, index) => {\r\n        res = res.replace(new RegExp(`_${index}_`, 'g'), special)\r\n    })\r\n    return res\r\n}\r\n\r\nexport function padIgnoreList ({ text }: { text: string }): string {\r\n    let res = text\r\n    ignoreList.forEach(item => {\r\n        res = res.replace(new RegExp(`(^|[^A-Za-z0-9])(${item})($|[^A-Za-z0-9])`, 'g'), '$1<mo>$2</mo>$3')\r\n    })\r\n    return res\r\n}\r\n","import { evaluate } from 'mathjs'\r\nimport ignoreList from './ignoreList'\r\nimport { extrapolateMathml, expandVariableWithColor, colorVariable } from './mathml'\r\n\r\nconst circularDependencyError = 'Circular dependency detected'\r\n\r\nexport const variableRegex = /([A-Za-z]([A-Za-z0-9 ]*[A-Za-z0-9])*)/g\r\n\r\n// parses the text and returns identified variables\r\nexport function getVariables ({\r\n    text,\r\n    useIgnoreList = true\r\n}: {\r\n    text: string,\r\n    useIgnoreList?: boolean\r\n}): Array<string> {\r\n    if (!text) return []\r\n    const matches = text.match(variableRegex)\r\n    if (!matches) return []\r\n    const uniqueMatches = matches.reduce((prev, curr) => {\r\n        if (!prev.includes(curr)) {\r\n            return [...prev, curr]\r\n        } else {\r\n            return prev\r\n        }\r\n    }, [])\r\n\r\n    if (!useIgnoreList) return uniqueMatches\r\n\r\n    return uniqueMatches.reduce((prev, curr) => {\r\n        if (!ignoreList.includes(curr)) {\r\n            return [...prev, curr]\r\n        } else {\r\n            return prev\r\n        }\r\n    }, [])\r\n}\r\n\r\nexport function recursiveSolve ({\r\n    text = '',\r\n    unit,\r\n    context,\r\n    inheritedContext,\r\n    parents = []\r\n}: {\r\n    text: string,\r\n    context: Object,\r\n    inheritedContext: Object,\r\n    parents: Array<string>\r\n}): {\r\n        text: string,\r\n        unit: string,\r\n        context: Object,\r\n        resolution: { solution?: string, special?: string, error?: string},\r\n        solvableEquation: string,\r\n        mathml?: string,\r\n        missingContext: Array<string>,\r\n        requiredContext: Array<string>,\r\n        fullMissingContext: Array<string>\r\n    } {\r\n    let solvableEquation = text\r\n    let mathml = extrapolateMathml({ text })\r\n    const missingContext = []\r\n    const fullMissingContext = []\r\n    const variables: any = getVariables({ text })\r\n    const requiredContext = [...variables]\r\n    const solvableContext = { ...context }\r\n    const response = {\r\n        text,\r\n        unit,\r\n        missingContext,\r\n        fullMissingContext,\r\n        requiredContext,\r\n        context: solvableContext\r\n    }\r\n    const resolution = parents.reduce((error, parent) => {\r\n        if (error.error === circularDependencyError || variables.includes(parent)) {\r\n            return { error: circularDependencyError }\r\n        }\r\n        return error\r\n    }, {})\r\n    if (resolution.error) {\r\n        return {\r\n            ...response,\r\n            resolution,\r\n            solvableEquation,\r\n            mathml\r\n        }\r\n    }\r\n    variables.sort((a, b) => b.length - a.length).forEach(variable => {\r\n        if (solvableContext[variable] && solvableContext[variable].text) {\r\n            const usableContextVariable = solvableContext[variable] || inheritedContext[variable]\r\n            const prepared = recursiveSolve({\r\n                text: usableContextVariable.text,\r\n                unit: usableContextVariable.unit,\r\n                context: usableContextVariable.context,\r\n                inheritedContext: { ...inheritedContext, ...solvableContext },\r\n                parents: [...parents, variable]\r\n            })\r\n            fullMissingContext.push(...prepared.fullMissingContext)\r\n            if (prepared.resolution.error === circularDependencyError) {\r\n                resolution.error = circularDependencyError\r\n                return\r\n            }\r\n            solvableContext[variable] = prepared\r\n            solvableEquation = solvableEquation.replace(new RegExp(variable, 'g'), '(' + prepared.solvableEquation + ')')\r\n            if (prepared.mathml && variableRegex.test(prepared.mathml)) {\r\n                mathml = expandVariableWithColor({ text: mathml, variable, expanded: prepared.mathml })\r\n            } else {\r\n                mathml = colorVariable({ text: mathml, variable })\r\n            }\r\n        } else if (inheritedContext && inheritedContext[variable] && inheritedContext[variable].solvableEquation !== undefined) {\r\n            solvableEquation = solvableEquation.replace(new RegExp(variable, 'g'), '(' + inheritedContext[variable].solvableEquation + ')')\r\n            mathml = colorVariable({ text: mathml, variable })\r\n        } else if (inheritedContext && inheritedContext[variable] && !inheritedContext[variable].text) {\r\n            solvableEquation = solvableEquation.replace(new RegExp(variable, 'g'), '(' + inheritedContext[variable] + ')')\r\n            mathml = colorVariable({ text: mathml, variable })\r\n            fullMissingContext.push(variable)\r\n        } else {\r\n            missingContext.push(variable)\r\n            fullMissingContext.push(variable)\r\n            mathml = colorVariable({ text: mathml, variable })\r\n        }\r\n    })\r\n    if (resolution.error) {\r\n        return {\r\n            ...response,\r\n            resolution,\r\n            solvableEquation,\r\n            mathml\r\n        }\r\n    }\r\n    return {\r\n        ...response,\r\n        resolution: solve({ text: solvableEquation, solvableEquation }),\r\n        solvableEquation,\r\n        mathml\r\n    }\r\n}\r\n\r\n// Context in this case is simply an object with variableNames as properties with the values that should be used\r\nexport function solveWithAddedContext ({ text, simpleContext }: { text: string, simpleContext: Object }): {\r\n    solution?: string, special?: string, error?: string, missingContext?: Array<string>\r\n} {\r\n    let res = text\r\n    const variableNames = getVariables({ text })\r\n    variableNames.sort((a, b) => b.length - a.length).forEach(variable => {\r\n        res = res.replace(new RegExp(variable, 'g'), `(${simpleContext[variable]})`)\r\n    })\r\n    return solve({ text: res })\r\n}\r\n\r\nexport function solve ({\r\n    text\r\n}: {\r\n    text: string\r\n}): {\r\n    solution?: string, special?: string, error?: string, missingContext?: Array<string>\r\n} {\r\n    if (!text || text.length === 0) {\r\n        return {}\r\n    }\r\n    let solution\r\n    const missingContext = getVariables({ text })\r\n    if (missingContext.length > 0) {\r\n        return { error: 'Missing context', missingContext }\r\n    }\r\n    try {\r\n        solution = evaluate(text)\r\n    } catch (error) {\r\n        return { error }\r\n    }\r\n    if (solution !== undefined && isNaN(parseFloat(solution))) return { error: 'Error. Not a number.' }\r\n    if (solution.im) {\r\n        return {\r\n            solution: solution.im,\r\n            special: 'im'\r\n        }\r\n    }\r\n    return { solution }\r\n}\r\n\r\nexport function stripContext (context: Object) {\r\n    const res = {}\r\n    if (typeof context !== 'object') {\r\n        return context\r\n    }\r\n    let hasProps = false\r\n    Object.keys(context).forEach(prop => {\r\n        if (context[prop] && (context[prop].text || context[prop].unit || context[prop].context)) {\r\n            res[prop] = {}\r\n            res[prop].text = context[prop].text\r\n            res[prop].unit = context[prop].unit\r\n            res[prop].context = stripContext(context[prop].context)\r\n            if (res[prop].context || res[prop].text || res[prop].unit) {\r\n                hasProps = true\r\n            }\r\n        }\r\n    })\r\n    if (!hasProps) {\r\n        return undefined\r\n    }\r\n    return res\r\n}\r\n\r\nexport function formatNumber (number) {\r\n    if (number && number.toString) {\r\n        const str = number.toString()\r\n        if (/\\./.test(str)) {\r\n            const parts = str.split('.')\r\n            return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + '.' + parts[1]\r\n        } else {\r\n            return str.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n        }\r\n    } else {\r\n        return number\r\n    }\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport function getLocalStorage (key) {\r\n    const localString = localStorage.getItem(key)\r\n    return JSON.parse(localString)\r\n}\r\n\r\nexport function setLocalStorage (key, value) {\r\n    const valueString = JSON.stringify(value)\r\n    localStorage.setItem(key, valueString)\r\n}\r\n\r\nexport function useLocalStorage (defaultValue, key) {\r\n    const [state, setState] = useState(defaultValue)\r\n\r\n    useEffect(() => {\r\n        const value = getLocalStorage(key)\r\n        if (value !== undefined && value !== null) {\r\n            setState(value)\r\n        }\r\n    }, [key])\r\n\r\n    return [\r\n        state,\r\n        newValue => {\r\n            setLocalStorage(key, newValue)\r\n            setState(newValue)\r\n        }\r\n    ]\r\n}\r\n","import * as React from 'react'\r\nimport { mathmlWrapper } from 'utils/math/mathml'\r\nimport styled from 'styled-components'\r\n\r\ninterface Props {\r\n    mathml: string,\r\n    title: string\r\n}\r\n\r\nconst StyledMathML = styled.div`\r\n    text-align: center;\r\n    padding: 10px;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n`\r\n\r\nclass MathML extends React.Component<Props, {}> {\r\n    componentDidMount () {\r\n        // MathJax.Hub.Queue(['Typeset', MathJax.Hub]) // eslint-disable-line\r\n        if (typeof MathJax !== 'undefined') { // eslint-disable-line\r\n            MathJax.typesetPromise() // eslint-disable-line\r\n        }\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        // MathJax.Hub.Queue(['Typeset', MathJax.Hub]) // eslint-disable-line\r\n        if (typeof MathJax !== 'undefined') { // eslint-disable-line\r\n            MathJax.typesetClear() // eslint-disable-line\r\n            MathJax.typesetPromise() // eslint-disable-line\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const { mathml, title } = this.props\r\n\r\n        return (\r\n            <StyledMathML dangerouslySetInnerHTML={{ __html: (mathmlWrapper({ title, text: mathml })) }} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default MathML\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport getColor from 'utils/math/getColor'\r\nimport { getVariables, formatNumber } from 'utils/math'\r\nimport StyledInput from 'components/StyledInput'\r\n\r\nconst StyledContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Label = styled.span`\r\n    font-weight: bold;\r\n`\r\n\r\nfunction getNewContext ({ previousText, text, context }) {\r\n    const newContext = { ...context }\r\n    const previousVariables = getVariables({ text: previousText })\r\n    const nextVariables = getVariables({ text })\r\n    // if there is only one difference between the list of previous and next variables use the old value as the new\r\n    const unusedPrevious = previousVariables.filter(i => !nextVariables.includes(i))\r\n    const unusedNext = nextVariables.filter(i => !previousVariables.includes(i))\r\n    if (newContext) {\r\n        if (unusedPrevious.length === 1 && unusedNext.length === 1 && unusedPrevious[0]) {\r\n            newContext[unusedNext[0]] = newContext[unusedPrevious[0]]\r\n            delete newContext[unusedPrevious[0]]\r\n        } else {\r\n            // clear unused context\r\n            Object.keys(newContext).forEach(variable => {\r\n                if (!nextVariables.includes(variable)) {\r\n                    delete newContext[variable]\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return newContext\r\n}\r\n\r\nfunction NestedProperty ({ id, variable, info, onChange }: {\r\n    id: string,\r\n    variable: string,\r\n    info: {\r\n        resolution: { solution?: string, special?: string, error?: string},\r\n        name: string,\r\n        text: string,\r\n        unit: string,\r\n        context: Object,\r\n        inheritedContext: Object,\r\n        missingContext: Array<string>,\r\n        requiredContext: Array<string>\r\n    },\r\n    onChange: Function\r\n}) {\r\n    const newInfo = {\r\n        resolution: {},\r\n        text: '',\r\n        unit: '',\r\n        missingContext: [],\r\n        requiredContext: [],\r\n        ...info.context[variable],\r\n        inheritedContext: { ...info.inheritedContext, ...info.context },\r\n        name: variable\r\n    }\r\n    return (\r\n        <ObjectProperty\r\n            id={`${id}-${variable}`}\r\n            info={newInfo}\r\n            onChange={({ name, text, unit, context }) => {\r\n                const copyContext = { ...info.context }\r\n                if (!copyContext[name]) copyContext[name] = {}\r\n                copyContext[name].context = context\r\n                copyContext[name].text = text\r\n                copyContext[name].unit = unit\r\n                onChange({ name: info.name, text: info.text, unit: info.unit, context: copyContext })\r\n            }} />\r\n    )\r\n}\r\n\r\nexport default function ObjectProperty (props: {\r\n    id: string,\r\n    info: {\r\n        resolution: { solution?: string, special?: string, error?: string},\r\n        name: string,\r\n        text: string,\r\n        unit: string,\r\n        context: Object,\r\n        inheritedContext: Object,\r\n        missingContext: Array<string>,\r\n        requiredContext: Array<string>\r\n    },\r\n    onChange: Function\r\n}) {\r\n    const {\r\n        id,\r\n        info,\r\n        onChange\r\n    } = props\r\n    // const placeholder = info.inheritedContext &&\r\n    // info.inheritedContext[info.name] &&\r\n    // info.inheritedContext[info.name].resolution &&\r\n    // info.inheritedContext[info.name].resolution.solution ?\r\n    // info.inheritedContext[info.name].resolution.solution : undefined\r\n    const nameStyle = { marginTop: 7, marginBottom: 2, color: getColor(info.name) }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div style={nameStyle}>\r\n                    {info.name\r\n                        ? <Label>{info.name} =&nbsp;\r\n                            {info.resolution.solution\r\n                                ? formatNumber(info.resolution.solution)\r\n                                : null}\r\n                        </Label>\r\n                        : null}\r\n                </div>\r\n                <StyledContainer>\r\n                    <StyledInput type='text'\r\n                        placeholder='Name / Value / Equation'\r\n                        style={{ marginBottom: 5 }}\r\n                        value={info.text || ''}\r\n                        onChange={event => {\r\n                            let text = event.target.value\r\n                            if (text.trim() === '') {\r\n                                text = undefined\r\n                            }\r\n                            onChange({ name: info.name, text, unit: info.unit, context: getNewContext({ name: info.name, previousText: info.text, text, unit: info.unit, context: info.context }) })\r\n                        }} />\r\n                    <StyledInput type='text'\r\n                        placeholder='Unit'\r\n                        style={{ marginLeft: 2, marginBottom: 5 }}\r\n                        value={info.unit || ''}\r\n                        onChange={event => {\r\n                            let unit = event.target.value\r\n                            if (unit.trim() === '') {\r\n                                unit = undefined\r\n                            }\r\n                            onChange({ name: info.name, text: info.text, unit, context: getNewContext({ name: info.name, previousText: info.previousText, text: info.text, unit, context: info.context }) })\r\n                        }} />\r\n                </StyledContainer>\r\n            </div>\r\n            {info.requiredContext && info.requiredContext.map(variable => <NestedProperty key={`${id}-${variable}`} id={id} variable={variable} info={info} onChange={onChange} />)}\r\n        </div>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\nimport * as styles from 'styles'\r\n\r\nconst StyledTextarea = styled.textarea`\r\n    font-family: 'Ubuntu', sans-serif;\r\n    font-size: 1rem;\r\n    line-height: 1.2rem;\r\n    padding: 4px 6px;\r\n    border-radius: 4px;\r\n    border: none;\r\n    width: 100%;\r\n    box-shadow: 0px 0px 2px 2px ${styles.inputShadow};\r\n    outline: none;\r\n    :focus {\r\n        background-color: ${styles.inputFocus};\r\n    }\r\n`\r\n\r\nexport default StyledTextarea\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ObjectProperty from 'components/ObjectProperty'\r\nimport StyledTextarea from 'components/StyledTextarea'\r\nimport StyledInput from 'components/StyledInput'\r\n\r\nconst StyledObjectCreator = styled.div`\r\n    width: 100%;\r\n`\r\n\r\nconst StyledContainer = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Category = styled(StyledInput)`\r\n    margin-top: 2px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Notes = styled(StyledTextarea)`\r\n    min-height: 4rem;\r\n    resize: vertical;\r\n    margin-top: 2px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Label = styled.div`\r\n    font-weight: bold;\r\n    margin-top: 4px;\r\n`\r\n\r\nexport default function ObjectCreator (props: {\r\n    info: {\r\n        resolution: { solution?: string, special?: string, error?: string},\r\n        name: string,\r\n        text: string,\r\n        unit: string,\r\n        mathml: string,\r\n        context: Object,\r\n        inheritedContext: Object,\r\n        missingContext: Array<string>,\r\n        requiredContext: Array<string>,\r\n        solvableEquation: string\r\n    },\r\n    onContextChange: Function,\r\n    category: string,\r\n    onCategoryChange: Function,\r\n    notes: string,\r\n    onNotesChage: Function\r\n}) {\r\n    return (\r\n        <StyledObjectCreator>\r\n            <Label>Name</Label>\r\n            <ObjectProperty id='base' info={props.info} onChange={props.onContextChange} />\r\n            <Label>Category</Label>\r\n            <StyledContainer>\r\n                <Category value={props.category || ''} type='textarea' onChange={props.onCategoryChange} />\r\n            </StyledContainer>\r\n            <Label>Notes</Label>\r\n            <StyledContainer>\r\n                <Notes value={props.notes || ''} type='textarea' onChange={props.onNotesChange} />\r\n            </StyledContainer>\r\n        </StyledObjectCreator>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport originalStyledInput from 'components/StyledInput'\r\n\r\nconst StyledInput = styled(originalStyledInput)`\r\n    width: 80px;\r\n`\r\n\r\nconst StyledTableGenerator = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    input {\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nconst StyledOverallSection = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    padding-top: 1rem;\r\n`\r\n\r\nconst StyledColumnSection = styled.div`\r\n    padding-left: ${styles.materialIterationWidth + 2}px;\r\n    display: flex;\r\n    padding-bottom: 1rem;\r\n`\r\n\r\nconst StyledSettingGroup = styled.div`\r\n    width: ${styles.materialColumnWidth}px;\r\n    padding: 2px;\r\n    text-align: right;\r\n`\r\n\r\nconst StackedColumn = styled.div`\r\n    flex-direction: column;\r\n`\r\n\r\nconst Setting = styled.div`\r\n    display: flex;\r\n    padding: 2px;\r\n`\r\n\r\nconst Label = styled.div`\r\n    padding-top: .2rem;\r\n    padding-right: 1rem;\r\n`\r\n\r\nexport default function TableGenerator (props) {\r\n    const {\r\n        columns,\r\n        columnColorObject,\r\n        columnSettings,\r\n        settings = {},\r\n        onGeneratorSettingChange,\r\n        onColumnSettingChange\r\n    } = props\r\n    const left = settings.left\r\n    const right = settings.right\r\n\r\n    function renderColumns ({ columns, columnColorObject, columnSettings, onColumnSettingChange }) {\r\n        const changeColumnSetting = (columnName, settingName) => {\r\n            return function (event) {\r\n                const newValue = event.target.value\r\n                if (!columnSettings[columnName] || newValue !== columnSettings[columnName][settingName]) {\r\n                    const newColumnSettings = { ...columnSettings }\r\n                    if (!columnSettings[columnName]) {\r\n                        newColumnSettings[columnName] = {}\r\n                    } else {\r\n                        newColumnSettings[columnName] = { ...columnSettings[columnName] }\r\n                    }\r\n                    newColumnSettings[columnName][settingName] = newValue\r\n                    onColumnSettingChange(newColumnSettings)\r\n                }\r\n            }\r\n        }\r\n        return columns.map(column => {\r\n            const option = columnSettings[column] ? columnSettings[column] : {}\r\n            const start = option.start\r\n            const interval = option.interval\r\n            return <StyledSettingGroup key={column}>\r\n                <div style={{ color: columnColorObject[column], fontWeight: 'bold', paddingTop: 10, paddingBottom: 10 }}>{column}</div>\r\n                <StackedColumn>\r\n                    <Setting>\r\n                        <Label>Start</Label>\r\n                        <StyledInput style={{ marginLeft: 18 }} type='number' onChange={changeColumnSetting(column, 'start')} value={start || ''} placeholder='0' />\r\n                    </Setting>\r\n                    <Setting>\r\n                        <Label>Interval</Label>\r\n                        <StyledInput type='number' onChange={changeColumnSetting(column, 'interval')} value={interval || ''} placeholder='1' />\r\n                    </Setting>\r\n                </StackedColumn>\r\n            </StyledSettingGroup>\r\n        })\r\n    }\r\n\r\n    function changeSetting (settingName) {\r\n        return function (event) {\r\n            const newValue = event.target.value.replace(/-/g, '')\r\n            if (newValue !== settings[settingName]) {\r\n                const newSetting = { ...settings }\r\n                newSetting[settingName] = newValue\r\n                onGeneratorSettingChange(newSetting)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <StyledTableGenerator>\r\n            <StyledOverallSection>\r\n                <Setting style={{ paddingRight: 8 }}>\r\n                    <Label>Left</Label>\r\n                    <StyledInput type='number' onChange={changeSetting('left')} value={left || ''} placeholder='0' />\r\n                </Setting>\r\n                <Setting>\r\n                    <Label>Right</Label>\r\n                    <StyledInput type='number' onChange={changeSetting('right')} value={right || ''} placeholder='10' />\r\n                </Setting>\r\n            </StyledOverallSection>\r\n            <StyledColumnSection>\r\n                {renderColumns({ columns, columnColorObject, columnSettings, onColumnSettingChange })}\r\n            </StyledColumnSection>\r\n        </StyledTableGenerator>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n    position: fixed;\r\n    bottom: 15px;\r\n    right: 5px;\r\n    i {\r\n        font-size: 3rem;\r\n    }\r\n    div {\r\n        display: flex;\r\n    }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\n\r\nconst StyledSearchButton = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n`\r\n\r\nconst StyledSearchButtonWithHover = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n    ${styles.buttonHover('Search', -6)}\r\n`\r\n\r\nexport default function SearchButton (props) {\r\n    if (props.hover) {\r\n        return (\r\n            <StyledSearchButtonWithHover {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <i className='material-icons' style={props.style}>search</i>\r\n            </StyledSearchButtonWithHover>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledSearchButton {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <i className='material-icons' style={props.style}>search</i>\r\n            </StyledSearchButton>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\n\r\nconst StyledSaveButton = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n    ${styles.buttonHover('Save')}\r\n`\r\n\r\nexport default function SaveButton (props) {\r\n    if (props.text && props.location) {\r\n        return (\r\n            <StyledSaveButton {...props}>\r\n                <i className='material-icons'>save</i>\r\n            </StyledSaveButton>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport pickaxe from 'icons/pickaxe.svg'\r\n\r\nconst StyledMaterialButton = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n`\r\n\r\nconst StyledMaterialButtonWithHover = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n    ${styles.buttonHover('Material', -9)}\r\n`\r\n\r\nexport default function MaterialButton (props) {\r\n    if (props.hover) {\r\n        return (\r\n            <StyledMaterialButtonWithHover {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <img src={pickaxe} alt='Material' height={(props.style && props.style.height) || 50} width={(props.style && props.style.width) || 50} />\r\n            </StyledMaterialButtonWithHover>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledMaterialButton {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <img src={pickaxe} alt='Material' height={(props.style && props.style.height) || 50} width={(props.style && props.style.width) || 50} />\r\n            </StyledMaterialButton>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport anvil from 'icons/anvil.svg'\r\n\r\nconst StyledForgeButton = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n`\r\n\r\nconst StyledForgeButtonWithHover = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n    ${styles.buttonHover('Forge', -2)}\r\n`\r\n\r\nexport default function ForgeButton (props) {\r\n    if (props.hover) {\r\n        return (\r\n            <StyledForgeButtonWithHover {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <img src={anvil} alt='Forge' height={(props.style && props.style.height) || 50} width={(props.style && props.style.width) || 50} />\r\n            </StyledForgeButtonWithHover>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledForgeButton {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <img src={anvil} alt='Forge' height={(props.style && props.style.height) || 50} width={(props.style && props.style.width) || 50} />\r\n            </StyledForgeButton>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport crown from 'icons/crown.svg'\r\n\r\nconst StyledCommandButton = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n`\r\n\r\nconst StyledCommandButtonWithHover = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n    ${styles.buttonHover('Command', -20)}\r\n`\r\n\r\nexport default function CommandButton (props) {\r\n    if (props.hover) {\r\n        return (\r\n            <StyledCommandButtonWithHover {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <img src={crown} alt='Command' height={(props.style && props.style.height) || 50} width={(props.style && props.style.width) || 50} />\r\n            </StyledCommandButtonWithHover>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledCommandButton {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <img src={crown} alt='Command' height={(props.style && props.style.height) || 50} width={(props.style && props.style.width) || 50} />\r\n            </StyledCommandButton>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport easel from 'icons/easel.svg'\r\n\r\nconst StyledReviewButton = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n`\r\n\r\nconst StyledReviewButtonWithHover = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n    ${styles.buttonHover('Review', -6)}\r\n`\r\n\r\nexport default function ReviewButton (props) {\r\n    if (props.hover) {\r\n        return (\r\n            <StyledReviewButtonWithHover {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <img src={easel} alt='Review' height={(props.style && props.style.height) || 50} width={(props.style && props.style.width) || 50} />\r\n            </StyledReviewButtonWithHover>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledReviewButton {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <img src={easel} alt='Review' height={(props.style && props.style.height) || 50} width={(props.style && props.style.width) || 50} />\r\n            </StyledReviewButton>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFrozenTd = styled.div`\r\n`\r\n\r\nconst FrozenColumnTd = props => {\r\n    return (\r\n        <ColumnTd>\r\n            <StyledFrozenTd {...props} />\r\n        </ColumnTd>\r\n    )\r\n}\r\n\r\nconst ColumnTd = styled.td`\r\n`\r\n\r\nlet overrideSelect = false\r\n\r\nexport default function DataGrid (props: {\r\n    callback?: Function,\r\n    header?: Array<Array<string>>,\r\n    body: Array<Array<string>>,\r\n    footer?: Array<Array<string>>,\r\n    numbered?: boolean,\r\n    highlightColor?: string,\r\n    highlightInitialColor?: string,\r\n    hoverHeaderAndNumberedColor?: string,\r\n    className?: string,\r\n    style?: string,\r\n    cellComponent?: React.node,\r\n    frozenColumns?: number,\r\n    frozenColumnWidth?: number,\r\n    styles?: {\r\n        header?: {\r\n            tr?: Object,\r\n            td?: Object\r\n        },\r\n        body?: {\r\n            tr?: Object,\r\n            td?: Object,\r\n            edit?: Object\r\n        },\r\n        footer?: {\r\n            tr?: Object,\r\n            td?: Object\r\n        },\r\n        thead?: Object,\r\n        tbody?: Object,\r\n        tfoot?: Object\r\n    },\r\n    classes?: {\r\n        header?: {\r\n            tr?: string,\r\n            td?: string\r\n        },\r\n        body?: {\r\n            tr?: string,\r\n            td?: string,\r\n            edit?: string\r\n        },\r\n        footer?: {\r\n            tr?: string,\r\n            td?: string\r\n        },\r\n        thead?: string,\r\n        tbody?: string,\r\n        tfoot?: string\r\n    }\r\n}) {\r\n    const {\r\n        body,\r\n        frozenColumns,\r\n        editState = {},\r\n        setEdit,\r\n        keepEditing,\r\n        skipTabIndexes,\r\n        initialSelectionCell,\r\n        setInitialSelectionCell,\r\n        shouldHandleBlur = false\r\n    } = props\r\n    const CellComponent = props.cellComponent\r\n    const EditCellComponent = props.editComponent\r\n\r\n    const [clickedCell, setClickedCell] = useState({})\r\n    const [selectionRange, setSelectionRange] = useState({})\r\n    const [selectionCurrent, setSelectionCurrent] = useState({})\r\n    const [hover, setHover] = useState({})\r\n    const [selection, setSelection] = useState()\r\n    const [mouseDown, setMouseDown] = useState(false)\r\n    const [blurredOnce, setBlurredOnce] = useState(false)\r\n    const [shiftModifier, setShiftModifier] = useState(false)\r\n    const [ctrlModifier, setCtrlModifier] = useState(false)\r\n\r\n    const editorRef = useRef()\r\n    const selectionRef = useRef()\r\n\r\n    useEffect(() => {\r\n        setSelection(body.filter(filterRow).map(tabularizeSelection).join('\\n'))\r\n    }, [body, selectionRange]) // eslint-disable-line\r\n\r\n    useEffect(() => {\r\n        if (selection) {\r\n            selectText()\r\n        }\r\n    }, [selection])\r\n\r\n    useEffect(() => {\r\n        if (editState.row !== undefined && editState.column !== undefined) {\r\n            const ref = editorRef.current\r\n            ref.focus()\r\n            if (overrideSelect) {\r\n                overrideSelect = false\r\n            } else {\r\n                ref.setSelectionRange(0, ref.value.length)\r\n            }\r\n        } else {\r\n            selectText()\r\n        }\r\n    }, [editState.row, editState.column])\r\n\r\n    function selectText () {\r\n        const ref = selectionRef.current\r\n        ref.focus()\r\n        ref.setSelectionRange(0, ref.value.length)\r\n    }\r\n\r\n    function componentKeyDown (event) {\r\n        if (event.key === 'Shift') {\r\n            setShiftModifier(true)\r\n        }\r\n        if (event.key === 'Control') {\r\n            setCtrlModifier(true)\r\n        }\r\n    }\r\n\r\n    function componentKeyUp (event) {\r\n        if (event.key === 'Shift') {\r\n            setShiftModifier(false)\r\n        }\r\n        if (event.key === 'Control') {\r\n            setCtrlModifier(false)\r\n        }\r\n    }\r\n\r\n    function tableMouseUp () {\r\n        setMouseDown(false)\r\n    }\r\n\r\n    function gridMouseMove (event, row, column) {\r\n        setHover({\r\n            row: row === undefined ? -1 : row,\r\n            column: column === undefined ? -1 : column\r\n        })\r\n        if (mouseDown) {\r\n            // If row is null then it should be a header column event; use the body length\r\n            // If column is null then it should be a numbered column event; use the body column count\r\n            setRangeSelection(row === undefined ? body.length : row,\r\n                column === undefined ? body[0].length : column, true)\r\n        }\r\n    }\r\n\r\n    function gridMouseDown (event, row, column) {\r\n        event.preventDefault()\r\n        setMouseDown(true)\r\n        setBlurredOnce(false)\r\n        // reset clicked if it's not the last clicked cell, so that it won't open the editor\r\n        setClickedCell({\r\n            row: clickedCell.row === row ? row : undefined,\r\n            column: clickedCell.column === column ? column : undefined\r\n        })\r\n        if (shiftModifier) {\r\n            // If row is null then it should be a header column event; use the body length\r\n            // If column is null then it should be a numbered column event; use the body column count\r\n            setRangeSelection(row === undefined ? body.length : row,\r\n                column === undefined ? body[0].length : column, true)\r\n        } else {\r\n            setSingleSelection(row, column, true)\r\n        }\r\n    }\r\n\r\n    function gridMouseUp (event, row, column) {\r\n        // clickedCell.row and clickedCell.column store the last clicked cell, if it's the same open the editor\r\n        if (clickedCell.row === row && clickedCell.column === column) editCell(row, column)\r\n        // if the mouse up event fires on the same cell that was moused down on,\r\n        // then save it as the clicked cell in state\r\n        else if (initialSelectionCell.row === row && initialSelectionCell.column === column) {\r\n            setClickedCell({ row, column })\r\n        }\r\n    }\r\n\r\n    function selectionKeyDown (event) {\r\n        if (event.key === 'Enter') {\r\n            editCell(initialSelectionCell.row, initialSelectionCell.column)\r\n        }\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault()\r\n            if (shiftModifier) {\r\n                setSingleSelection(initialSelectionCell.row, initialSelectionCell.column - 1)\r\n            } else {\r\n                setSingleSelection(initialSelectionCell.row, initialSelectionCell.column + 1)\r\n            }\r\n        }\r\n        if (event.key === 'Escape') {\r\n            if (editState.row !== undefined && editState.column !== undefined) {\r\n                closeEditor()\r\n            } else {\r\n                resetSelection()\r\n            }\r\n        }\r\n        if (event.key === 'Delete') {\r\n            const deleteArray = []\r\n            let row = selectionRange.startRow\r\n            let column = selectionRange.startColumn\r\n            const columnArray = []\r\n            while (column <= selectionRange.endColumn) {\r\n                if (column > -1) {\r\n                    columnArray.push('')\r\n                }\r\n                column++\r\n            }\r\n            while (row <= selectionRange.endRow) {\r\n                if (row > -1) {\r\n                    deleteArray.push(columnArray)\r\n                }\r\n                row++\r\n            }\r\n            updateArray(selectionRange.startRow, selectionRange.startColumn, body, deleteArray)\r\n        }\r\n        if (event.key === 'Backspace') {\r\n            props.callback(initialSelectionCell.row, initialSelectionCell.column, '')\r\n        }\r\n        if (event.key === 'ArrowUp') {\r\n            // if shift: expand range; else: move selection and initial\r\n            if (shiftModifier) {\r\n                setRangeSelection(selectionCurrent.row - 1, selectionCurrent.column)\r\n            } else {\r\n                setSingleSelection(initialSelectionCell.row - 1, initialSelectionCell.column)\r\n            }\r\n        }\r\n        if (event.key === 'ArrowDown') {\r\n            if (shiftModifier) {\r\n                setRangeSelection(selectionCurrent.row + 1, selectionCurrent.column)\r\n            } else {\r\n                setSingleSelection(initialSelectionCell.row + 1, initialSelectionCell.column)\r\n            }\r\n        }\r\n        if (event.key === 'ArrowLeft') {\r\n            if (shiftModifier) {\r\n                setRangeSelection(selectionCurrent.row, selectionCurrent.column - 1)\r\n            } else {\r\n                setSingleSelection(initialSelectionCell.row, initialSelectionCell.column - 1)\r\n            }\r\n        }\r\n        if (event.key === 'ArrowRight') {\r\n            if (shiftModifier) {\r\n                setRangeSelection(selectionCurrent.row, selectionCurrent.column + 1)\r\n            } else {\r\n                setSingleSelection(initialSelectionCell.row, initialSelectionCell.column + 1)\r\n            }\r\n        }\r\n        if (ctrlModifier) {\r\n            if (event.key === 'a') setSingleSelection(null, null)\r\n        } else {\r\n            // If ctrlModifier is false\r\n            if (event.key.length === 1) {\r\n                editCell(initialSelectionCell.row, initialSelectionCell.column, event.key)\r\n                overrideSelect = true\r\n            }\r\n        }\r\n    }\r\n\r\n    function resetSelection () {\r\n        setInitialSelectionCell({})\r\n        setSelectionCurrent({})\r\n        setSelectionRange({})\r\n        setClickedCell({})\r\n        setBlurredOnce(false)\r\n        setSelection('')\r\n    }\r\n\r\n    function selectionBlurred () {\r\n        // Blurs once (from the input element) when you click on a cell, and drag\r\n        // Blurs again if you click and drag outside of the table scope and click on something\r\n        // If the mouse down event isn't fired when the input is blurred they didn't\r\n        // click anywhere on the table, so it should reset the selection and lose focus\r\n\r\n        // Lost focus\r\n        if (!mouseDown || blurredOnce) {\r\n            setCtrlModifier(false)\r\n            setShiftModifier(false)\r\n            setMouseDown(false)\r\n            resetSelection()\r\n        } else {\r\n            setBlurredOnce(true)\r\n        }\r\n    }\r\n\r\n    function selectionPaste (event) {\r\n        event.clipboardData.items[0].getAsString(text => {\r\n            const rows = text.split('\\n')\r\n            const data = text.match(/\\t/g)\r\n                ? rows.map((row) => row.split('\\t'))\r\n                : rows.map((row) => row.split(','))\r\n            updateArray(\r\n                selectionRange.startRow,\r\n                selectionRange.startColumn,\r\n                body,\r\n                data\r\n            )\r\n        })\r\n    }\r\n\r\n    function setSingleSelection (rowIndex: number, columnIndex: number, forceSelection?: boolean) {\r\n        const row = rowIndex ? rowIndex === -1 && columnIndex === -1 ? -1 : cleanRow(rowIndex) : 0\r\n        const column = columnIndex ? rowIndex === -1 && columnIndex === -1 ? -1 : cleanColumn(row, columnIndex) : 0\r\n        setInitialSelectionCell({ row, column })\r\n        setSelectionCurrent({ row, column })\r\n        setSelectionRange({\r\n            startRow: row,\r\n            endRow: rowIndex !== undefined ? row : body.length,\r\n            startColumn: column,\r\n            endColumn: columnIndex !== undefined ? column : body[0].length\r\n        })\r\n        if (forceSelection) {\r\n            selectText()\r\n        }\r\n    }\r\n\r\n    function setRangeSelection (rowIndex: number, columnIndex: number, forceSelection?: boolean) {\r\n        const row = cleanRow(rowIndex)\r\n        const column = cleanColumn(row, columnIndex)\r\n        setSelectionCurrent({ row, column })\r\n        setSelectionRange({\r\n            startRow: row < initialSelectionCell.row ? row : initialSelectionCell.row,\r\n            endRow: row < initialSelectionCell.row ? initialSelectionCell.row : row,\r\n            startColumn: column < initialSelectionCell.column ? column : initialSelectionCell.column,\r\n            endColumn: column < initialSelectionCell.column ? initialSelectionCell.column : column\r\n        })\r\n        if (forceSelection) {\r\n            selectText()\r\n        }\r\n    }\r\n\r\n    function editorKeyDown (event) {\r\n        if (event.key === 'Escape') {\r\n            closeEditor(false)\r\n        }\r\n        if (event.key === 'Enter') {\r\n            if (keepEditing) {\r\n                if (shiftModifier) {\r\n                    editCell(editState.row - 1, editState.column)\r\n                } else {\r\n                    editCell(editState.row + 1, editState.column)\r\n                }\r\n            } else {\r\n                closeEditor()\r\n                if (shiftModifier) {\r\n                    setSingleSelection(editState.row - 1, editState.column)\r\n                } else {\r\n                    setSingleSelection(editState.row + 1, editState.column)\r\n                }\r\n            }\r\n        }\r\n        if (event.key === 'Tab' && (!skipTabIndexes || !skipTabIndexes.includes(editState.column))) {\r\n            event.preventDefault()\r\n            if (keepEditing) {\r\n                if (shiftModifier) {\r\n                    editCell(editState.row, editState.column - 1)\r\n                } else {\r\n                    editCell(editState.row, editState.column + 1)\r\n                }\r\n            } else {\r\n                closeEditor()\r\n                if (shiftModifier) {\r\n                    setSingleSelection(editState.row, editState.column - 1)\r\n                } else {\r\n                    setSingleSelection(editState.row, editState.column + 1)\r\n                }\r\n            }\r\n        }\r\n        if (event.key === 's') {\r\n            if (ctrlModifier) {\r\n                event.preventDefault()\r\n                closeEditor()\r\n            }\r\n        }\r\n    }\r\n\r\n    function editCell (rowIndex, columnIndex, startingValue) {\r\n        if (editState.original !== undefined && editState.row !== undefined && editState.column !== undefined &&\r\n            (CellComponent ? editState.original.value : editState.original) !== (CellComponent ? editState.current.value : editState.current)) {\r\n            props.callback(editState.row, editState.column, editState.current)\r\n        }\r\n        if (rowIndex >= 0 && columnIndex >= 0) {\r\n            const row = cleanRow(rowIndex)\r\n            const column = cleanColumn(row, columnIndex)\r\n            const original = startingValue !== undefined ? startingValue : body[row][column]\r\n            setEdit({ row, column, original, current: original })\r\n        }\r\n    }\r\n\r\n    function closeEditor (save = true, valueOverride) {\r\n        if (save) {\r\n            props.callback(editState.row, editState.column, valueOverride || editState.current)\r\n        }\r\n        setEdit({})\r\n        setSingleSelection(editState.row, editState.column)\r\n    }\r\n\r\n    function updateArray (startRow, startColumn, originalArray, newArrayData) {\r\n        return originalArray.map((row, rowIndex) => updateArrayRow(row, startColumn, newArrayData[rowIndex - startRow], rowIndex))\r\n    }\r\n\r\n    function updateArrayRow (row, startColumn, newArrayData, rowIndex) {\r\n        if (newArrayData !== undefined) {\r\n            return Object.assign([], row.map((cell, cellIndex) => updateArrayCell(cell, newArrayData[cellIndex - startColumn], rowIndex, cellIndex)))\r\n        } else {\r\n            return row\r\n        }\r\n    }\r\n\r\n    function updateArrayCell (cell, data, rowIndex, cellIndex) {\r\n        if (data !== undefined) {\r\n            props.callback(rowIndex, cellIndex, data)\r\n            return data\r\n        } else {\r\n            return cell\r\n        }\r\n    }\r\n\r\n    function cleanRow (row) {\r\n        return row > body.length - 1 ? body.length - 1\r\n            : row < 0 ? 0 : row\r\n    }\r\n\r\n    function cleanColumn (row, column) {\r\n        return column > body[row].length - 1 ? body[row].length - 1\r\n            : column < 0 ? 0 : column\r\n    }\r\n\r\n    function filterRow (row, rowIndex) {\r\n        if (rowIndex >= selectionRange.startRow &&\r\n            rowIndex <= selectionRange.endRow) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    function tabularizeSelection (row) {\r\n        return row.filter(filterToSelection).map(i => {\r\n            return CellComponent\r\n                ? (i.value === undefined ? '' : i.value.toString())\r\n                : i.toString()\r\n        }).join('\\t')\r\n    }\r\n\r\n    function filterToSelection (cell, columnIndex) {\r\n        if (columnIndex >= selectionRange.startColumn &&\r\n            columnIndex <= selectionRange.endColumn) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    function headerRow (row, rowIndex) {\r\n        return (\r\n            <tr key={rowIndex} className={props.classes && props.classes.header && props.classes.header.tr}\r\n                style={props.styles && props.styles.header && props.styles.header.tr}>\r\n                {row.map((obj, ind) => headerCell(obj, ind))}\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    function headerCell (cell, colIndex) {\r\n        const columnIndex = props.numbered ? colIndex - 1 : colIndex\r\n        return (\r\n            <td key={columnIndex} className={props.classes && props.classes.header && props.classes.header.td}\r\n                style={Object.assign({}, props.styles && props.styles.header && props.styles.header.td,\r\n                    props.numbered && columnIndex === -1 && props.styles && props.styles.body && props.styles.body.numbered,\r\n                    {\r\n                        backgroundColor: columnIndex <= hover.column &&\r\n                        columnIndex >= hover.column\r\n                            ? props.hoverHeaderAndNumberedColor\r\n                            : null\r\n                    })}\r\n                onMouseDown={(event) => gridMouseDown(event, null, columnIndex)}\r\n                onMouseMove={(event) => gridMouseMove(event, null, columnIndex)}>\r\n                {cell}\r\n            </td>\r\n        )\r\n    }\r\n\r\n    function bodyRow (row, rowIndex) {\r\n        return (\r\n            <tr key={rowIndex} className={props.classes && props.classes.header && props.classes.body.tr}\r\n                style={props.styles && props.styles.body && props.styles.body.tr}>\r\n                {props.numbered &&\r\n                    <FrozenColumnTd className={props.classes && props.classes.header && props.classes.body.td}\r\n                        style={Object.assign({}, props.styles && props.styles.body && props.styles.body.td,\r\n                            props.styles && props.styles.body && props.styles.body.numbered,\r\n                            {\r\n                                backgroundColor: rowIndex <= hover.row &&\r\n                                rowIndex >= hover.row\r\n                                    ? props.hoverHeaderAndNumberedColor : null\r\n                            })}\r\n                        onMouseDown={(event) => gridMouseDown(event, rowIndex, null)}\r\n                        onMouseMove={(event) => gridMouseMove(event, rowIndex, null)}>\r\n                        {rowIndex - props.numberedOffset}\r\n                    </FrozenColumnTd>\r\n                }\r\n                {row.map((obj, ind) => bodyCell(obj, ind, rowIndex))}\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    function bodyCell (cell, columnIndex, rowIndex) {\r\n        const Td = frozenColumns && columnIndex < frozenColumns ? FrozenColumnTd : ColumnTd\r\n        if (editState.row === rowIndex && editState.column === columnIndex) {\r\n            return (\r\n                <ColumnTd key={columnIndex} className={props.classes && props.classes.body && props.classes.body.edit}\r\n                    style={Object.assign({}, props.styles && props.styles.body && props.styles.body.edit,\r\n                        {\r\n                            padding: '0px'\r\n                        })}\r\n                    onMouseMove={(event) => gridMouseMove(event, rowIndex, columnIndex)}>\r\n                    {EditCellComponent\r\n                        ? <EditCellComponent\r\n                            editorRef={editorRef}\r\n                            editorValue={editState.current}\r\n                            onChange={value => setEdit({ ...editState, current: value })}\r\n                            closeEditor={closeEditor}\r\n                            onKeyDown={editorKeyDown}\r\n                            {...cell}></EditCellComponent>\r\n                        : <input style={props.styles && props.styles.body && props.styles.body.edit}\r\n                            ref={editorRef}\r\n                            type='text'\r\n                            value={editState.current}\r\n                            onChange={(event) => setEdit({ ...editState, current: event.target.value })}\r\n                            onKeyDown={editorKeyDown} />}\r\n                </ColumnTd>\r\n            )\r\n        } else {\r\n            return (\r\n                <Td key={columnIndex} className={props.classes && props.classes.body && props.classes.body.td}\r\n                    style={Object.assign({}, props.styles && props.styles.body && props.styles.body.td,\r\n                        {\r\n                            backgroundColor: rowIndex <= selectionRange.endRow &&\r\n                            rowIndex >= selectionRange.startRow &&\r\n                            columnIndex <= selectionRange.endColumn &&\r\n                            columnIndex >= selectionRange.startColumn\r\n                                ? rowIndex === initialSelectionCell.row &&\r\n                            columnIndex === initialSelectionCell.column\r\n                                    ? props.highlightInitialColor\r\n                                    : props.highlightColor : null\r\n                        })}\r\n                    onMouseMove={(event) => gridMouseMove(event, rowIndex, columnIndex)}\r\n                    onMouseDown={(event) => gridMouseDown(event, rowIndex, columnIndex)}\r\n                    onMouseUp={(event) => gridMouseUp(event, rowIndex, columnIndex)}>\r\n                    {CellComponent ? <CellComponent {...cell} /> : cell}\r\n                </Td>\r\n            )\r\n        }\r\n    }\r\n\r\n    function footerRow (row, rowIndex) {\r\n        return (\r\n            <tr key={rowIndex} className={props.classes && props.classes.footer && props.classes.footer.tr}\r\n                style={props.styles && props.styles.footer && props.styles.footer.tr}>\r\n                {row.map((obj, ind) => footerCell(obj, ind, rowIndex))}\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    function footerCell (cell, columnIndex, rowIndex) {\r\n        return (\r\n            <td key={columnIndex} data={columnIndex} className={props.classes && props.classes.footer && props.classes.footer.td}\r\n                style={Object.assign({}, props.styles && props.styles.footer && props.styles.footer.td,\r\n                    {\r\n                        backgroundColor: columnIndex <= selectionRange.endColumn &&\r\n                        columnIndex >= selectionRange.startColumn &&\r\n                        rowIndex <= selectionRange.endRow &&\r\n                        rowIndex >= selectionRange.startRow\r\n                            ? props.highlightColor\r\n                            : null\r\n                    })}>\r\n                {cell}\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        // overflowX: 'auto' for freezing columns\r\n        <div style={{ width: '100%', position: editState.row !== undefined && editState.column === 0 && 'relative' }}\r\n            onKeyDown={componentKeyDown}\r\n            onKeyUp={componentKeyUp}>\r\n            <textarea ref={selectionRef}\r\n                type='text'\r\n                value={selection}\r\n                style={{ position: 'fixed', zIndex: -1000, opacity: 0 }}\r\n                readOnly\r\n                onKeyDown={selectionKeyDown}\r\n                onBlur={shouldHandleBlur ? selectionBlurred : undefined}\r\n                onPaste={selectionPaste} />\r\n            <table className={props.className}\r\n                style={Object.assign({}, { cursor: 'cell' }, props.style)}\r\n                onMouseUp={tableMouseUp}\r\n                onMouseLeave={() => {\r\n                    setHover({})\r\n                }}>\r\n                {props.header &&\r\n                    <thead className={props.classes && props.classes.thead}\r\n                        style={props.styles && props.styles.thead}>\r\n                        {props.header.map(headerRow)}\r\n                    </thead>\r\n                }\r\n                {body &&\r\n                    <tbody className={props.classes && props.classes.tbody}\r\n                        style={props.styles && props.styles.tbody}>\r\n                        {body.map(bodyRow)}\r\n                    </tbody>\r\n                }\r\n                {props.footer &&\r\n                    <tfoot className={props.classes && props.classes.tfoot}\r\n                        style={props.styles && props.styles.tfoot}>\r\n                        {props.footer.map(footerRow)}\r\n                    </tfoot>\r\n                }\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst StyledLine = styled.div`\r\n    padding-left: 1rem;\r\n`\r\n\r\nexport default function Graph (props) {\r\n    const {\r\n        columns,\r\n        columnColorObject,\r\n        rows,\r\n        generatorSettings\r\n    } = props\r\n    const left = parseInt(generatorSettings.left || 0, 10)\r\n    const right = parseInt(generatorSettings.right || 10, 10)\r\n    const labels = []\r\n    let iteration = -1 * left\r\n    const xAxisLabel = columns.length === 2\r\n    while (iteration <= right) {\r\n        if (xAxisLabel) {\r\n            labels.push(rows[iteration + left][0])\r\n        } else {\r\n            labels.push(iteration)\r\n        }\r\n        iteration++\r\n    }\r\n    const datasets = columns.map((column, index) => {\r\n        return {\r\n            label: column,\r\n            lineTension: 0,\r\n            fill: false,\r\n            backgroundColor: columnColorObject[column],\r\n            borderColor: columnColorObject[column],\r\n            pointBorderColor: columnColorObject[column],\r\n            pointBackgroundColor: columnColorObject[column],\r\n            data: rows.map(i => i[index]),\r\n            hidden: index !== columns.length - 1\r\n        }\r\n    })\r\n    const graphData = {\r\n        labels,\r\n        datasets\r\n    }\r\n    return (\r\n        <StyledLine>\r\n            <Line redraw={true} data={graphData} />\r\n        </StyledLine>\r\n    )\r\n}\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TopBar = styled.div`\r\n    width: 100%;\r\n    cursor: pointer;\r\n`\r\n\r\nexport default function Accordion (props: {\r\n    label: string,\r\n    expanded: boolean,\r\n    toggle: Function\r\n}) {\r\n    const { className, label, expanded, toggle } = props\r\n    return (\r\n        <div className={className}>\r\n            <TopBar onClick={() => toggle()}>\r\n                {label}\r\n            </TopBar>\r\n            {expanded && props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport premade from 'utils/premade.json'\r\nimport StyledInput from 'components/StyledInput'\r\nimport Accordion from 'components/Accordion'\r\n\r\nconst StyledFunctionSearch = styled.div`\r\n    padding: 4px 0px;\r\n    background: ${styles.extraLightGray};\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    box-shadow: 0px 4px 6px 4px #aaa;\r\n    border-radius: 6px;\r\n`\r\n\r\nconst Title = styled.div`\r\n    padding-left: 4px;\r\n    width: 500px;\r\n    margin: 4px;\r\n    font-size: 1.4rem;\r\n    font-weight: bold;\r\n`\r\n\r\nconst TitleSection = styled.div`\r\n    padding-top: 4px;\r\n    display: flex;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Close = styled.div`\r\n    width: 100%;\r\n    padding: 4px;\r\n    text-align: right;\r\n    i {\r\n        font-size: 2rem;\r\n        border-radius: 20px;\r\n        :hover {\r\n            background: white;\r\n        }\r\n    }\r\n`\r\n\r\nconst StyledItem = styled.div`\r\n    display: flex;\r\n    padding: 4px;\r\n    a {\r\n        color: black;\r\n        text-decoration: none;\r\n    }\r\n    i {\r\n        font-weight: bold;\r\n        color: ${styles.extraLightGray};\r\n    }\r\n    :hover {\r\n        i {\r\n            color: red;\r\n        }\r\n    }\r\n`\r\n\r\nconst DeleteButton = styled.div`\r\n    i {\r\n        cursor: pointer;\r\n        font-size: 1rem;\r\n        border-radius: 5px;\r\n        padding-top: 2px;\r\n        :hover {\r\n            position: relative;\r\n            ::after {\r\n                font-family: 'Ubuntu', sans-serif;\r\n                font-weight: bold;\r\n                content: \"DELETE\";\r\n                position: absolute;\r\n                top: -2px;\r\n                right: -8px;\r\n                background-color: ${styles.yellow};\r\n                border-radius: 15px;\r\n                padding: 5px 25px 5px 10px;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Label = styled.div`\r\n    width: 100%;\r\n    a {\r\n        padding: 6px;\r\n        border-radius: 10px;\r\n        cursor: pointer;\r\n        :hover {\r\n            background: ${styles.lightYellow};\r\n        }\r\n    }\r\n`\r\n\r\nconst SubSection = styled.div`\r\n    font-weight: bold;\r\n    padding: 8px;\r\n    font-size: 1.2rem;\r\n`\r\n\r\nconst NoLocal = styled.div`\r\n    padding: 6px;\r\n`\r\n\r\nconst SearchInput = styled(StyledInput)`\r\n    margin: 4px;\r\n    width: 264px;\r\n    margin-bottom: 14px;\r\n`\r\n\r\nconst CategoryLabel = styled.div`\r\n    padding: 6px;\r\n    font-weight: bold;\r\n    padding-left: 8px;\r\n    background-color: ${styles.lightGray};\r\n`\r\n\r\nfunction escapeRegExp (string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n\r\nfunction score ({ regexArray, name, url, category, notes }) {\r\n    let score = 0\r\n    regexArray.forEach(regex => {\r\n        score += (name.match(regex) || { length: 0 }).length * 100\r\n        score += (category.match(regex) || { length: 0 }).length * 50\r\n        score += (url.match(regex) || { length: 0 }).length * 10\r\n        score += (notes.match(regex) || { length: 0 }).length * 1\r\n    })\r\n    return score\r\n}\r\n\r\nfunction sortByScore (a, b) {\r\n    if (a.sort > b.sort) {\r\n        return -1\r\n    } else if (a.sort < b.sort) {\r\n        return 1\r\n    } else {\r\n        if (a.name < b.name) {\r\n            return -1\r\n        } else {\r\n            return 1\r\n        }\r\n    }\r\n}\r\n\r\n// Takes in the functions object and returns an array of functions in order of relevance\r\nfunction filterWithSort ({ listObject, filter }) {\r\n    const keys = Object.keys(listObject)\r\n    const regexArray = []\r\n    // Try to use the filter as a regular if it's valid, otherwise use it as a string literal\r\n    // And ignore case\r\n    filter.split(' ').forEach(filterPart => {\r\n        let regex\r\n        try {\r\n            regex = new RegExp(filterPart, 'gi')\r\n        } catch (err) {\r\n            regex = new RegExp(escapeRegExp(filterPart), 'gi')\r\n        }\r\n        regexArray.push(regex)\r\n    })\r\n\r\n    const equationCategories = {}\r\n    keys.forEach(key => {\r\n        const equation = listObject[key]\r\n        const sort = score({ name: key, url: equation.url, category: equation.category || '', notes: equation.notes || '', regexArray })\r\n        if (sort > 0) {\r\n            if (!equationCategories[equation.category || 'None']) {\r\n                equationCategories[equation.category || 'None'] = []\r\n            }\r\n            equationCategories[equation.category || 'None'].push({\r\n                name: key,\r\n                url: equation.url,\r\n                category: equation.category,\r\n                notes: equation.notes,\r\n                sort\r\n            })\r\n        }\r\n    }, [])\r\n    const res = []\r\n    Object.keys(equationCategories).forEach(key => {\r\n        res.push({ name: key, equations: equationCategories[key].sort(sortByScore) })\r\n    })\r\n    return res\r\n}\r\n\r\nfunction SelfStateAccordion (props) {\r\n    const { label } = props\r\n    const [isOpen, setIsOpen] = useState(true)\r\n\r\n    return <Accordion label={label} expanded={isOpen} toggle={() => setIsOpen(!isOpen)}>\r\n        {props.children}\r\n    </Accordion>\r\n}\r\n\r\nexport default function FunctionSearch (props) {\r\n    const { toggleSearch, deleteLocalFunction, localFunctions } = props\r\n    const [filter, setFilter] = useState('')\r\n\r\n    const searchElement = useRef()\r\n\r\n    useEffect(() => {\r\n        searchElement.current.focus()\r\n    }, [])\r\n\r\n    const filteredLocal = filterWithSort({ filter, listObject: localFunctions })\r\n    const filteredPremade = filterWithSort({ filter, listObject: premade })\r\n\r\n    function renderLocalEquation (equation) {\r\n        return (\r\n            <StyledItem key={equation.name}>\r\n                <Label>\r\n                    <Link to={equation.url}>{equation.name}</Link>\r\n                </Label>\r\n                <DeleteButton onClick={() => {\r\n                    deleteLocalFunction(equation.name)\r\n                }}>\r\n                    <i className='material-icons'>close</i>\r\n                </DeleteButton>\r\n            </StyledItem>\r\n        )\r\n    }\r\n\r\n    function renderLocalCategory ({ name, equations }) {\r\n        return (\r\n            <SelfStateAccordion key={name} label={<CategoryLabel>Category: {name}</CategoryLabel>}>\r\n                {equations.map(renderLocalEquation)}\r\n            </SelfStateAccordion>\r\n        )\r\n    }\r\n\r\n    function renderPremadeEquation (equation) {\r\n        return (\r\n            <StyledItem key={equation.name}>\r\n                <Label>\r\n                    <Link to={equation.url}>{equation.name}</Link>\r\n                </Label>\r\n            </StyledItem>\r\n        )\r\n    }\r\n\r\n    function renderPremadeCategory ({ name, equations }) {\r\n        return (\r\n            <SelfStateAccordion key={name} label={<CategoryLabel>Category: {name}</CategoryLabel>}>\r\n                {equations.map(renderPremadeEquation)}\r\n            </SelfStateAccordion>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <StyledFunctionSearch>\r\n            <TitleSection onClick={toggleSearch}>\r\n                <Title>\r\n                    Search Vault\r\n                </Title>\r\n                <Close onClick={toggleSearch}>\r\n                    <i className='material-icons'>close</i>\r\n                </Close>\r\n            </TitleSection>\r\n            <SearchInput\r\n                ref={searchElement}\r\n                placeholder='Filter'\r\n                value={filter}\r\n                onChange={event => setFilter(event.target.value)}\r\n            />\r\n            {filteredLocal.length === 0\r\n                ? <NoLocal>Your personal vault is empty</NoLocal>\r\n                : null\r\n            }\r\n            {filteredLocal.map(renderLocalCategory)}\r\n            {filteredPremade.length > 0\r\n                ? <SubSection>Standard Arsenal</SubSection>\r\n                : null\r\n            }\r\n            {filteredPremade.map(renderPremadeCategory)}\r\n        </StyledFunctionSearch>\r\n    )\r\n}\r\n","import * as React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { passToHistory } from 'utils/qs'\r\nimport getColor from 'utils/math/getColor'\r\nimport { formatNumber, recursiveSolve, solveWithAddedContext } from 'utils/math'\r\nimport premade from 'utils/premade.json'\r\nimport { getLocalStorage, setLocalStorage } from 'utils/localStorage'\r\nimport { withQsContext } from 'containers/qsContext'\r\nimport MathML from 'components/MathML'\r\nimport ObjectCreator from 'components/ObjectCreator'\r\nimport TableGenerator from 'components/TableGenerator'\r\nimport RightFloater from 'components/RightFloater'\r\nimport SearchButton from 'components/buttons/Search'\r\nimport SaveButton from 'components/buttons/Save'\r\nimport MaterialButton from 'components/buttons/Material'\r\nimport ForgeButton from 'components/buttons/Forge'\r\nimport CommandButton from 'components/buttons/Command'\r\nimport ReviewButton from 'components/buttons/Review'\r\nimport DataGrid from 'components/DataGrid'\r\nimport Graph from 'components/Graph'\r\nimport FunctionSearch from 'components/FunctionSearch'\r\nimport Accordion from 'components/Accordion'\r\nimport * as styles from 'styles'\r\n\r\nconst StyledRoot = styled.div`\r\n    display: flex;\r\n    min-height: 1px;\r\n`\r\n\r\nconst StyledMain = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media (max-width: 800px) {\r\n      width: 100% !important;\r\n    }\r\n    display: flex;\r\n    overflow: auto;\r\n`\r\n\r\nconst StyledSearch = styled.div`\r\n    position: fixed;\r\n    width: 0px;\r\n    right: 0px;\r\n    top: 64px;\r\n    bottom: 0px;\r\n    transition: width 150ms ease-in-out;\r\n`\r\n\r\nconst AccordionContents = styled.div`\r\n    padding: 5px 60px;\r\n    @media (max-width: 800px) {\r\n      padding-left: 5px;\r\n      padding-right: 5px;\r\n    }\r\n`\r\n\r\nconst StyledMaterialSection = styled.div`\r\n`\r\n\r\nconst StyledObjectCreator = styled.div`\r\n`\r\n\r\nconst StyledMath = styled.div`\r\n`\r\n\r\nconst StyledGraph = styled.div`\r\n`\r\n\r\nconst StyledTableScrollableLimit = styled.div`\r\n    width: 100%;\r\n    overflow: auto;\r\n`\r\n\r\nconst StyledTableScrollable = styled.div`\r\n`\r\n\r\nconst StyledDataGrid = styled.div`\r\n    input {\r\n      background-color: ${styles.yellow};\r\n      ${styles.inputStyle}\r\n    }\r\n`\r\n\r\nconst Section = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nconst Title = styled.div`\r\n    font-size: 1.5rem;\r\n    padding-left: 1rem;\r\n    color: ${styles.primaryColor};\r\n    font-weight: bold;\r\n`\r\n// text-shadow: -1px 1px 2px #000;\r\n\r\nconst StyledSolution = styled.div`\r\n    font-weight: bold;\r\n    text-align: center;\r\n    padding: 20px;\r\n`\r\n\r\nconst MenuButton = styled.div`\r\n    padding: 5px;\r\n`\r\n\r\nconst StyledText = styled.div`\r\n    padding: 5px;\r\n`\r\n\r\nclass Root extends React.Component {\r\n    // interface State {\r\n    //   table: Array<Array<any>>,\r\n    //   showSearch: boolean\r\n    // }\r\n    state = {\r\n        table: [\r\n            []\r\n        ],\r\n        initialSelectionCell: {}\r\n    }\r\n\r\n    componentWillMount () {\r\n        const localStorageFunctions = this.getLocalStorageFunctions()\r\n        const accordionState = {\r\n            showSearch: true,\r\n            showMaterial: true,\r\n            showForge: true,\r\n            showReview: true,\r\n            showCommand: true,\r\n            ...this.getLocalStorageAccordionState()\r\n        }\r\n        let category = ''\r\n        if (this.props.text) {\r\n            if (localStorageFunctions[this.props.text]) {\r\n                category = localStorageFunctions[this.props.text].category\r\n            } else if (premade[this.props.text]) {\r\n                category = premade[this.props.text].category\r\n            }\r\n        }\r\n        let notes = ''\r\n        if (this.props.text) {\r\n            if (localStorageFunctions[this.props.text]) {\r\n                notes = localStorageFunctions[this.props.text].notes\r\n            } else if (premade[this.props.text]) {\r\n                notes = premade[this.props.text].notes\r\n            }\r\n        }\r\n        this.setState({\r\n            table: this.generateTable(this.props),\r\n            localStorageFunctions,\r\n            accordionState,\r\n            notes,\r\n            category\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps (nextProps) {\r\n        const localStorageFunctions = this.getLocalStorageFunctions()\r\n        const { info = {}, generatorSettings = {}, columnSettings = {} } = nextProps\r\n        const missingVariables = info.fullMissingContext || []\r\n        const currentProps = this.props\r\n        const currentMissingVariables = currentProps.info.missingVariables || []\r\n        if (currentProps.info.solvableEquation !== info.solvableEquation ||\r\n            currentProps.generatorSettings.left !== generatorSettings.left ||\r\n            currentProps.generatorSettings.right !== generatorSettings.right ||\r\n            Object.keys(currentProps.columnSettings).some(key => {\r\n                return typeof currentProps.columnSettings[key] !== typeof columnSettings[key] ||\r\n                    currentProps.columnSettings[key].start !== columnSettings[key].start ||\r\n                    currentProps.columnSettings[key].interval !== columnSettings[key].interval\r\n            }) ||\r\n            currentMissingVariables.some(previous => !missingVariables.includes(previous)) ||\r\n            missingVariables.some(next => !currentMissingVariables.includes(next))) {\r\n            const newState = {\r\n                table: this.generateTable(nextProps),\r\n                localStorageFunctions\r\n            }\r\n            if (this.props.text !== nextProps.text) {\r\n                if (!nextProps.text) {\r\n                    newState.category = ''\r\n                } else if (localStorageFunctions[nextProps.text]) {\r\n                    newState.category = localStorageFunctions[nextProps.text].category || ''\r\n                } else if (premade[nextProps.text]) {\r\n                    newState.category = premade[nextProps.text].category || ''\r\n                }\r\n            }\r\n            if (this.props.text !== nextProps.text) {\r\n                if (!nextProps.text) {\r\n                    newState.notes = ''\r\n                } else if (localStorageFunctions[nextProps.text]) {\r\n                    newState.notes = localStorageFunctions[nextProps.text].notes || ''\r\n                } else if (premade[nextProps.text]) {\r\n                    newState.notes = premade[nextProps.text].notes || ''\r\n                }\r\n            }\r\n            this.setState(newState)\r\n        }\r\n    }\r\n\r\n    generateTable ({ info, columnSettings, generatorSettings }) {\r\n        const missingVariables = info.fullMissingContext || []\r\n        const { left = 0, right = 10 } = generatorSettings\r\n        const table = []\r\n        const generatorColumns = missingVariables.map(column => {\r\n            let start = 0\r\n            let interval = 1\r\n            if (columnSettings[column] && columnSettings[column].start) {\r\n                start = columnSettings[column].start\r\n            }\r\n            if (columnSettings[column] && columnSettings[column].interval) {\r\n                interval = columnSettings[column].interval\r\n            }\r\n            return {\r\n                name: column,\r\n                start,\r\n                interval\r\n            }\r\n        })\r\n        const runner = {\r\n            iteration: -1 * parseInt(left, 10)\r\n        }\r\n        function calculateIteration (column) {\r\n            return parseFloat(column.start) + runner.iteration * parseFloat(column.interval)\r\n        }\r\n        while (runner.iteration <= parseInt(right, 10)) {\r\n            const simpleContext = {}\r\n            const cells = generatorColumns.map(column => {\r\n                const res = calculateIteration(column)\r\n                simpleContext[column.name] = res\r\n                return Number(res.toFixed(10))\r\n            })\r\n            const solution = Number(parseFloat(solveWithAddedContext({ text: info.solvableEquation, simpleContext }).solution || 0).toFixed(10))\r\n            table.push([...cells, solution])\r\n            runner.iteration++\r\n        }\r\n        return table\r\n    }\r\n\r\n    passCleanedSettingsToHistory (oldHistoryObject, newHistoryObject) {\r\n        const cleanedHistoryObject = {\r\n            history: oldHistoryObject.history,\r\n            text: oldHistoryObject.text,\r\n            category: oldHistoryObject.category,\r\n            notes: oldHistoryObject.notes,\r\n            context: { ...oldHistoryObject.context },\r\n            columnSettings: { ...oldHistoryObject.columnSettings },\r\n            generatorSettings: { ...oldHistoryObject.generatorSettings },\r\n            pushToHistory: (!oldHistoryObject.text && newHistoryObject.text) || (oldHistoryObject.text && !newHistoryObject.text)\r\n        }\r\n\r\n        if (newHistoryObject.columnSettings) {\r\n            cleanedHistoryObject.columnSettings = { ...newHistoryObject.columnSettings }\r\n            cleanedHistoryObject.pushToHistory = false\r\n        }\r\n\r\n        if (newHistoryObject.generatorSettings) {\r\n            cleanedHistoryObject.generatorSettings = { ...newHistoryObject.generatorSettings }\r\n            cleanedHistoryObject.pushToHistory = false\r\n        }\r\n\r\n        if (typeof newHistoryObject.category === 'string') {\r\n            cleanedHistoryObject.category = newHistoryObject.category\r\n            cleanedHistoryObject.pushToHistory = false\r\n        }\r\n\r\n        if (typeof newHistoryObject.notes === 'string') {\r\n            cleanedHistoryObject.notes = newHistoryObject.notes\r\n            cleanedHistoryObject.pushToHistory = false\r\n        }\r\n\r\n        if (newHistoryObject.text || newHistoryObject.context || newHistoryObject.unit) {\r\n            const info = recursiveSolve({ text: newHistoryObject.text, context: newHistoryObject.context, unit: newHistoryObject.unit })\r\n            Object.keys(cleanedHistoryObject.columnSettings).forEach(key => {\r\n                if (!info.fullMissingContext.includes(key)) {\r\n                    delete cleanedHistoryObject.columnSettings[key]\r\n                }\r\n            })\r\n            cleanedHistoryObject.text = newHistoryObject.text\r\n            cleanedHistoryObject.unit = newHistoryObject.unit\r\n            cleanedHistoryObject.context = { ...newHistoryObject.context }\r\n        }\r\n        passToHistory({ ...cleanedHistoryObject })\r\n    }\r\n\r\n    colorVariables ({ variables, columnColorObject }) {\r\n        return variables.map(variable => {\r\n            return <div key={variable} style={{ fontWeight: 'bold', color: columnColorObject[variable] }}>{variable}</div>\r\n        })\r\n    }\r\n\r\n    toggleHelp = () => {\r\n        this.setState({ showHelp: !this.state.showHelp })\r\n    }\r\n\r\n    toggleSearch = () => {\r\n        this.setLocalStorageAccordionState({ ...this.state.accordionState, showSearch: !this.state.accordionState.showSearch })\r\n    }\r\n\r\n    toggleMaterial = () => {\r\n        this.setLocalStorageAccordionState({ ...this.state.accordionState, showMaterial: !this.state.accordionState.showMaterial })\r\n    }\r\n\r\n    toggleForge = () => {\r\n        this.setLocalStorageAccordionState({ ...this.state.accordionState, showForge: !this.state.accordionState.showForge })\r\n    }\r\n\r\n    toggleReview = () => {\r\n        this.setLocalStorageAccordionState({ ...this.state.accordionState, showReview: !this.state.accordionState.showReview })\r\n    }\r\n\r\n    toggleWield = () => {\r\n        this.setLocalStorageAccordionState({ ...this.state.accordionState, showWield: !this.state.accordionState.showWield })\r\n    }\r\n\r\n    toggleCommand = () => {\r\n        this.setLocalStorageAccordionState({ ...this.state.accordionState, showCommand: !this.state.accordionState.showCommand })\r\n    }\r\n\r\n    getLocalStorageFunctions = () => {\r\n        return getLocalStorage('localFunctions') || {}\r\n    }\r\n\r\n    setLocalStorageFunctions = (localStorageFunctions) => {\r\n        setLocalStorage('localFunctions', localStorageFunctions)\r\n        this.setState({ localStorageFunctions })\r\n    }\r\n\r\n    getLocalStorageAccordionState = () => {\r\n        return getLocalStorage('accordion')\r\n    }\r\n\r\n    setLocalStorageAccordionState = (accordionState) => {\r\n        setLocalStorage('accordion', accordionState)\r\n        this.setState({ accordionState })\r\n    }\r\n\r\n    saveLocalFunction = ({ history, name, category, notes }) => {\r\n        const localStorageFunctions = this.getLocalStorageFunctions()\r\n        localStorageFunctions[name] = {\r\n            category,\r\n            notes,\r\n            date: Date.now(),\r\n            url: history.location.path || '' + history.location.search || ''\r\n        }\r\n        this.setLocalStorageFunctions(localStorageFunctions)\r\n    }\r\n\r\n    deleteLocalFunction = (name) => {\r\n        const localStorageFunctions = this.getLocalStorageFunctions()\r\n        delete localStorageFunctions[name]\r\n        this.setLocalStorageFunctions(localStorageFunctions)\r\n    }\r\n\r\n    setInitialSelectionCell = (selection) => {\r\n        this.setState({ ...this.state, initialSelectionCell: selection })\r\n    }\r\n\r\n    render () {\r\n        const { info, text, context, columnSettings, generatorSettings, history } = this.props\r\n        const historyObject = { history, text, context, generatorSettings, columnSettings }\r\n\r\n        const {\r\n            table,\r\n            category,\r\n            notes,\r\n            localStorageFunctions,\r\n            accordionState: {\r\n                showSearch,\r\n                showMaterial,\r\n                showForge,\r\n                showReview,\r\n                // showWield,\r\n                showCommand\r\n            }\r\n        } = this.state\r\n        const solution = info.resolution.solution\r\n        const mathml = info.mathml\r\n        const missingVariables = info.fullMissingContext.filter(i => i !== text)\r\n        const columnColorObject = missingVariables.reduce((acc, current) => {\r\n            const res = { ...acc }\r\n            res[current] = getColor(current)\r\n            return res\r\n        }, {})\r\n        columnColorObject[text] = getColor(text)\r\n        return (\r\n            <StyledRoot>\r\n                <StyledMain style={{ width: showSearch ? 'calc(100% - 300px)' : '100%' }}>\r\n                    <Accordion\r\n                        expanded={showForge}\r\n                        toggle={this.toggleForge}\r\n                        label={\r\n                            <Section>\r\n                                <ForgeButton />\r\n                                <Title>Build Equation</Title>\r\n                            </Section>\r\n                        }>\r\n                        <AccordionContents>\r\n                            <StyledObjectCreator>\r\n                                <ObjectCreator\r\n                                    info={{ ...info, name: '' }}\r\n                                    onContextChange={({ text, unit, context }) => this.passCleanedSettingsToHistory(historyObject,\r\n                                        {\r\n                                            text,\r\n                                            unit,\r\n                                            context\r\n                                        })}\r\n                                    category={category}\r\n                                    onCategoryChange={event => {\r\n                                        this.setState({ category: event.target.value })\r\n                                    }}\r\n                                    notes={notes}\r\n                                    onNotesChange={event => {\r\n                                        this.setState({ notes: event.target.value })\r\n                                    }}\r\n                                />\r\n                                {solution &&\r\n                                    <StyledSolution style={{ color: columnColorObject[text] }}>\r\n                                        {text} = {formatNumber(solution)}\r\n                                    </StyledSolution>\r\n                                }\r\n                            </StyledObjectCreator>\r\n                        </AccordionContents>\r\n                    </Accordion>\r\n                    <Accordion\r\n                        expanded={showReview}\r\n                        toggle={this.toggleReview}\r\n                        label={\r\n                            <Section>\r\n                                <ReviewButton />\r\n                                <Title>Review</Title>\r\n                            </Section>\r\n                        }>\r\n                        <AccordionContents>\r\n                            <StyledMath>\r\n                                {mathml\r\n                                    ? <MathML title={text} mathml={mathml} />\r\n                                    : <StyledText>\r\n                                        Define your equation. Go to <ForgeButton style={{ height: 40, width: 40, display: 'inline' }} onClick={this.toggleForge} />Build Equation\r\n                                        <br />\r\n                                        <br />\r\n                                    </StyledText>\r\n                                }\r\n                            </StyledMath>\r\n                        </AccordionContents>\r\n                    </Accordion>\r\n                    <Accordion\r\n                        expanded={showMaterial}\r\n                        toggle={this.toggleMaterial}\r\n                        label={\r\n                            <Section>\r\n                                <MaterialButton />\r\n                                <Title>Define Variables</Title>\r\n                            </Section>\r\n                        }>\r\n                        <AccordionContents>\r\n                            <StyledMaterialSection>\r\n                                <StyledTableScrollableLimit>\r\n                                    <StyledTableScrollable\r\n                                        style={{\r\n                                            width: missingVariables.length ? ((missingVariables.length + 1) * (styles.materialColumnWidth + 4) + styles.materialIterationWidth + 6) : '100%'\r\n                                        }}>\r\n                                        {missingVariables.length > 0 &&\r\n                                            <TableGenerator\r\n                                                info={info}\r\n                                                columns={missingVariables}\r\n                                                columnColorObject={columnColorObject}\r\n                                                columnSettings={columnSettings}\r\n                                                settings={generatorSettings}\r\n                                                onGeneratorSettingChange={settings => this.passCleanedSettingsToHistory(historyObject,\r\n                                                    {\r\n                                                        generatorSettings: settings\r\n                                                    })}\r\n                                                onColumnSettingChange={settings => this.passCleanedSettingsToHistory(historyObject,\r\n                                                    {\r\n                                                        columnSettings: settings\r\n                                                    })}\r\n                                                tableGenerated={table => this.setState({ table })} />\r\n                                        }\r\n                                        {missingVariables.length > 0\r\n                                            ? <StyledDataGrid>\r\n                                                <DataGrid header={[['Iteration', ...this.colorVariables({ variables: [...missingVariables, text], columnColorObject })]]}\r\n                                                    numbered\r\n                                                    numberedOffset={generatorSettings.left || 0}\r\n                                                    body={table}\r\n                                                    styles={{\r\n                                                        header: {\r\n                                                            td: { textAlign: 'right' }\r\n                                                        },\r\n                                                        body: {\r\n                                                            edit: {\r\n                                                                width: styles.materialColumnWidth - 10\r\n                                                            },\r\n                                                            td: {\r\n                                                                width: styles.materialColumnWidth,\r\n                                                                textAlign: 'right',\r\n                                                                borderRadius: 2,\r\n                                                                boxShadow: '0px 0px 3px 2px #CCC'\r\n                                                            },\r\n                                                            numbered: { width: styles.materialIterationWidth, textAlign: 'left' }\r\n                                                        }\r\n                                                    }}\r\n                                                    highlightColor='#bfa'\r\n                                                    highlightInitialColor='#7f7'\r\n                                                    hoverHeaderAndNumberedColor='#fc04'\r\n                                                    initialSelectionCell={this.state.initialSelectionCell}\r\n                                                    setInitialSelectionCell={this.setInitialSelectionCell}\r\n                                                    callback={(row, column, data) => {\r\n                                                        table[row][column] = data\r\n                                                        this.setState({ table })\r\n                                                    }} />\r\n                                            </StyledDataGrid>\r\n                                            : <div>\r\n                                                Start by naming your problem. Go to <ForgeButton style={{ height: 40, width: 40, display: 'inline' }} onClick={this.toggleForge} />Build Equation\r\n                                                <br />\r\n                                                <br />\r\n                                                As you break things down, anything named that is left without a value can be defined here.\r\n                                                <br />\r\n                                                <br />\r\n                                            </div>\r\n                                        }\r\n                                    </StyledTableScrollable>\r\n                                </StyledTableScrollableLimit>\r\n                            </StyledMaterialSection>\r\n                        </AccordionContents>\r\n                    </Accordion>\r\n                    <Accordion\r\n                        expanded={showCommand}\r\n                        toggle={this.toggleCommand}\r\n                        label={\r\n                            <Section>\r\n                                <CommandButton />\r\n                                <Title>Graph</Title>\r\n                            </Section>\r\n                        }>\r\n                        <AccordionContents>\r\n                            <StyledGraph>\r\n                                {missingVariables.length > 0\r\n                                    ? <Graph\r\n                                        columns={[...missingVariables, text]}\r\n                                        columnColorObject={columnColorObject}\r\n                                        rows={table}\r\n                                        generatorSettings={generatorSettings} />\r\n                                    : <StyledText>\r\n                                        The graph uses numbers from <MaterialButton style={{ height: 40, width: 40, display: 'inline' }} onClick={this.toggleMaterial} /> Define Variables\r\n                                    </StyledText>\r\n                                }\r\n                            </StyledGraph>\r\n                        </AccordionContents>\r\n                    </Accordion>\r\n                </StyledMain>\r\n                <StyledSearch style={{ width: showSearch ? 300 : 0 }}>\r\n                    {showSearch && <FunctionSearch\r\n                        localFunctions={localStorageFunctions}\r\n                        deleteLocalFunction={this.deleteLocalFunction}\r\n                        toggleSearch={this.toggleSearch}\r\n                    />}\r\n                </StyledSearch>\r\n                <RightFloater style={{ display: 'flex' }}>\r\n                    <MenuButton>\r\n                        <SaveButton\r\n                            hover\r\n                            text={text}\r\n                            location={history.location}\r\n                            onClick={() => {\r\n                                this.saveLocalFunction({ history, name: text, category, notes })\r\n                            }} />\r\n                    </MenuButton>\r\n                    <MenuButton><SearchButton hover active={showSearch} onClick={this.toggleSearch} /></MenuButton>\r\n                </RightFloater>\r\n            </StyledRoot>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withQsContext(withRouter(Root))\r\n","import React from 'react'\r\nimport { recursiveSolve } from 'utils/math'\r\nimport { getFromHistory } from 'utils/qs'\r\n\r\nexport const withQsContext = Component => props => {\r\n    const qsContext = getFromHistory(props.history)\r\n    const info = recursiveSolve({ text: qsContext.text, context: qsContext.context, unit: qsContext.unit })\r\n    return <Component {...props} {...qsContext} info={info} />\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { formatNumber } from 'utils/math'\r\n\r\nconst StyledCell = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-width: 200px;\r\n    width: 200px;\r\n    margin: 2px;\r\n`\r\n\r\nconst Label = styled.div`\r\n    margin-left: 2px;\r\n    min-height: 1.2rem;\r\n`\r\n\r\nconst Value = styled.div`\r\n    margin-left: 2px;\r\n    text-align: right;\r\n`\r\n\r\nconst InheritedValue = styled.div`\r\n    color: gray;\r\n    margin-left: 2px;\r\n    text-align: right;\r\n`\r\n\r\nconst Solution = styled.div`\r\n    margin-right: 2px;\r\n    text-align: right;\r\n`\r\n\r\nexport default function Cell (props) {\r\n    const { value, info } = props\r\n    if (info) { // if there's info then it must be the root\r\n        const { solution } = props\r\n        return (\r\n            <StyledCell>\r\n                <Label>\r\n                    {value}\r\n                </Label>\r\n                <Solution>\r\n                    {formatNumber(solution)}\r\n                </Solution>\r\n            </StyledCell>\r\n        )\r\n    } else {\r\n        const { label, isInherited } = props\r\n        return (\r\n            <StyledCell>\r\n                <Label>\r\n                    {label}\r\n                </Label>\r\n                {isInherited\r\n                    ? <InheritedValue>\r\n                        {formatNumber(value)}\r\n                    </InheritedValue>\r\n                    : <Value>\r\n                        {value === '' ? 'undefined' : formatNumber(value)}\r\n                    </Value>\r\n                }\r\n            </StyledCell>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledAutocomplete = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n    position: relative;\r\n    width: 100%;\r\n`\r\n\r\nconst Suggestions = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n`\r\n\r\nconst SuggestionsWithHover = styled(Suggestions)`\r\n    div:hover {\r\n        background: lightblue;\r\n    }\r\n`\r\n\r\nconst StyledSuggestion = styled.div`\r\n    cursor: pointer;\r\n    background: lightgray;\r\n    padding: 4px;\r\n`\r\n\r\nfunction Suggestion (props) {\r\n    return (\r\n        <StyledSuggestion {...props} style={{ backgroundColor: props.active && 'lightblue' }}>\r\n            {props.id}\r\n        </StyledSuggestion>\r\n    )\r\n}\r\n\r\nfunction getSuggestions (options, textToMatch) {\r\n    const regex = new RegExp(textToMatch, 'i')\r\n    return options.filter(option => regex.test(option.id))\r\n}\r\n\r\nfunction handleKeyDown (event, state, setState, suggestions, onSelect) {\r\n    if (event.key === 'ArrowDown') {\r\n        if (state.activeIndex === undefined || state.activeIndex + 1 >= suggestions.length) {\r\n            setState({ isMouseControlled: false, activeIndex: 0 })\r\n        } else {\r\n            setState({ isMouseControlled: false, activeIndex: state.activeIndex + 1 })\r\n        }\r\n    }\r\n    if (event.key === 'ArrowUp') {\r\n        if (state.activeIndex === undefined) {\r\n            setState({ isMouseControlled: false, activeIndex: 0 })\r\n        } else if (state.activeIndex === 0) {\r\n            setState({ isMouseControlled: false, activeIndex: suggestions.length - 1 })\r\n        } else {\r\n            setState({ isMouseControlled: false, activeIndex: state.activeIndex - 1 })\r\n        }\r\n    }\r\n    if (event.key === 'Enter') {\r\n        if (!state.isMouseControlled && state.activeIndex !== undefined) {\r\n            event.stopPropagation()\r\n            onSelect(suggestions[state.activeIndex].id)\r\n        } else if (suggestions.length === 1) {\r\n            event.stopPropagation()\r\n            onSelect(suggestions[0].id)\r\n        }\r\n    }\r\n    if (event.key === 'Escape') {\r\n        if (!state.isMouseControlled || state.activeIndex !== undefined) {\r\n            setState({ isMouseControlled: true })\r\n        }\r\n    }\r\n}\r\n\r\nexport default function Autocomplete (props) {\r\n    const { className, editorRef, value, onChange, onSelect, options } = props\r\n\r\n    const [ suggestions, setSuggestions ] = useState([])\r\n\r\n    useEffect(() => {\r\n        setSuggestions(getSuggestions(options, value))\r\n    }, [ value, options ])\r\n\r\n    const [ state, setState ] = useState({ isMouseControlled: true })\r\n\r\n    return (\r\n        <StyledAutocomplete className={className} onMouseMove={() => {\r\n            if (state.isMouseControlled === false) {\r\n                setState({ isMouseControlled: true, activeIndex: state.activeIndex })\r\n            }\r\n        }}>\r\n            <StyledInput\r\n                value={value}\r\n                onChange={event => onChange(event.target.value)}\r\n                onKeyDown={event => handleKeyDown(event, state, setState, suggestions, onSelect)}\r\n                ref={editorRef}\r\n            />\r\n            {state.isMouseControlled\r\n                ? <SuggestionsWithHover>\r\n                    {suggestions.map(option => <Suggestion key={option.id} onClick={() => onSelect(option.id)} {...option}></Suggestion>)}\r\n                </SuggestionsWithHover>\r\n                : <Suggestions>\r\n                    {suggestions.map((option, index) => <Suggestion key={option.id} active={index === state.activeIndex} onClick={() => onSelect(option.id)} {...option}></Suggestion>)}\r\n                </Suggestions>\r\n            }\r\n        </StyledAutocomplete>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport ObjectCreator from 'components/ObjectCreator'\r\nimport Autocomplete from 'components/Autocomplete'\r\nimport { recursiveSolve, stripContext } from 'utils/math'\r\nimport { getEquationFromUrl } from 'utils/qs'\r\nimport premade from 'utils/premade.json'\r\n\r\nconst StyledEditCell = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Label = styled.div`\r\n`\r\n\r\nconst StyledAutocomplete = styled(Autocomplete)`\r\n    min-height: 1.2rem;\r\n    input {\r\n        font-size: 1rem;\r\n        width: 202px;\r\n        padding-left: 4px;\r\n        background-color: ${styles.inputFocus};\r\n        outline: none;\r\n        height: 40px;\r\n    }\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n    min-width: 202px;\r\n    width: 202px;\r\n    min-height: 1.2rem;\r\n    background-color: ${styles.inputFocus};\r\n    text-align: right;\r\n`\r\n\r\nconst Equation = styled.div`\r\n    position: absolute;\r\n    background-color: #f6f6ff;\r\n    left: 210px;\r\n    width: calc(100vw - 248px);\r\n    border-radius: 10px;\r\n    padding: 8px;\r\n    \r\n    @media (max-width:768px) {\r\n        left: 0px;\r\n        top: 45px;\r\n        width: calc(100vw - 28px);\r\n    }\r\n`\r\n\r\nconst EditActionBar = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst Section = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Clickable = styled.div`\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    color: ${styles.primaryColor};\r\n`\r\n\r\nfunction EditEquation (props) {\r\n    const {\r\n        editorValue,\r\n        editorRef,\r\n        onChange,\r\n        onKeyDown,\r\n        autocompleteOptions,\r\n        localFunctions,\r\n        saveNewFunction,\r\n        closeEditor\r\n    } = props\r\n\r\n    return (\r\n        <StyledEditCell onKeyDown={onKeyDown}>\r\n            <Equation>\r\n                <EditActionBar>\r\n                    <Section>\r\n                        <Clickable onClick={() => closeEditor()}>Save</Clickable>\r\n                        <Clickable onClick={() => closeEditor(false)}>Cancel</Clickable>\r\n                    </Section>\r\n                    <Section>\r\n                        <Clickable onClick={() => {\r\n                            saveNewFunction({\r\n                                name: editorValue.value,\r\n                                category: editorValue.category,\r\n                                context: editorValue.info.context,\r\n                                notes: editorValue.notes,\r\n                                text: editorValue.info.text,\r\n                                unit: editorValue.info.unit\r\n                            }, localFunctions)\r\n                            closeEditor()\r\n                        }}>Make Reusable</Clickable>\r\n                        <Clickable onClick={() => onChange({ ...editorValue, info: recursiveSolve({ text: '' }) })}>Clear</Clickable>\r\n                    </Section>\r\n                </EditActionBar>\r\n                <ObjectCreator\r\n                    info={{ ...editorValue.info, name: editorValue.value || '' }}\r\n                    onContextChange={info => onChange({ ...editorValue, info: recursiveSolve({ text: info.text, unit: info.unit, context: stripContext(info.context) }) })}\r\n                    onCategoryChange={event => onChange({ ...editorValue, category: event.target.value })}\r\n                    onNotesChange={event => onChange({ ...editorValue, notes: event.target.value })}\r\n                />\r\n            </Equation>\r\n            <StyledAutocomplete\r\n                editorRef={editorRef}\r\n                value={editorValue.value}\r\n                onChange={value => onChange({ ...editorValue, value })}\r\n                onSelect={functionName => {\r\n                    let newInfo\r\n                    if (localFunctions[functionName] && localFunctions[functionName].url) {\r\n                        newInfo = getEquationFromUrl(localFunctions[functionName].url).context[functionName]\r\n                    } else if (localFunctions[functionName]) {\r\n                        newInfo = { context: localFunctions[functionName].context, text: localFunctions[functionName].text, unit: localFunctions[functionName].unit }\r\n                    } else if (premade[functionName]) {\r\n                        newInfo = getEquationFromUrl(premade[functionName].url).context[functionName]\r\n                    }\r\n                    closeEditor(true, { info: newInfo, value: functionName })\r\n                }}\r\n                options={editorValue && editorValue.info && editorValue.info.text !== '' ? [] : autocompleteOptions}\r\n            />\r\n        </StyledEditCell>\r\n    )\r\n}\r\n\r\nexport default function EditCell (props) {\r\n    const { label } = props\r\n    if (label) {\r\n        const { editorValue, editorRef, onChange, onKeyDown } = props\r\n\r\n        const textValue = typeof editorValue === 'object' ? editorValue.value : editorValue\r\n\r\n        return (\r\n            <StyledEditCell onKeyDown={onKeyDown}>\r\n                <Label>{label}</Label>\r\n                <StyledInput\r\n                    ref={editorRef}\r\n                    onChange={event => {\r\n                        onChange(event.target.value)\r\n                    }}\r\n                    value={textValue === undefined ? '' : textValue} />\r\n            </StyledEditCell>\r\n        )\r\n    } else {\r\n        return <EditEquation {...props} />\r\n    }\r\n}\r\n","import React, { useEffect, useReducer, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport DataGrid from 'components/DataGrid'\r\nimport Cell from 'components/Cell'\r\nimport EditCell from 'components/EditCell'\r\nimport { recursiveSolve, stripContext } from 'utils/math'\r\nimport { getLocalStorage, setLocalStorage, useLocalStorage } from 'utils/localStorage'\r\nimport premade from 'utils/premade.json'\r\n\r\nconst StyledSheet = styled.div`\r\n    min-height: 1px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n`\r\n\r\nconst Top = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    min-height: 42px;\r\n    background-color: ${styles.lightGray};\r\n    ${'' /* box-shadow: 0px 4px 8px #888;\r\n    border-radius: 3px; */}\r\n`\r\n\r\nconst Bottom = styled.div`\r\n    display: flex;\r\n    overflow: auto;\r\n    flex-grow: 1;\r\n`\r\n\r\nconst Left = styled.div`\r\n    width: 200px;\r\n    min-width: 200px;\r\n`\r\n\r\nconst Label = styled.div`\r\n    margin-top: 4px;\r\n    margin-left: 8px;\r\n    font-size: 1.1rem;\r\n`\r\n\r\nconst Result = styled.div`\r\n    position: absolute;\r\n    font-size: 1.1rem;\r\n    top: 78px;\r\n    left: 150px;\r\n`\r\n\r\nconst RowSection = styled.div`\r\n    display: flex;\r\n    margin-left: auto;\r\n`\r\n\r\nconst RowButton = styled.div`\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    color: ${styles.primaryColor};\r\n`\r\n\r\nexport default function Sheet (props) {\r\n    const [localFunctions, setLocalFunctions] = useLocalStorage({}, 'localFunctions')\r\n    const [dataGridEdit, setDataGridEdit] = useState({})\r\n    const [equationArray, dispatchEquation] = useReducer(equationReducer, { gridBody: [] })\r\n    const [initialSelectionCell, setInitialSelectionCell] = useState({})\r\n\r\n    useEffect(() => {\r\n        dispatchEquation({\r\n            type: 'equationInitialization',\r\n            equations: getLocalStorage('localEquations') || []\r\n        })\r\n    }, [])\r\n\r\n    function equationReducer (state, action) {\r\n        const res = {}\r\n        if (action.type === 'equationInitialization') {\r\n            res.equations = action.equations\r\n        } else if (action.type === 'equationUpdateCell') {\r\n            const { row, column, data } = action\r\n            const newEquations = [...state.equations]\r\n            if (column === 0) {\r\n                if (data) {\r\n                    newEquations[row] = data\r\n                } else {\r\n                    newEquations[row] = { value: '' }\r\n                }\r\n            } else {\r\n                if (!newEquations[row].localContext) {\r\n                    newEquations[row].localContext = {}\r\n                }\r\n                if (data === undefined || data === '') {\r\n                    delete newEquations[row].localContext[state.variableMap[row][column]]\r\n                } else {\r\n                    newEquations[row].localContext[state.variableMap[row][column]] = data\r\n                }\r\n            }\r\n            res.equations = newEquations\r\n        } else if (action.type === 'equationSet') {\r\n            const { info, row } = action\r\n            const newEquations = [...state.equations]\r\n            newEquations[row].text = info.text\r\n            newEquations[row].unit = info.unit\r\n            newEquations[row].context = info.context\r\n            newEquations[row].category = info.category\r\n            newEquations[row].notes = info.notes\r\n            res.equations = newEquations\r\n        } else if (action.type === 'addRow') {\r\n            const newEquations = [...state.equations]\r\n            const index = action.index === undefined ? newEquations.length : action.index\r\n            res.equations = newEquations.slice(0, index).concat([{ value: '' }], newEquations.slice(index))\r\n        } else if (action.type === 'deleteRow') {\r\n            const newEquations = [...state.equations]\r\n            const index = action.index === undefined ? newEquations.length - 1 : action.index\r\n            newEquations.splice(index, 1)\r\n            res.equations = newEquations\r\n        }\r\n        res.equations = setEquations(res.equations)\r\n        Object.assign(res, { ...getGridBodyMap(res.equations) })\r\n        return res\r\n    }\r\n\r\n    function saveNewFunction (newFunction, existingFunctions) {\r\n        const { name, category, context, notes, text, unit } = newFunction\r\n        const newFunctions = Object.assign({}, existingFunctions)\r\n        newFunctions[name] = {\r\n            category,\r\n            context: stripContext(context),\r\n            notes,\r\n            text,\r\n            unit,\r\n            date: Date.now()\r\n        }\r\n        setLocalFunctions(newFunctions)\r\n    }\r\n\r\n    function setEquations (equations) {\r\n        const newEquations = [...equations]\r\n        // fill with blank rows\r\n        if (!newEquations.length) {\r\n            for (var iterator = 0; iterator <= 20; iterator++) {\r\n                newEquations.push({ value: '' })\r\n            }\r\n        }\r\n        setLocalStorage('localEquations', newEquations)\r\n        return newEquations\r\n    }\r\n\r\n    function getGridBodyMap (equations) {\r\n        const variableMap = []\r\n        const sheetContext = {}\r\n        const gridBody = equations.map((equationObject, eqIndex) => {\r\n            const name = equationObject.value\r\n            variableMap.push([name])\r\n            const { text, unit, context = {} } = equationObject.info || {}\r\n            const localContext = equationObject.localContext\r\n            const inheritedContext = Object.assign({}, sheetContext, localContext)\r\n            const info = recursiveSolve({ text, unit, context: stripContext(context), inheritedContext })\r\n            if (!info.resolution.error) {\r\n                sheetContext[name] = info.resolution.solution\r\n            }\r\n            const uniqueMissingContext = info.fullMissingContext && info.fullMissingContext.reduce((prev, curr) => {\r\n                if (prev.includes(curr)) {\r\n                    return prev\r\n                } else {\r\n                    return prev.concat(curr)\r\n                }\r\n            }, [])\r\n            const res = [{\r\n                // Props passed into (edit) cell component\r\n                info,\r\n                autocompleteOptions: Object.keys(Object.assign({}, localFunctions, premade)).map(i => ({ id: i })),\r\n                localFunctions,\r\n                saveNewFunction,\r\n                solution: info.resolution.error ? `Missing: ${uniqueMissingContext.reduce((prev, curr) => {\r\n                    if (inheritedContext[curr]) {\r\n                        return prev\r\n                    } else {\r\n                        return prev.concat(curr)\r\n                    }\r\n                }, []).join(', ')}` : info.resolution.solution,\r\n                value: name\r\n            }]\r\n            if (uniqueMissingContext) {\r\n                uniqueMissingContext.forEach(key => {\r\n                    variableMap[eqIndex].push(key)\r\n                    res.push({\r\n                        label: key,\r\n                        value: '' + (inheritedContext[key] || (context[key] && context[key].text)),\r\n                        isInherited: !localContext || !localContext[key]\r\n                    })\r\n                })\r\n            }\r\n            return res\r\n        })\r\n        return {\r\n            gridBody,\r\n            variableMap\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledSheet>\r\n            <Top>\r\n                <Left>\r\n                    <Label>Name</Label>\r\n                    <Result>Value</Result>\r\n                </Left>\r\n                <RowSection>\r\n                    <RowButton onClick={() => dispatchEquation({ type: 'addRow', index: initialSelectionCell.row })}>Add Row</RowButton>\r\n                    <RowButton onClick={() => dispatchEquation({ type: 'deleteRow', index: initialSelectionCell.row })}>Delete Row</RowButton>\r\n                </RowSection>\r\n            </Top>\r\n            <Bottom>\r\n                <DataGrid\r\n                    editState={dataGridEdit}\r\n                    setEdit={editState => {\r\n                        if (editState.column === 0 && typeof editState.current === 'string') {\r\n                            const info = recursiveSolve({ text: '' })\r\n                            const newCurrent = {\r\n                                info,\r\n                                value: editState.current\r\n                            }\r\n                            editState.original = newCurrent\r\n                            editState.current = newCurrent\r\n                        }\r\n                        setDataGridEdit(editState)\r\n                    }}\r\n                    body={equationArray.gridBody}\r\n                    styles={{\r\n                        body: {\r\n                            edit: {\r\n                                borderRadius: 2,\r\n                                boxShadow: '0px 0px 3px 2px #CCC'\r\n                            },\r\n                            td: {\r\n                                borderRadius: 2,\r\n                                boxShadow: '0px 0px 3px 2px #CCC'\r\n                            }\r\n                        }\r\n                    }}\r\n                    initialSelectionCell={initialSelectionCell}\r\n                    setInitialSelectionCell={setInitialSelectionCell}\r\n                    highlightInitialColor={styles.lightOrange}\r\n                    highlightColor={styles.extraLightOrange}\r\n                    callback={(row, column, data) => {\r\n                        dispatchEquation({ type: 'equationUpdateCell', row, column, data })\r\n                    }}\r\n                    cellComponent={Cell}\r\n                    editComponent={EditCell}\r\n                    skipTabIndexes={[0]}\r\n                />\r\n            </Bottom>\r\n        </StyledSheet>\r\n    )\r\n}\r\n","import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\n\r\nconst StyledConnect = styled.div`\r\n    min-height: 1px;\r\n    overflow: auto;\r\n    width: 100%;\r\n    text-align: center;\r\n`\r\n\r\nconst Title = styled.div`\r\n    font-size: 1.5rem;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst SpaceView = () => {\r\n    return (\r\n        <StyledConnect>\r\n            <Title style={{ fontWeight: 'bold' }}>Space</Title>\r\n            <br />\r\n            Coming soon ...\r\n        </StyledConnect>\r\n    )\r\n}\r\n\r\nexport default SpaceView\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { withRouter } from 'react-router-dom'\r\nimport * as styles from 'styles'\r\n\r\nconst StyledHeader = styled.div`\r\n    background-color: ${styles.extraLightGray};\r\n    height: 62px;\r\n    min-height: 62px;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-grow: 0 !important;\r\n    justify-content: space-between;\r\n    ${'' /* box-shadow: 0px 4px 4px #888;\r\n    border-radius: 6px; */}\r\n`\r\n\r\nconst Image = styled.img`\r\n    margin-left: 2px;\r\n    height: 60px;\r\n`\r\n\r\nconst AfterImage = styled.div`\r\n    padding-left: 10px;\r\n`\r\n\r\nconst TitleLink = styled.div`\r\n    font-family: 'Ubuntu', sans-serif;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-top: 20px;\r\n`\r\n\r\nconst LinkHome = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n`\r\n\r\nconst ImageWrapper = styled.div`\r\n    color: black;\r\n    padding-left: 10px;\r\n`\r\n\r\nfunction Header (props) {\r\n    const { history } = props\r\n    return (\r\n        <StyledHeader>\r\n            <LinkHome onClick={() => history.push('/')}>\r\n                <ImageWrapper>\r\n                    <Image src='favicon.ico' alt='' />\r\n                </ImageWrapper>\r\n                <AfterImage>\r\n                    <TitleLink>Mathite</TitleLink>\r\n                </AfterImage>\r\n            </LinkHome>\r\n            {props.children}\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledHelp = styled.div`\r\n    position: fixed;\r\n    height: calc(100% - 64px);\r\n    width: 100%;\r\n    right: 0px;\r\n    top: 64px;\r\n    transition: top 200ms ease-in-out;\r\n    transition: height 200ms ease-in-out;\r\n    box-shadow: 0px -4px 8px #888;\r\n`\r\n\r\nexport default function Help (props) {\r\n    const { children, showHelp } = props\r\n    if (!showHelp) {\r\n        return null\r\n    }\r\n    return <StyledHelp>\r\n        {children}\r\n    </StyledHelp>\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\n\r\nconst StyledHelpButton = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n`\r\n\r\nconst StyledHelpButtonWithHover = styled.div`\r\n    color: black;\r\n    cursor: pointer;\r\n    border-radius: 30px;\r\n    ${styles.buttonHover('Help', 0)}\r\n`\r\n\r\nexport default function HelButton (props) {\r\n    if (props.hover) {\r\n        return (\r\n            <StyledHelpButtonWithHover {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <i className='material-icons' style={props.style}>help_outline</i>\r\n            </StyledHelpButtonWithHover>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledHelpButton {...props} style={{ ...props.style, backgroundColor: props.active ? styles.primaryColor : undefined }}>\r\n                <i className='material-icons' style={props.style}>help_outline</i>\r\n            </StyledHelpButton>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport ignoreList from 'utils/math/ignoreList'\r\nimport anvil from 'icons/anvil.svg'\r\nimport pickaxe from 'icons/pickaxe.svg'\r\n// import sword from 'icons/swords.svg'\r\nimport crown from 'icons/crown.svg'\r\nimport easel from 'icons/easel.svg'\r\n\r\nconst StyledHelp = styled.div`\r\n    background: ${styles.extraLightGray};\r\n    width: 100%;\r\n    border-radius: 9px;\r\n    height: 100%;\r\n`\r\n\r\nconst Body = styled.div`\r\n    padding: 20px;\r\n    overflow-y: auto;\r\n    height: calc(100% - 88px);\r\n`\r\n\r\nconst Close = styled.div`\r\n    cursor: pointer;\r\n    color: black;\r\n    position: absolute;\r\n    right: 10px;\r\n    i {\r\n        margin-top: 5px;\r\n        font-size: 2rem;\r\n        border-radius: 20px;\r\n        :hover {\r\n            background: white;\r\n        }\r\n    }\r\n`\r\n\r\nconst IgnoreList = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Item = styled.div`\r\n    width: 100px;\r\n    padding: 4px;\r\n`\r\n\r\nconst Text = styled.div`\r\n    padding: 6px;\r\n`\r\n\r\nconst StyledLink = styled.div`\r\n    display: contents;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Section = styled.div`\r\n    display: flex;\r\n    padding-bottom: 24px;\r\n`\r\n\r\nconst VerticalGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Title = styled.div`\r\n    font-size: 1.4rem;\r\n    padding-bottom: 8px;\r\n`\r\n\r\nconst Line = styled.div`\r\n    font-size: 1rem;\r\n    padding-bottom: 8px;\r\n`\r\n\r\nexport default function HelpSheet (props) {\r\n    const {\r\n        toggleHelp\r\n    } = props\r\n    return (\r\n        <StyledHelp>\r\n            <Close onClick={toggleHelp}>\r\n                <i className='material-icons'>close</i>\r\n            </Close>\r\n            <Title style={{ padding: 10 }}>\r\n                Help\r\n            </Title>\r\n            <Body>\r\n                <Text>\r\n                    <Section>\r\n                        <VerticalGroup>\r\n                            <Line>{'Show the sections that best fit your needs throughout your workflow.'}</Line>\r\n                            <Line>{'Easily share work with others by sending them the url for the current equation.'}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <Section>\r\n                        <img src={pickaxe} alt='Material' height={40} width={40} />\r\n                        <VerticalGroup>\r\n                            <Title>{'Define Variables'}</Title>\r\n                            <Line>{'Dynamically generate values for all of the undefined variables in your equations to be used with the command module.'}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <Section>\r\n                        <img src={anvil} alt='Forge' height={40} width={40} />\r\n                        <VerticalGroup>\r\n                            <Title>{'Build Equation'}</Title>\r\n                            <Line>{'Any textboxes in the first section (except Notes) will be used to create and solve a math problem.'}</Line>\r\n                            <Line>{'Alphabetical characters will be used as variables, and will add more blank textboxes.'}</Line>\r\n                            <Line>{'Variables can be defined as numbers, equations, more variables or any combination.'}</Line>\r\n                            <Line>{'Numbers before words will be used to multiply the variable.'}</Line>\r\n                            <Line>{'Numbers at the end of words will be used as part of the variable name as a subscript.'}</Line>\r\n                            <Line>{'Operators (+-*/()) separate variables.'}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <Section>\r\n                        <img src={easel} alt='Review' height={40} width={40} />\r\n                        <VerticalGroup>\r\n                            <Title>{'Review'}</Title>\r\n                            <Line>{'Visually validate your equation.'}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <Section>\r\n                        <img src={crown} alt='Command' height={40} width={40} />\r\n                        <VerticalGroup>\r\n                            <Title>{'Graph'}</Title>\r\n                            <Line>{'Graph your equation using variables left unspecified in the Equation section.'}</Line>\r\n                            <Line>{'Quickly see the changes that occur as you manipulate the Defined Variables (materials).'}</Line>\r\n                            <Line>{'Click on the labels for different lines to show/hide.'}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <Section>\r\n                        <i style={{ fontSize: 40 }} className='material-icons'>search</i>\r\n                        <VerticalGroup>\r\n                            <Title>{'Search'}</Title>\r\n                            <Line>{'Save functions on your device.'}</Line>\r\n                            <Line>{\"Be specific. It's easy to save a bunch of problems and then delete them later. But names must be unique.\"}</Line>\r\n                            <Line>{'Search saved functions and review your notes.'}</Line>\r\n                            <Line>{'Add the subject or other relevant tags to the beginning of notes to make them easier to find.'}</Line>\r\n                            <Line>{'There are no predefined categories. You make the categories by the notes and variables you create.'}</Line>\r\n                            <Line>{'Try typing \"finance\" into the search and see what premade functions are already there.'}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <br />\r\n                    <Line>{'Functions that cannot be used as variables:'}</Line>\r\n                </Text>\r\n                <IgnoreList>\r\n                    {ignoreList.map(func => {\r\n                        return <Item key={func}>{func}</Item>\r\n                    })}\r\n                </IgnoreList>\r\n                <Text>\r\n                    <br />\r\n                    Checkout <StyledLink><a href='http://mathjs.org/docs/reference/functions.html' target='_blank' rel='noopener noreferrer'>http://mathjs.org/docs/reference/functions.html</a></StyledLink> for an explanation of what the builtin functions do.\r\n                </Text>\r\n            </Body>\r\n        </StyledHelp>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport * as styles from 'styles'\r\nimport ignoreList from 'utils/math/ignoreList'\r\nimport anvil from 'icons/anvil.svg'\r\nimport pickaxe from 'icons/pickaxe.svg'\r\n// import sword from 'icons/swords.svg'\r\nimport crown from 'icons/crown.svg'\r\nimport easel from 'icons/easel.svg'\r\n\r\nconst StyledHelp = styled.div`\r\n    background: ${styles.extraLightGray};\r\n    width: 100%;\r\n    border-radius: 9px;\r\n    height: 100%;\r\n`\r\n\r\nconst Body = styled.div`\r\n    padding: 20px;\r\n    overflow-y: auto;\r\n    height: calc(100% - 88px);\r\n`\r\n\r\nconst Close = styled.div`\r\n    cursor: pointer;\r\n    color: black;\r\n    position: absolute;\r\n    right: 10px;\r\n    i {\r\n        margin-top: 5px;\r\n        font-size: 2rem;\r\n        border-radius: 20px;\r\n        :hover {\r\n            background: white;\r\n        }\r\n    }\r\n`\r\n\r\nconst IgnoreList = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Item = styled.div`\r\n    width: 100px;\r\n    padding: 4px;\r\n`\r\n\r\nconst Text = styled.div`\r\n    padding: 6px;\r\n`\r\n\r\nconst StyledLink = styled.div`\r\n    display: contents;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Section = styled.div`\r\n    display: flex;\r\n    padding-bottom: 24px;\r\n`\r\n\r\nconst VerticalGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Title = styled.div`\r\n    font-size: 1.4rem;\r\n    padding-bottom: 8px;\r\n`\r\n\r\nconst Line = styled.div`\r\n    font-size: 1rem;\r\n    padding-bottom: 8px;\r\n`\r\n\r\nexport default function HelpEquation (props) {\r\n    const {\r\n        toggleHelp\r\n    } = props\r\n    return (\r\n        <StyledHelp>\r\n            <Close onClick={toggleHelp}>\r\n                <i className='material-icons'>close</i>\r\n            </Close>\r\n            <Title style={{ padding: 10 }}>\r\n                Help\r\n            </Title>\r\n            <Body>\r\n                <Text>\r\n                    <Section>\r\n                        <VerticalGroup>\r\n                            <Line>{`Show the sections that best fit your needs throughout your workflow.`}</Line>\r\n                            <Line>{`Easily share work with others by sending them the url for the current equation.`}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <Section>\r\n                        <img src={pickaxe} alt='Material' height={40} width={40} />\r\n                        <VerticalGroup>\r\n                            <Title>{`Define Variables`}</Title>\r\n                            <Line>{`Dynamically generate values for all of the undefined variables in your equations to be used with the command module.`}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <Section>\r\n                        <img src={anvil} alt='Forge' height={40} width={40} />\r\n                        <VerticalGroup>\r\n                            <Title>{`Build Equation`}</Title>\r\n                            <Line>{`Any textboxes in the first section (except Notes) will be used to create and solve a math problem.`}</Line>\r\n                            <Line>{`Alphabetical characters will be used as variables, and will add more blank textboxes.`}</Line>\r\n                            <Line>{`Variables can be defined as numbers, equations, more variables or any combination.`}</Line>\r\n                            <Line>{`Numbers before words will be used to multiply the variable.`}</Line>\r\n                            <Line>{`Numbers at the end of words will be used as part of the variable name as a subscript.`}</Line>\r\n                            <Line>{`Operators (+-*/()) separate variables.`}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <Section>\r\n                        <img src={easel} alt='Review' height={40} width={40} />\r\n                        <VerticalGroup>\r\n                            <Title>{`Review`}</Title>\r\n                            <Line>{`Visually validate your equation.`}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    {/* <Section>\r\n                        <img src={sword} alt='Wield' height={40} width={40} />\r\n                        <VerticalGroup>\r\n                            <Title>{`Wield module`}</Title>\r\n                        </VerticalGroup>\r\n                    </Section> */}\r\n                    <Section>\r\n                        <img src={crown} alt='Command' height={40} width={40} />\r\n                        <VerticalGroup>\r\n                            <Title>{`Graph`}</Title>\r\n                            <Line>{`Graph your equation using variables left unspecified in the Equation section.`}</Line>\r\n                            <Line>{`Quickly see the changes that occur as you manipulate the Defined Variables (materials).`}</Line>\r\n                            <Line>{`Click on the labels for different lines to show/hide.`}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <Section>\r\n                        <i style={{ fontSize: 40 }} className='material-icons'>search</i>\r\n                        <VerticalGroup>\r\n                            <Title>{`Search`}</Title>\r\n                            <Line>{`Save functions on your device.`}</Line>\r\n                            <Line>{`Be specific. It's easy to save a bunch of problems and then delete them later. But names must be unique.`}</Line>\r\n                            <Line>{`Search saved functions and review your notes.`}</Line>\r\n                            <Line>{`Add the subject or other relevant tags to the beginning of notes to make them easier to find.`}</Line>\r\n                            <Line>{`There are no predefined categories. You make the categories by the notes and variables you create.`}</Line>\r\n                            <Line>{`Try typing \"finance\" into the search and see what premade functions are already there.`}</Line>\r\n                        </VerticalGroup>\r\n                    </Section>\r\n                    <br />\r\n                    <Line>{`Functions that cannot be used as variables:`}</Line>\r\n                </Text>\r\n                <IgnoreList>\r\n                    {ignoreList.map(func => {\r\n                        return <Item key={func}>{func}</Item>\r\n                    })}\r\n                </IgnoreList>\r\n                <Text>\r\n                    <br />\r\n                    Checkout <StyledLink><a href=\"http://mathjs.org/docs/reference/functions.html\" target='_blank' rel='noopener noreferrer'>http://mathjs.org/docs/reference/functions.html</a></StyledLink> for an explanation of what the builtin functions do.\r\n                </Text>\r\n            </Body>\r\n        </StyledHelp>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport HomePage from 'views/Home'\r\nimport DrawView from 'views/Draw'\r\nimport EquationView from 'views/Equation'\r\nimport SheetView from 'views/Sheet'\r\nimport SpaceView from 'views/Space'\r\nimport Header from 'components/Header'\r\nimport Help from 'components/Help'\r\nimport HelpButton from 'components/buttons/Help'\r\nimport HelpSheet from 'components/HelpSheet'\r\nimport HelpEquation from 'components/HelpEquation'\r\n// import Footer from 'components/Footer'\r\n\r\n/*\r\n    Extra small devices\r\n    @media (max-width:480px) {\r\n    }\r\n    Small devices\r\n    @media (max-width:768px) {\r\n    }\r\n    Medium devices\r\n    @media (max-width:992px) {\r\n    }\r\n    Large devices\r\n    @media (max-width:1200px) {\r\n    }\r\n*/\r\n\r\nconst StyledApp = styled.div`\r\n    font-family: 'Ubuntu', sans-serif;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    > div {\r\n        flex-grow: 1;\r\n    }\r\n\r\n    input {\r\n        font-family: 'Ubuntu', sans-serif;\r\n        border: none;\r\n    }\r\n`\r\n\r\nconst Menu = styled.div`\r\n    display: flex;\r\n    i {\r\n        font-size: 3rem;\r\n    }\r\n`\r\n\r\nconst MenuButton = styled.div`\r\n    padding: 5px;\r\n`\r\n\r\nexport default function App (props) {\r\n    const [showHelp, setShowHelp] = useState(false)\r\n\r\n    function toggleHelp () {\r\n        setShowHelp(!showHelp)\r\n    }\r\n\r\n    return (\r\n        <StyledApp>\r\n            <BrowserRouter>\r\n                <Header>\r\n                    <Route path='/(eq|sheet)' render={props => <Menu>\r\n                        <MenuButton>\r\n                            <HelpButton hover active={showHelp} onClick={toggleHelp} />\r\n                        </MenuButton>\r\n                    </Menu>} />\r\n                </Header>\r\n                <Switch>\r\n                    <Route path='/draw' render={props => <DrawView {...props} toggleHelp={toggleHelp} />}/>\r\n                    <Route path='/eq' render={props => <EquationView {...props} toggleHelp={toggleHelp} />}/>\r\n                    <Route path='/sheet' render={props => <SheetView {...props} toggleHelp={toggleHelp} />} />\r\n                    <Route path='/space' render={props => <SpaceView {...props} toggleHelp={toggleHelp} />}/>\r\n                    <Route path='/' render={props => <HomePage {...props} toggleHelp={toggleHelp} />}/>\r\n                </Switch>\r\n                <Help toggleHelp={toggleHelp} showHelp={showHelp}>\r\n                    <Switch>\r\n                        <Route path='/eq' render={props => <HelpEquation {...props} toggleHelp={toggleHelp} />} />\r\n                        <Route path='/sheet' render={props => <HelpSheet {...props} toggleHelp={toggleHelp} />} />\r\n                    </Switch>\r\n                </Help>\r\n                {/* <Footer /> */}\r\n            </BrowserRouter>\r\n        </StyledApp>\r\n    )\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n)\r\n\r\nexport default function register () {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.')\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type').indexOf('javascript') === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister () {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister()\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from 'views/App'\r\nimport registerServiceWorker from 'utils/registerServiceWorker'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('app')\r\n)\r\nregisterServiceWorker()\r\n","module.exports = __webpack_public_path__ + \"static/media/pickaxe.9907d5b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/anvil.76c698e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/crown.0375efa0.svg\";","module.exports = __webpack_public_path__ + \"static/media/easel.7909871e.svg\";"],"sourceRoot":""}